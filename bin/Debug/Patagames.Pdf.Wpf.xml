<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Patagames.Pdf.Wpf</name>
    </assembly>
    <members>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Helpers.Dpi">
            <summary>
            Gets current logical DPI
            </summary>
            <remarks>
            This will require restart the app if DPI is changed
            but it is too much overhead to check it on each conversion
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.Helpers.UnitsToPixels(System.Double)">
            <summary>
            Convert WPF units (DIPs - device independent pixels) to physical pixels.
            </summary>
            <param name="units">Device independent pixels</param>
            <returns>Physical pixels</returns>
            <remarks>1 DIP = 1/96 DPI</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.Helpers.PixelsToUnits(System.Int32)">
            <summary>
            Convert physical pixels to WPF units (DIPs - device independent pixels)
            </summary>
            <param name="pixels">Physical pixels</param>
            <returns>Device independent pixels</returns>
            <remarks>1 DIP = 1/96 DPI</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.Helpers.GetPixelOffset(System.Windows.UIElement)">
            <summary>
            Calculate pixel offset to prevent image blur.
            </summary>
            <param name="UI">UIElement in which the offset is calculated.</param>
            <returns>The offset point</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.Helpers.GetVisualTransform(System.Windows.Media.Visual)">
            <summary>
            Gets the matrix that will convert a point from "above" the
            coordinate space of a visual into the the coordinate space
            "below" the visual.
            </summary>
            <param name="v">Visual</param>
            <returns>Matrix</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.Helpers.Int32Size">
            <summary>
            Represents Int32 size
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.Helpers.Int32Point">
            <summary>
            Represents Int32 point
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo">
            <summary>
            Represents information about highlighted text in the control
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo.CharIndex">
            <summary>
            The starting character index of the highlighted text.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo.CharsCount">
            <summary>
            The number of highlighted characters in the text
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo.Color">
            <summary>
            Text highlighted color
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo.Inflate">
            <summary>
            Gets or sets delta values for each edge of the rectangles of the highlighted text.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.MouseModes">
            <summary>
            Specifies how the PdfViewer will process mouse events
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.MouseModes.Default">
            <summary>
            By default. Select text, process links
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.MouseModes.None">
            <summary>
            Any processing is missing
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.MouseModes.SelectTextTool">
            <summary>
            Select text only
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.MouseModes.PanTool">
            <summary>
            Move the page
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.PdfViewer">
            <summary>
            Represents a pdf view control for displaying a Pdf document.
            </summary>	
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.AfterDocumentChanged">
            <summary>
            Occurs whenever the Document property is changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.BeforeDocumentChanged">
            <summary>
            Occurs immediately before the document property would be changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentLoaded">
            <summary>
            Occurs whenever the document loads.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentClosing">
            <summary>
            Occurs before the document unloads.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentClosed">
            <summary>
            Occurs whenever the document unloads.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeModeChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeMode"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColorChanged">
            <summary>
            Event raised when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColor"/> property is changed on Control..
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMarginChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMargin"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColorChanged">
            <summary>
            Event raised when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColor"/> property is changed on Control.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColorChanged">
            <summary>
            Event raised when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColor"/> property is changed on Control.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColorChanged">
            <summary>
            Event raised when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColor"/> property is changed on Control.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ZoomChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Zoom"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectionChanged">
            <summary>
            Occurs when the current selection has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewModeChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewMode"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColorChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColor"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparatorChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparator"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPage"/> or <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentIndex"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColorChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColor"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlightChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlight"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageAlignChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageVAlign"/> or <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageHAlign"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.BeforeLinkClicked">
            <summary>
            Occurs before PdfLink or WebLink on the page was clicked.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.AfterLinkClicked">
            <summary>
            Occurs after PdfLink or WebLink on the page was clicked.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlagsChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlags"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCountChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCount"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightedTextChanged">
            <summary>
            Occurs when the text highlighting changed
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseModeChanged">
            <summary>
            Occurs when the value of the <see cref="T:Patagames.Pdf.Net.Controls.Wpf.MouseModes"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIconChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIcon"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRenderChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRender"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconTextChanged">
            <summary>
            Occurs when the value of the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconText"/> property has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendModeChanged">
            <summary>
            Occurs when the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendMode"/> property has changed.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnAfterDocumentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.AfterDocumentChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnBeforeDocumentChanged(Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.BeforeDocumentChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
            <returns>True if changing should be canceled, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnDocumentLoaded(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentLoaded"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnDocumentClosing(Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentClosing"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
            <returns>True if closing should be canceled, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnDocumentClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentClosed"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnSizeModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeModeChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPageBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPageMarginChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMarginChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPageBorderColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnTextSelectColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormHighlightColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnZoomChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ZoomChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectionChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnViewModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewModeChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPageSeparatorColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnShowPageSeparatorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparatorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnCurrentPageChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnCurrentPageHighlightColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColorChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnShowCurrentPageHighlightChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlightChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPageAlignChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageAlignChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnBeforeLinkClicked(Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.BeforeLinkClicked"/> event.
            </summary>
            <param name="e">An PdfBeforeLinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnAfterLinkClicked(Patagames.Pdf.Net.EventArguments.PdfAfterLinkClickedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.AfterLinkClicked"/> event.
            </summary>
            <param name="e">An PdfAfterLinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRenderFlagsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlagsChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnTilesCountChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCountChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnHighlightedTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightedTextChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseModeChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnShowLoadingIconChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIconChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnUseProgressiveRenderChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRenderChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnLoadingIconTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconTextChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsBlendModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendModeChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendModeProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendMode"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="T:Patagames.Pdf.Net.Controls.Wpf.PdfViewer"/>
            </summary>
            <remarks>
            <note type="note">
            Please note
            <list type="bullet">
            <item>
            The OneWay binding would be disabled if you set the Document property with a document what is not from the binding source. 
            More explanations can be found <a href="http://stackoverflow.com/questions/1389038/why-does-data-binding-break-in-oneway-mode">here</a>
            </item>
            <item>The TwoWay binding does not allow you to set the Document property with the document what is not from a binding source.</item>
            </list>
            </note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMarginProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMargin"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PaddingProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Padding"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeModeProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeMode"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ZoomProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Zoom"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectedTextProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectedText"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewModeProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewMode"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparatorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparator"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColorProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColor"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlightProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlight"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageVAlignProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageVAlign"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageHAlignProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageHAlign"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlagsProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlags"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCountProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCount"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseModeProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseMode"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIconProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIcon"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRenderProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRender"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconTextProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconText"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageAutoDisposeProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageAutoDispose"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OptimizedLoadThresholdProperty">
            <summary>
            DependencyProperty as the backing store for <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OptimizedLoadThreshold"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormsBlendMode">
            <summary>
            Gets or sets blend mode which is used in drawing of acro forms.
            </summary>
            <remarks>
            <para>Default value: <strong>FXDIB_BLEND_MULTIPLY</strong></para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Document">
            <summary>
            Gets or sets the PDF document associated with the current PdfViewer control.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DocumentProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColor">
            <summary>
            Gets or sets the background color for the control under PDF page.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBackColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMargin">
            <summary>
            Specifies space between pages margins
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageMarginProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Padding">
            <summary>
            Gets or sets the padding inside a control.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PaddingProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColor">
            <summary>
            Gets or sets the border color of the page
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageBorderColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeMode">
            <summary>
            Control how the PdfViewer will handle  pages placement and control sizing
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeModeProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColor">
            <summary>
            Gets or sets the selection color of the control.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TextSelectColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColor">
            <summary>
            Gets or set the highlight color of the form fields in the document.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FormHighlightColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.Zoom">
            <summary>
            This property allows you to scale the PDF page. To take effect the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SizeMode"/> property should be Zoom
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ZoomProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectedText">
            <summary>
            Gets selected text from PdfView control
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectedTextProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewMode">
            <summary>
            Control how the PdfViewer will display pages
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewModeProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColor">
            <summary>
            Gets or sets the page separator color.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageSeparatorColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparator">
            <summary>
            Determines whether the page separator is visible or hidden
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowPageSeparatorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColor">
            <summary>
            Gets or sets the current page highlight color.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPageHighlightColorProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlight">
            <summary>
            Determines whether the current page's highlight is visible or hidden.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowCurrentPageHighlightProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageVAlign">
            <summary>
            Gets or sets the vertical alignment of page in the control.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageVAlignProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageHAlign">
            <summary>
            Gets or sets the horizontal alignment of page in the control.
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageHAlignProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlags">
            <summary>
            Gets or sets a RenderFlags. None for normal display, or combination of <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlags"/>
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RenderFlagsProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCount">
            <summary>
            Gets or sets visible page count for tiles view mode
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.TilesCountProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseMode">
            <summary>
            Gets or sets mouse mode for PdfViewer control
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseModeProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIcon">
            <summary>
            Determines whether the page's loading icon should be shown
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ShowLoadingIconProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRender">
            <summary>
            If true the progressive rendering is used for render page
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UseProgressiveRenderProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconText">
            <summary>
            Gets or sets loading icon text in progressive rendering mode
            </summary>
            <remarks>It's a dependency property. Please find more details here: <see cref="F:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadingIconTextProperty"/></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageAutoDispose">
            <summary>
            Gets or sets a value indicating whether the PdfViewer will dispose any pages placed outside of its visible boundaries.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OptimizedLoadThreshold">
            <summary>
            Gets or sets the threshold value in the number of pages after which the optimized document load is activated.
            </summary>
            <value>Default: 1000</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.FillForms">
            <summary>
            Gets the Forms object associated with the current PdfViewer control.
            </summary>
            <remarks>The FillForms object are used for the correct processing of forms within the PdfViewer control</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectInfo">
            <summary>
            Gets information about selected text in a PdfView control
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentIndex">
            <summary>
            Gets or sets the current index of a page in PdfPageCollection
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentPage">
            <summary>
            Gets the current PdfPage item by <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CurrentIndex"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.AllowSetDocument">
            <summary>
            Gets or sets a value indicating whether the control can accept PDF document through Document property.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightedTextInfo">
            <summary>
            Gets information about highlighted text in a PdfView control
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ScrollToPage(System.Int32)">
            <summary>
            Scrolls the control view to the specified page.
            </summary>
            <param name="index">Zero-based index of a page.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ScrollToChar(System.Int32)">
            <summary>
            Scrolls the control view to the specified character on the current page
            </summary>
            <param name="charIndex">Character index</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ScrollToChar(System.Int32,System.Int32)">
            <summary>
            Scrolls the control view to the specified character on the specified page
            </summary>
            <param name="charIndex">Character index</param>
            <param name="pageIndex">Zero-based index of a page.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ScrollToPoint(System.Int32,System.Windows.Point)">
            <summary>
            Scrolls the control view to the specified point on the specified page
            </summary>
            <param name="pageIndex">Zero-based index of a page.</param>
            <param name="pagePoint">Point on the page in the page's coordinate system</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RotatePage(System.Int32,Patagames.Pdf.Enums.PageRotate)">
            <summary>
            Rotates the specified page to the specified angle.
            </summary>
            <param name="pageIndex">Zero-based index of a page for rotation.</param>
            <param name="angle">The angle which must be turned page</param>
            <remarks>The PDF page rotates clockwise. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectText(Patagames.Pdf.Net.Controls.Wpf.SelectInfo)">
            <summary>
            Selects the text contained in specified pages.
            </summary>
            <param name="SelInfo"><see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectInfo"/> structure that describe text selection parameters.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectText(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Selects the text contained in specified pages.
            </summary>
            <param name="startPage">Zero-based index of a starting page.</param>
            <param name="startIndex">Zero-based char index on a startPage.</param>
            <param name="endPage">Zero-based index of a ending page.</param>
            <param name="endIndex">Zero-based char index on a endPage.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DeselectText">
            <summary>
            Clear text selection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PointInPage(System.Windows.Point)">
            <summary>
            Determines if the specified point is contained within Pdf page.
            </summary>
            <param name="pt">The System.Drawing.Point to test.</param>
            <returns>
            This method returns the zero based page index if the point represented by pt is contained within this page; otherwise -1.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ClientToPage(System.Int32,System.Windows.Point)">
            <summary>
            Computes the location of the specified client point into page coordinates.
            </summary>
            <param name="pageIndex">Page index. Can be obtained by <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PointInPage(System.Windows.Point)"/> method.</param>
            <param name="pt">The client coordinate Point to convert. </param>
            <returns>A Point that represents the converted Point, pt, in page coordinates.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The page index is out of range</exception>
            <remarks>Permitted range of pages depends on the current view type and on some other parameters in the control.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageToClient(System.Int32,System.Windows.Point)">
            <summary>
            Computes the location of the specified page point into client coordinates.
            </summary>
            <param name="pageIndex">Page index. Can be obtained by <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PointInPage(System.Windows.Point)"/> method.</param>
            <param name="pt">The page coordinate Point to convert. </param>
            <returns>A Point that represents the converted Point, pt, in client coordinates.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The page index is out of range</exception>
            <remarks>Permitted range of pages depends on the current view type and on some other parameters in the control.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightText(System.Int32,Patagames.Pdf.Net.Controls.Wpf.HighlightInfo)">
            <summary>
            Highlight text on the page
            </summary>
            <param name="pageIndex">Zero-based index of the page</param>
            <param name="highlightInfo">Sets the options for highlighting text</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightText(System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Highlight text on the page
            </summary>
            <param name="pageIndex">Zero-based index of the page</param>
            <param name="charIndex">Zero-based char index on the page.</param>
            <param name="charsCount">The number of highlighted characters on the page or -1 for highlight text from charIndex to end of the page.</param>
            <param name="color">Highlight color</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightText(System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,Patagames.Pdf.FS_RECTF)">
            <summary>
            Highlight text on the page
            </summary>
            <param name="pageIndex">Zero-based index of the page</param>
            <param name="charIndex">Zero-based char index on the page.</param>
            <param name="charsCount">The number of highlighted characters on the page or -1 for highlight text from charIndex to end of the page.</param>
            <param name="color">Highlight color</param>
            <param name="inflate">A delta values for each edge of the rectangles of the highlighted text.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RemoveHighlightFromText">
            <summary>
            Removes highlight from the text
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RemoveHighlightFromText(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes highlight from the text
            </summary>
            <param name="pageIndex">Zero-based index of the page</param>
            <param name="charIndex">Zero-based char index on the page.</param>
            <param name="charsCount">The number of highlighted characters on the page or -1 for highlight text from charIndex to end of the page.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HilightSelectedText(System.Windows.Media.Color)">
            <summary>
            Highlight selected text on the page by specified color
            </summary>
            <param name="color">Highlight color</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HighlightSelectedText(System.Windows.Media.Color)">
            <summary>
            Highlight selected text on the page by specified color
            </summary>
            <param name="color">Highlight color</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RemoveHilightFromSelectedText">
            <summary>
            Removes highlight from selected text
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RemoveHighlightFromSelectedText">
            <summary>
            Removes highlight from selected text
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.UpdateDocLayout">
            <summary>
            Ensures that all sizes and positions of pages of a PdfViewer control are properly updated for layout.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ClearRenderBuffer">
            <summary>
            Clear internal render buffer for rerender pages in Progressive mode
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CalcActualRect(System.Int32)">
            <summary>
            Calculates the actual rectangle of the specified page in client coordinates
            </summary>
            <param name="index">Zero-based page index</param>
            <returns>Calculated rectangle</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.GetSelectedRects(System.Int32)">
            <summary>
            Get a collection of rectangles that represent the selected text on a specified page.
            </summary>
            <param name="pageIndex">Zero-based index of a page.</param>
            <returns>A collection of rectangles or an empty collection if the page does not contain selected text.</returns>
            <remarks>The rectangles are given in the user control coordinate system.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.GetSelectedRects(System.Int32,Patagames.Pdf.Net.Controls.Wpf.SelectInfo)">
            <summary>
            Get a collection of rectangles that represent the selected text on a specific page and in accordance with the specified <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectInfo"/> structure.
            </summary>
            <param name="pageIndex">Zero-based index of a page.</param>
            <param name="selInfo">A<see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SelectInfo"/> structure that represent the selected text.</param>
            <returns>A collection of rectangles or an empty collection if the page does not contain selected text.</returns>
            <remarks>The rectangles are given in the user control coordinate system.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.GetHighlightedRects(System.Int32,Patagames.Pdf.Net.Controls.Wpf.HighlightInfo)">
            <summary>
            Get a collection of rectangles that represent the highlighted text on a specific page and in accordance with the specified <see cref="T:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo"/> structure.
            </summary>
            <param name="pageIndex">Zero-based index of a page.</param>
            <param name="selInfo">A <see cref="T:Patagames.Pdf.Net.Controls.Wpf.HighlightInfo"/> structure that represent the highlighted text.</param>
            <returns>A collection of rectangles or an empty collection if the page does not contain highlighted text.</returns>
            <remarks>The rectangles are given in the user control coordinate system.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadDocument(System.String,System.String)">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <param name="path">Path to the PDF file (including extension)</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadDocument(System.IO.Stream,System.String)">
            <summary>
            Loads the PDF document from the specified stream.
            </summary>
            <param name="stream">The stream containing the PDF document to load. The stream must support seeking.</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            <para>The application should maintain the stream resources being valid until the PDF document close.</para>
            <para>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.</para>
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LoadDocument(System.Byte[],System.String)">
            <summary>
            Loads the PDF document from the specified byte array.
            </summary>
            <param name="pdf">The byte array containing the PDF document to load.</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            <para>The application should maintain the byte array being valid until the PDF document close.</para>
            <para>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.</para>
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CloseDocument">
            <summary>
            Close a loaded PDF document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.#ctor">
            <summary>
            Initializes a new instance of the PdfViewer class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Raises the System.Windows.FrameworkElement.SizeChanged event, using the specified information as part of the eventual event data.
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.Input.Mouse.MouseLeave attached event
            is raised on this element. Implement this method to add class handling for this
            event.
            </summary>
            <param name="e">The System.Windows.Input.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. 
            The rendering instructions for this element are not used directly when this method is invoked, and are instead 
            preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system. </param>
            <remarks>
            The OnRender method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners. A DrawingContext object is passed as an argument, which provides methods for drawing shapes, text, images or videos.
            Full page rendering is performed in the following order:
            <list type="bullet">
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageBackColor(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RegenerateAnnots(System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPage(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillForms(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillFormsSelection(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{System.Windows.Rect})"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextHighlight(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{Patagames.Pdf.Net.Controls.Wpf.HighlightInfo},System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextSelection(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.Controls.Wpf.SelectInfo,System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawRenderedPagesToDevice(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageSeparators(System.Windows.Media.DrawingContext,System.Collections.Generic.List{System.Windows.Point}@)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawLoadingIcon(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)"/> if page is still drawing</item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageBorder(System.Windows.Media.DrawingContext,System.Windows.Rect)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillFormsSelection(System.Windows.Media.DrawingContext,System.Collections.Generic.List{System.Windows.Rect})"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextHighlight(System.Windows.Media.DrawingContext,System.Collections.Generic.List{Patagames.Pdf.Net.Controls.Wpf.HighlightInfo},System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextSelection(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.Controls.Wpf.SelectInfo,System.Int32)"/></item>
            <item><see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawCurrentPageHighlight(System.Windows.Media.DrawingContext,System.Int32,System.Windows.Rect)"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.RegenerateAnnots(System.Int32)">
            <summary>
            Create an appearance stream for annotations which do not have this one.
            </summary>
            <param name="pageIndex">Page index with which annotations are associated.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the MouseDoubleClick event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseButtonEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDown event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseMove event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseUp event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.Input.Keyboard.PreviewKeyDown attached
            event reaches an element in its route that is derived from this class. Implement
             this method to add class handling for this event.
            </summary>
            <param name="e">The System.Windows.Input.KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.KeyUp event.
            </summary>
            <param name="e">A System.Windows.Forms.KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageBackColor(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws page background
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="x">Actual X position of the page</param>
            <param name="y">Actual Y position of the page</param>
            <param name="width">Actual width of the page</param>
            <param name="height">Actual height of the page</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPage(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)">
            <summary>
            Draws page content and fillforms
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="page">Page to be drawn</param>
            <param name="actualRect">Page bounds in control coordinates</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
            <returns>true if page was rendered; false if any error is occurred or page is still rendering.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillForms(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)">
            <summary>
            Draw fill forms
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="page">Page to be drawn</param>
            <param name="actualRect">Page bounds in control coordinates</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillFormsSelection(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{System.Windows.Rect})">
            <summary>
            Draws highlights inside a forms
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="selectedRectangles">A collection of rectangles to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextHighlight(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{Patagames.Pdf.Net.Controls.Wpf.HighlightInfo},System.Int32)">
            <summary>
            Draws text highlights
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="entries">Highlights info.</param>
            <param name="pageIndex">Page index to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextSelection(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.Controls.Wpf.SelectInfo,System.Int32)">
            <summary>
            Draws text selection
            </summary>
            <param name="bitmap">The drawing surface.</param>
            <param name="selInfo">Selection info</param>
            <param name="pageIndex">Page index to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawLoadingIcon(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.PdfPage,System.Windows.Rect)">
            <summary>
            Draw loading icon
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="page">Page to be drawn</param>
            <param name="actualRect">Page bounds in control coordinates</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageBorder(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Draws page's border
            </summary>
            <param name="drawingContext">The drawing context</param>
            <param name="BBox">Page's bounding box</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillFormsSelection(System.Windows.Media.DrawingContext,System.Collections.Generic.List{System.Windows.Rect})">
            <summary>
            Left for backward compatibility. Actually the fillforms selection is drawn in <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawFillFormsSelection(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{System.Windows.Rect})"/> method.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="selectedRectangles">A collection of rectangles to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextHighlight(System.Windows.Media.DrawingContext,System.Collections.Generic.List{Patagames.Pdf.Net.Controls.Wpf.HighlightInfo},System.Int32)">
            <summary>
            Left for backward compatibility. Actually the text highlight is drawn in <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextHighlight(Patagames.Pdf.Net.PdfBitmap,System.Collections.Generic.List{Patagames.Pdf.Net.Controls.Wpf.HighlightInfo},System.Int32)"/> method.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="entries">Highlights info.</param>
            <param name="pageIndex">Page index to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextSelection(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.Controls.Wpf.SelectInfo,System.Int32)">
            <summary>
            Left for backward compatibility. Actually the text selection is drawn in <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawTextSelection(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.Controls.Wpf.SelectInfo,System.Int32)"/> method.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="selInfo">Selection info</param>
            <param name="pageIndex">Page index to be drawn</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawCurrentPageHighlight(System.Windows.Media.DrawingContext,System.Int32,System.Windows.Rect)">
            <summary>
            Draws current page highlight
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="pageIndex">Page index to be drawn</param>
            <param name="actualRect">Page bounds in control coordinates</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawRenderedPagesToDevice(System.Windows.Media.DrawingContext,Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32)">
            <summary>
            Combine two buffers (rendered pages and forms) and draw them to graphics
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="canvasBitmap">Bitmap with rendered pages</param>
            <param name="formsBitmap">Bitmap with rendered forms</param>
            <param name="canvasWidth">Width of buffer</param>
            <param name="canvasHeight">Height of buffer</param>
            <remarks>
            This method should combine bitmaps with alpha blending and draw result to graphics surface.
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.DrawPageSeparators(System.Windows.Media.DrawingContext,System.Collections.Generic.List{System.Windows.Point}@)">
            <summary>
            Draws pages separatoes.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="separator">List of pair of points what represents separator</param>
            <remarks>
            Please see the remarks section of <see cref="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnRender(System.Windows.Media.DrawingContext)"/> for getting more info about page rendering order.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.InternalSetCursor(Patagames.Pdf.Enums.CursorTypes)">
            <summary>
            Sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
            <param name="cursor">A <see cref="T:Patagames.Pdf.Enums.CursorTypes"/> that represents the cursor to display when the mouse pointer is over the control.</param>
            <remarks>You can override this method to change the logic of cursor setting in the control.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsInvalidate(Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs)">
            <summary>
            Called by the engine when it is required to redraw the page
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsGotoPage(Patagames.Pdf.Net.EventArguments.EventArgs{System.Int32})">
            <summary>
            Called by the engine when it is required to execute GoTo operation
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsDoNamedAction(Patagames.Pdf.Net.EventArguments.EventArgs{System.String})">
            <summary>
            Called by the engine when it is required to execute a named action
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsDoGotoAction(Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs)">
            <summary>
            Called by the engine when it is required to execute a GoTo action
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsAppBeep(Patagames.Pdf.Net.EventArguments.EventArgs{Patagames.Pdf.Enums.BeepTypes})">
            <summary>
            Called by the engine when it is required to play the sound
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsOutputSelectedRect(Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs)">
            <summary>
            Called by the engine when it is required to draw selected regions in FillForms
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.OnFormsSetCursor(Patagames.Pdf.Net.EventArguments.SetCursorEventArgs)">
            <summary>
            Called by the engine when it is required to change the cursor
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CanVerticallyScroll">
            <summary>
            Gets or sets a value that indicates whether scrolling on the vertical axis is possible.
            </summary>
            <value>true if scrolling is possible; otherwise, false. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.CanHorizontallyScroll">
            <summary>
            Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.
            </summary>
            <value>true if scrolling is possible; otherwise, false. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ScrollOwner">
            <summary>
            Gets or sets a ScrollViewer element that controls scrolling behavior.
            </summary>
            <value>A ScrollViewer element that controls scrolling behavior. This property has no default value.</value>
            <remarks>Logical scrolling enables scrolling to the next element in the logical tree. Physical scrolling, in contrast, scrolls content by a defined measurable increment in a specified direction. If you require physical scrolling instead of logical scrolling, wrap the host Panel element in a ScrollViewer and set the value of its CanContentScroll property to false.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ExtentWidth">
            <summary>
            Gets the horizontal size of the extent.
            </summary>
            <value>A Double that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ExtentHeight">
            <summary>
            Gets the vertical size of the extent.
            </summary>
            <value>A Double that represents, in device independent pixels, the vertical size of the extent. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewportWidth">
            <summary>
            Gets the horizontal size of the viewport for this content.
            </summary>
            <value>A Double that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewportHeight">
            <summary>
            Gets the vertical size of the viewport for this content.
            </summary>
            <value>A Double that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.HorizontalOffset">
            <summary>
            Gets the horizontal offset of the scrolled content.
            </summary>
            <value>A Double that represents, in device independent pixels, the horizontal offset. This property has no default value.</value>
            <remarks>Valid values are between zero and the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ExtentWidth"/> minus the <see cref="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.ViewportWidth"/>.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.VerticalOffset">
            <summary>
            Gets the vertical offset of the scrolled content.
            </summary>
            <value>A Double that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the ExtentHeight minus the ViewportHeight. This property has no default value.</value>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SetVerticalOffset(System.Double)">
            <summary>
            Sets the amount of vertical offset.
            </summary>
            <param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.SetHorizontalOffset(System.Double)">
            <summary>
            Sets the amount of horizontal offset.
            </summary>
            <param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
            <summary>
            Forces content to scroll until the coordinate space of a Visual object is visible.
            </summary>
            <param name="visual">A Visual that becomes visible.</param>
            <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
            <returns>A Rect that is visible.</returns>
            <remarks>In most cases, the returned rectangle is a transformed version of the input rectangle. In some cases, such as when the input rectangle cannot fit entirely within the viewport, the return value may be smaller.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LineUp">
            <summary>
            Scrolls up within content by one logical unit.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LineDown">
            <summary>
            Scrolls down within content by one logical unit.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LineLeft">
            <summary>
            Scrolls left within content by one logical unit.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.LineRight">
            <summary>
            Scrolls right within content by one logical unit.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageUp">
            <summary>
            Scrolls up within content by one page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageDown">
            <summary>
            Scrolls down within content by one page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageLeft">
            <summary>
            Scrolls left within content by one page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.PageRight">
            <summary>
            Scrolls right within content by one page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseWheelUp">
            <summary>
            Scrolls up within content after a user clicks the wheel button on a mouse.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseWheelDown">
            <summary>
            Scrolls down within content after a user clicks the wheel button on a mouse.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseWheelLeft">
            <summary>
            Scrolls left within content after a user clicks the wheel button on a mouse.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfViewer.MouseWheelRight">
            <summary>
            Scrolls right within content after a user clicks the wheel button on a mouse.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PRCollection.IsNeedContinuePaint">
            <summary>
            Checks whether all visible pages are rendered
            </summary>
            <value>True if they still need to be painted, False otherwise.</value>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.IsNeedPause(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Checks whether rendering should be paused and control should be returned to UI thread.
            </summary>
            <returns>True means that application shoul continue painting.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.RenderPage(Patagames.Pdf.Net.PdfPage,System.Windows.Int32Rect,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Boolean)">
            <summary>
            Start/Continue progressive rendering for specified page
            </summary>
            <param name="page">Pdf page object</param>
            <param name="pageRect">Actual page's rectangle. </param>
            <param name="pageRotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="renderFlags">0 for normal display, or combination of flags defined above.</param>
            <param name="useProgressiveRender">True for use progressive render</param>
            <returns>Null if page still painting, PdfBitmap object if page successfully rendered.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.ProcessExisting(Patagames.Pdf.Net.PdfBitmap,Patagames.Pdf.Net.PdfPage,System.Windows.Int32Rect,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Process existing pages
            </summary>
            <returns>Null if page still painting, PdfBitmap object if page successfully rendered.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.ProcessNew(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Adds page into collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.PageRemove(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Delete page from colection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.ReleasePage(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Stops progressive rendering if need and unsubscribe events
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PRCollection.Page_Disposed(System.Object,System.EventArgs)">
            <summary>
            Occurs then the page is disposed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs">
            <summary>
            Represents the class that contain event data for the PrintPageLoaded event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs.Page">
            <summary>
            The page what will be printed.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs.Width">
            <summary>
            The page's width calculated to match the sheet size.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs.Height">
            <summary>
            The page's height calculated to match the sheet size.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs.Rotation">
            <summary>
            The page rotation.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.BeforeRenderPageEventArgs.#ctor(Patagames.Pdf.Net.PdfPage,System.Double,System.Double,Patagames.Pdf.Enums.PageRotate)">
            <summary>
            Construct new instnace of the PrintPageLoadedEventArgs class
            </summary>
            <param name="page">The page what will be printed.</param>
            <param name="width">The page's width calculated to match the sheet size.</param>
            <param name="height">The page's height calculated to match the sheet size.</param>
            <param name="rotation">The page rotation.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs">
            <summary>
            Provides data for the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PagePrinted"/> event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs.PageNumber">
            <summary>
            Zero-based number of a page which has been printed.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs.TotalToPrint">
            <summary>
            Indicates how many pages should be printed in current job.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the printing job should be canceled.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs new instance of PagePrintedEventArgs class
            </summary>
            <param name="PageNumber">Zero-based number of a page which has been printed.</param>
            <param name="TotalToPrint">Indicates how many pages should be printed in current job.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.PdfPrint">
            <summary>
            Provides methods to print the entire document asynchronously.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PrintStarted">
            <summary>
            Occurs when the print operation has been started.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PrintCompleted">
            <summary>
            Occurs when the print operation has completed or has been canceled.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PagePrinted">
            <summary>
            Occurs when the document's page gas been printed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.CancelationPending">
            <summary>
            Occurs when the cancelation has been requested.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.IsBusy">
            <summary>
            Gets a value that indicates whether the printing has running.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.OnPrintStarted">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PrintStarted"/> event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.OnPrintCompleted">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PrintCompleted"/> event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.OnPagePrinted(Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.PagePrinted"/> event.
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.Controls.Wpf.PagePrintedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.OnCancelationPending">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.CancelationPending"/> event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfPrint class.
            </summary>
            <param name="document">The instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.ShowDialog(System.Windows.Window)">
            <summary>
            Shows PrintDialog and starts asynchronous execution of a printing.
            </summary>
            <param name="window">Parent window for PrintDialog. If Null then PrintDialog not shown.</param>
            <remarks>This method does not breaks the previous operation before execute a new printing.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.StartPrintAsync">
            <summary>
            Starts asynchronous execution of a printing.
            </summary>
            <remarks>This method does not breaks the previous operation before execute a new printing.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrint.End">
            <summary>
            Requests cancellation of a printing.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument">
            <summary>
            Defines a reusable object that sends output to a printer, when printing from a Windows Forms application.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.BeforeRenderPage">
            <summary>
            Occurs after the page of the document is loaded and before prints.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.AutoRotate">
            <summary>
            Automatically rotate pages when printing
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.AutoCenter">
            <summary>
            Gets or sets a Boolean indicating whether a page will be centered automatically on the sheet when printing.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.Document">
            <summary>
            Gets or sets a value indicating the PDF document that will be printed.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.PrintSizeMode">
            <summary>
            Gets or sets the size mode for the pages.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.Scale">
            <summary>
            The scale of the pages in prcent. Must be between 1 and 1000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.RenderFlags">
            <summary>
            Gets or sets a combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/> for printing.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.#ctor(Patagames.Pdf.Net.PdfDocument,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument"/> class.
            </summary>
            <param name="Document">The document to print</param>
            <param name="mode">Reserved. Must be zero.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.OnBeforeRenderPage(Patagames.Pdf.Net.PdfPage,System.Double,System.Double,Patagames.Pdf.Enums.PageRotate)">
            <summary>
            Raises the BeforeRenderPage event.
            </summary>
            <param name="page">The pagewhat will be printed.</param>
            <param name="width">The page's width calculated to match the sheet size.</param>
            <param name="height">The page's height calculated to match the sheet size.</param>
            <param name="rotation">The page rotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Raises the System.Drawing.Printing.PrintDocument.BeginPrint event. It is called
            after the System.Drawing.Printing.PrintDocument.Print method is called and before
            the first page of the document prints.
            </summary>
            <param name="e">A System.Drawing.Printing.PrintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Raises the System.Drawing.Printing.PrintDocument.EndPrint event. It is called
            when the last page of the document has printed.
            </summary>
            <param name="e">A System.Drawing.Printing.PrintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Raises the System.Drawing.Printing.PrintDocument.PrintPage event. It is called
            before a page prints.
            </summary>
            <param name="e"> A System.Drawing.Printing.PrintPageEventArgs that contains the event data.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PrintProgress">
            <summary>
            Interaction logic for PrintProgress.xaml
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PrintProgress.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar">
            <summary>
            Represents the base functionality for all PdfToolBars
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType">
            <summary>
            Specifies what to render (image or text) for toolbar item
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType.ImageOnly">
            <summary>
            Specifies that only an image is to be rendered for toolbar item.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType.TextOnly">
            <summary>
             Specifies that only text is to be rendered for toolbar item.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType.ImageBeforeText">
            <summary>
            Specifies that both an image and text are to be rendered.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.PdfViewerProperty">
            <summary>
            DependencyProperty as the backing store for PdfViewer
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.PdfViewer">
            <summary>
            Gets or sets PdfViewer control associated with this PdfToolBar control
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.#ctor">
            <summary>
            Initialize the new instance of PdfToolBar class
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.UpdateButtons">
            <summary>
            Called when the ToolBars's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.CreateUriToResource(System.String)">
            <summary>
            Create the Uri to the resource with the specified name.
            </summary>
            <param name="resName">Resource's name.</param>
            <returns>Uri to the resource.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.CreateButton(System.String,System.String,System.String,System.Uri,System.Windows.RoutedEventHandler,System.Int32,System.Int32,Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType)">
            <summary>
            Create a new instance of Button class with the specified name that displays the specified text and image and that raises the Click event.
            </summary>
            <param name="name">The name of the Button.</param>
            <param name="text">The text to display on the Button.</param>
            <param name="toolTipText">Specify the text that appears as a ToolTip for a control.</param>
            <param name="imgRes">The image to display on the Button.</param>
            <param name="onClick">An event handler that raises the Click event.</param>
            <param name="imgWidth">Image width</param>
            <param name="imgHeight">Image height</param>
            <param name="imageTextType">Image and text layout</param>
            <returns>Newly created Button</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.CreateToggleButton(System.String,System.String,System.String,System.String,System.Windows.RoutedEventHandler,System.Int32,System.Int32,Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBar.ImageTextType)">
            <summary>
            Create a new instance of ToggleButon class with the specified name that displays the specified text and image and that raises the Click event.
            </summary>
            <param name="name">The name of the ToggleButton.</param>
            <param name="text">The text to display on the ToggleButton.</param>
            <param name="toolTipText">Specify the text that appears as a ToolTip for a control.</param>
            <param name="imgResName">The image name in resources to display on the ToggleButton.</param>
            <param name="onClick">An event handler that raises the Click event.</param>
            <param name="imgWidth">Image width</param>
            <param name="imgHeight">Image height</param>
            <param name="imageTextType">Image and text layout</param>
            <returns>Newly created ToggleButton</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for working with clipboard
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard.OnSelectAllClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Select All button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarClipboard.OnCopyClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Copy button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for opening and printing
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.PasswordRequired">
            <summary>
            Occurs when the loaded document protected by password. Application should return the password through Value property
            </summary>1
        </member>
        <member name="E:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.PdfPrintDocumentCreated">
            <summary>
            Occurs after an instance of PdfPrintDocument class is created and before printing is started.
            </summary>
            <remarks>
            You can use this event to get access to PdfPrintDialog which is used in printing routine.
            For example, the printing routine shows the standard dialog with printing progress. 
            If you want to suppress it you can write in event handler the following:
            <code>
            private void ToolbarMain1_PdfPrintDocumentCreated(object sender, EventArgs&lt;PdfPrintDocument&gt; e)
            {
            	e.Value.PrintController = new StandardPrintController();
            }
            </code>
            <note type="note">
            Because the PdfPrintDocumentis derived from standard System.Drawing.Printing.PrintDocument class you need to add the reference to System.Drawin assembly into your project.
            </note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.WindowProperty">
            <summary>
            DependencyProperty as the backing store for PdfViewer
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.Window">
            <summary>
            Sets the window there the Toolbar is hosted. If not specified then the PrintDialog will not be shown during printing.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.OnOpenClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Open button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.OnPasswordRequired">
            <summary>
            Occurs when the Loaded document protected by password. Application should return the password
            </summary>
            <returns>Password to the document must be returned.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.OnPrintClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Print button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarMain.OnPdfPrinDocumentCreaded(Patagames.Pdf.Net.EventArguments.EventArgs{Patagames.Pdf.Net.Controls.Wpf.PdfPrintDocument})">
            <summary>
            Occurs after an instance of PdfPrintDocument class is created and before printing is started.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for working with pages
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnPageNumberKeyDown(System.Windows.Controls.TextBox,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed and held down while the PageNumber textbox has focus.
            </summary>
            <param name="item">PageNumber item</param>
            <param name="e">Key event args</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnToBeginClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the First Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnToLeftClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Previous Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnToRightClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Next Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarPages.OnToEndClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Last Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for pages rotation
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate.OnRotateLeftClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Rotate Left button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarRotate.OnRotateRightClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Rotate Right button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for searching
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.InflateHighlight">
            <summary>
            Gets or sets delta values for each edge of the rectangles of the highlighted text.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.HighlightColor">
            <summary>
            Gets or sets the color of the found text.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.ActiveRecordColor">
            <summary>
            Gets or sets the color of the found text.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.SearchText">
            <summary>
            Gets or sets search text
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.SearchFlags">
            <summary>
            Gets or sets search flags
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.CurrentRecord">
            <summary>
            Gets or sets the current found record
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.TotalRecords">
            <summary>
            Gets the total number of found records
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.#ctor">
            <summary>
            Initialize the new instance of PdfToolBarSearch class
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.OnCurrentRecordChanged(System.Int32,System.Int32)">
            <summary>
            Called when current recordchanged
            </summary>
            <param name="currentRecord">The number of current record</param>
            <param name="totalRecords">The total number of records</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSearch.OnNeedSearch(Patagames.Pdf.Enums.FindFlags,System.String)">
            <summary>
            Called when the search routine should be launched
            </summary>
            <param name="searchFlags">Search flags</param>
            <param name="searchText">Text for search</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for changing pages size mode
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.OnActualSizeClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Actual Size button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.OnFitPageClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Fit Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.OnFitWidthClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Fit Width button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarSizes.OnFitHeightClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Fit Height button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for changing view modes
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnModeSingleClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Single Page button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnModeVerticalClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Continuous Vertical button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnModeHorizontalClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Continuous Horizontal button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnModeTilesClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Continuous Facing button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarViewModes.OnModeTwoPageClick(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Occurs when the Facing button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoom">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for zooming
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoom.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoom.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoom.OnComboBoxSelectionChanged(System.Windows.Controls.ComboBox,System.Int32)">
            <summary>
            Occurs the the selected index changed
            </summary>
            <param name="item">ComboBox</param>
            <param name="selectedIndex">Selected index</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoom.OnComboBoxKeyDown(System.Windows.Controls.ComboBox,System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed and held down while the ComboBox has focus.
            </summary>
            <param name="item">ComboBox</param>
            <param name="e">Key event args</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx">
            <summary>
            Provides a container for Windows toolbar objects with predefined functionality for zooming
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.ZoomLevel">
            <summary>
            Gets or sets the array with zoom values for ComboBox or TrackBar
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.Zoom">
            <summary>
            Calculate the current zoom
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.InitializeButtons">
            <summary>
            Create all buttons and add its into toolbar. Override this method to create custom buttons
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.UpdateButtons">
            <summary>
            Called when the ToolBar's items need to change its states
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnPdfViewerChanging(Patagames.Pdf.Net.Controls.Wpf.PdfViewer,Patagames.Pdf.Net.Controls.Wpf.PdfViewer)">
            <summary>
            Called when the current PdfViewer control associated with the ToolBar is changing.
            </summary>
            <param name="oldValue">PdfViewer control of which was associated with the ToolBar.</param>
            <param name="newValue">PdfViewer control of which will be associated with the ToolBar.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnToolBarOrientationChanged">
            <summary>
            Raises the LayoutCompleted event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the effective value of any dependency property on this System.Windows.FrameworkElement has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs).
            </summary>
            <param name="e"> The event data that describes the property that changed, as well as old and new values</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.SetZoom(System.Int32)">
            <summary>
            Sets specified zoom level for Pdf document
            </summary>
            <param name="zoomIndex">Index of the zoom in ZoomLevel</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.SetZoom(System.Double)">
            <summary>
            Sets specified zoom for Pdf document
            </summary>
            <param name="zoom">zoom value</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.CalcCurrentZoomLevel">
            <summary>
            Calculate zoom level for current <see cref="P:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.Zoom"/> and store it in internal field
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnTrackBarValueChanged(System.Windows.Controls.Slider)">
            <summary>
            Occurs when the Value property of a track bar changes, either by movement of the scroll box or by manipulation in code.
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnZoomLevelClick(System.Windows.Controls.Button,System.Double)">
            <summary>
            Occurs when the any item with zoom level clicked in ZoomDropDown button
            </summary>
            <param name="item">The item that has been clicked</param>
            <param name="zoom">The zoom value of item that was clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnZoomExInClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Zoom In button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnZoomExOutClick(System.Windows.Controls.Button)">
            <summary>
            Occurs when the Zoom Out button is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnActualSizeClick(System.Windows.Controls.MenuItem)">
            <summary>
            Occurs when the Actual Size item is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnFitPageClick(System.Windows.Controls.MenuItem)">
            <summary>
            Occurs when the Fit To Page item is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnFitWidthClick(System.Windows.Controls.MenuItem)">
            <summary>
            Occurs when the Fit To Width item is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.PdfToolBarZoomEx.OnFitHeightClick(System.Windows.Controls.MenuItem)">
            <summary>
            Occurs when the Fit To Height item is clicked
            </summary>
            <param name="item">The item that has been clicked</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ToolBars.SearchBar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.PrintSizeMode">
            <summary>
            Represents the scaling options of the page for printing
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PrintSizeMode.Fit">
            <summary>
            Fit page
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PrintSizeMode.ActualSize">
            <summary>
            Actual size
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.PrintSizeMode.CustomScale">
            <summary>
            Custom scale
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog">
            <summary>
            Replacement class for System.Windows.PrintDialog
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog.VerifyPrintSettings">
            <summary>
            Ensure Queue and Ticket prepared
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog.DefaultPrintQueue">
            <summary>
            PrintQueue
            </summary>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog.UpdateArea">
            <summary>
            Set Print Area
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
            <summary>
            Actually print an Xps Document with previously setup params
            </summary>
            <param name="paginator">Document to print</param>
            <param name="description">Description</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.ThreadSafePrintDialog.ShowDialog(System.IntPtr)">
            <summary>
            Show Dialog to allow user to adjust printer/settings
            </summary>
            <param name="hwnd">Window owner</param>
            <returns>True is user was ready to print</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog">
            <summary>
            Native Printing class wrapper. Calls Window's PrinatDlgEx
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.#ctor(System.IntPtr,Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog)">
            <summary>
            Constructor
            </summary>
            <param name="owner">The Owner Handle we will attach to</param>
            <param name="dialog"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.ShowPrintDlgEx">
            <summary>
            Show dialg and return result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.Finalize">
            <summary>
            Clean up
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.Is64Bits">
            <summary>
            Helper method to determine CPU mode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.AllocatePrintDlgExStruct">
            <summary>
            Allocate memory associated with PRINTDLGEX32 or PRINTDLGEX64 structures
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.DeallocatePrintDlgExStruct(System.IntPtr)">
            <summary>
            Frees memory associated with PRINTDLGEX32 or PRINTDLGEX64 structures
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.FindPrintQueue(System.String)">
            <summary>
            Get the PrintQueue from the PrinterName
            </summary>
            <param name="printerName"></param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.FindPrintTicket(System.IntPtr,System.String)">
            <summary>
            Find the PrintTicket for the queue
            </summary>
            <param name="dModeHnd"></param>
            <param name="printQueueName"></param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.InitializeDevMode(System.String,System.Printing.PrintTicket)">
            <summary>
            Creates DevMode structure from Ticket
            </summary>
            <param name="printerName"></param>
            <param name="printTicket"></param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.InitializeDevNames(System.String)">
            <summary>
            Set DevName structure memory
            </summary>
            <param name="printerName"></param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.GetResultPrintDlgExHnd(System.IntPtr)">
            <summary>
            Get dwResultAction from Dlg
            </summary>
            <param name="ptrPrintDlg"></param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.GetSettings(System.IntPtr,System.String@,System.UInt32@,System.Windows.Controls.PageRange@,System.IntPtr@)">
            <summary>
            Get various settings
            </summary>
            <param name="nativeBuffer"></param>
            <param name="printerName"></param>
            <param name="flags"></param>
            <param name="pageRange"></param>
            <param name="dModeHnd"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.Wpf.NativePrintDialog.PrintDlgEx.GetResult">
            <summary>
            Get's the result from the dialog
            </summary>
            <returns></returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.NativeMethods">
            <summary>
            Wrap PInvoke calls and structs
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnActualSizeText">
            <summary>
              Looks up a localized string similar to Actual Size.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnActualSizeToolTipText">
            <summary>
              Looks up a localized string similar to Set the zoom level to the page&apos;s actual size.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnCopyText">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnCopyToolTipText">
            <summary>
              Looks up a localized string similar to Copy the selection to the clipboard.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFirstPageText">
            <summary>
              Looks up a localized string similar to First Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFirstPageToolTipText">
            <summary>
              Looks up a localized string similar to View the first page of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitHeightText">
            <summary>
              Looks up a localized string similar to Fit Height.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitHeightToolTipText">
            <summary>
              Looks up a localized string similar to Set the zoom level so the page height fits the window height.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitPageText">
            <summary>
              Looks up a localized string similar to Fit Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitPageToolTipText">
            <summary>
              Looks up a localized string similar to Set the zoom level so one full page fits in the window.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitWidthText">
            <summary>
              Looks up a localized string similar to Fit Width.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnFitWidthToolTipText">
            <summary>
              Looks up a localized string similar to Set the zoom level so the page width fits the window width.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnLastPageText">
            <summary>
              Looks up a localized string similar to Last Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnLastPageToolTipText">
            <summary>
              Looks up a localized string similar to View the last page of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeHorizontalText">
            <summary>
              Looks up a localized string similar to Continuous Horizontal.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeHorizontalToolTipText">
            <summary>
              Looks up a localized string similar to View pages continuously with horizontal scrolling enabled.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeSingleText">
            <summary>
              Looks up a localized string similar to Single Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeSingleToolTipText">
            <summary>
              Looks up a localized string similar to View one page at time.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeTilesText">
            <summary>
              Looks up a localized string similar to Continuous Facing.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeTilesToolTipText">
            <summary>
              Looks up a localized string similar to View pages side-by-side with continuous scrolling enabled.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeTwoPageText">
            <summary>
              Looks up a localized string similar to Facing.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeTwoPageToolTipText">
            <summary>
              Looks up a localized string similar to View two pages side-by-side.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeVerticalText">
            <summary>
              Looks up a localized string similar to Continuous Vertical.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnModeVerticalToolTipText">
            <summary>
              Looks up a localized string similar to View pages continuously with vertical scrolling enabled.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnNextPageText">
            <summary>
              Looks up a localized string similar to Next Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnNextPageToolTipText">
            <summary>
              Looks up a localized string similar to Go forward one page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnOpenText">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnOpenToolTipText">
            <summary>
              Looks up a localized string similar to Click to open a PDF file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnPreviousPageText">
            <summary>
              Looks up a localized string similar to Previous Page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnPreviousPageToolTipText">
            <summary>
              Looks up a localized string similar to Go back one page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnPrintText">
            <summary>
              Looks up a localized string similar to Print.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnPrintToolTipText">
            <summary>
              Looks up a localized string similar to Click to print the PDF file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnRotateLeftText">
            <summary>
              Looks up a localized string similar to Rotate Left.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnRotateLeftToolTipText">
            <summary>
              Looks up a localized string similar to Rotate the page view 90 degrees counterclockwise.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnRotateRightText">
            <summary>
              Looks up a localized string similar to Rotate Right.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnRotateRightToolTipText">
            <summary>
              Looks up a localized string similar to Rotate the page view 90 degrees clockwise.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnSelectAllText">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnSelectAllToolTipText">
            <summary>
              Looks up a localized string similar to Select the entire document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomComboText">
            <summary>
              Looks up a localized string similar to Zoom.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomComboToolTipText">
            <summary>
              Looks up a localized string similar to Set the zoom level to a specific value.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomInText">
            <summary>
              Looks up a localized string similar to Zoom In.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomInToolTipText">
            <summary>
              Looks up a localized string similar to Increase the zoom level.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomOutText">
            <summary>
              Looks up a localized string similar to Zoom Out.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.btnZoomOutToolTipText">
            <summary>
              Looks up a localized string similar to Decrease the zoom level.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.err0001">
            <summary>
              Looks up a localized string similar to To set the document property instead of using LoadDocument method set the AllowSetDocument property to True. Please read the documentation before you do it..
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.err0002">
            <summary>
              Looks up a localized string similar to The page index is out of range..
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.err0003">
            <summary>
              Looks up a localized string similar to The value must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.ErrorHeader">
            <summary>
              Looks up a localized string similar to Error!.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.InfoHeader">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.LoadingText">
            <summary>
              Looks up a localized string similar to Loading....
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.menuItemMatchCase">
            <summary>
              Looks up a localized string similar to Match Case.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.menuItemMatchWholeWord">
            <summary>
              Looks up a localized string similar to Match Whole Word.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.OpenDialogFilter">
            <summary>
              Looks up a localized string similar to PDF Files (*.pdf)|*.pdf.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.searchLblnfo">
            <summary>
              Looks up a localized string similar to {0} of {1}.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.txtPrinting">
            <summary>
              Looks up a localized string similar to Printed page {0} / {1}.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.txtPrintingStop">
            <summary>
              Looks up a localized string similar to Please wait....
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.Wpf.Properties.Resources.txtPromptPrintAbort">
            <summary>
              Looks up a localized string similar to Are you sure you want to cancel the current print job?.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.SelectInfo">
            <summary>
            Represents the information about the selected text in the control
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SelectInfo.StartPage">
            <summary>
            Zero-based index of a starting page.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SelectInfo.StartIndex">
            <summary>
            Zero-based char index on a startPage.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SelectInfo.EndPage">
            <summary>
            Zero-based index of a ending page.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SelectInfo.EndIndex">
            <summary>
            Zero-based char index on a endPage.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.SizeModes">
            <summary>
            Specifies how an pdf page is positioned within a PdfView control.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SizeModes.FitToSize">
            <summary>
            The page is scaled to fit the page to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SizeModes.FitToWidth">
            <summary>
            Phe page is scaled to fit the width to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SizeModes.FitToHeight">
            <summary>
            The page is scaled to fit the height to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.SizeModes.Zoom">
            <summary>
            The page is scaled with specified coefficient.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.Wpf.ViewModes">
            <summary>
            Specifies how the PdfViewer will display pages
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.Vertical">
            <summary>
            View pages continuously with scrolling enabled
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.Horizontal">
            <summary>
            View pages continuously with scrolling at horizontal dimension
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.TilesVertical">
            <summary>
            View pages side-by-side with continuous scrolling enabled
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.TilesHorizontal">
            <summary>
            View pages side-by-side with continuous scrolling at horizontal dimension
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.SinglePage">
            <summary>
            View one page at a time.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.Wpf.ViewModes.TilesLine">
            <summary>
            View pages side-by-side
            </summary>
        </member>
    </members>
</doc>
