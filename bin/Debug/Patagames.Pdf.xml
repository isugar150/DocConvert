<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Patagames.Pdf</name>
    </assembly>
    <members>
        <member name="T:Patagames.Activation.Activation">
            <summary>
            Represents a class for working with activation of SDK
            </summary>
        </member>
        <member name="P:Patagames.Activation.Activation.InstallationPath">
            <summary>
            Gets the path to installation folder
            </summary>
            <value>Returns null if the SDK was not installed</value>
        </member>
        <member name="P:Patagames.Activation.Activation.x64Path">
            <summary>
            Gets the path to 64 bit pdfium dynamic library 
            </summary>
            <value>Returns null if the SDK was not installed</value>
        </member>
        <member name="P:Patagames.Activation.Activation.x86Path">
            <summary>
            Gets the path to 32 bit pdfium dynamic library
            </summary>
            <value>Returns null if the SDK was not installed</value>
        </member>
        <member name="P:Patagames.Activation.Activation.icuPath">
            <summary>
            Gets the path to icudt dynamic library
            </summary>
            <value>Returns null if the SDK was not installed</value>
        </member>
        <member name="P:Patagames.Activation.Activation.TrialDate">
            <summary>
            Gets the trial date from registry
            </summary>
            <value>Returns null if TRIAL was not stored into registry</value>
        </member>
        <member name="P:Patagames.Activation.Activation.MachineId">
            <summary>
            Calculates Machine ID
            </summary>
        </member>
        <member name="M:Patagames.Activation.Activation.GetCodeBasePath(System.Int32)">
            <summary>
            Gets the path there assembly is placed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Patagames.Activation.Activation.CopyNative(System.String,System.Boolean)">
            <summary>
            Copy native dlls to specified folder
            </summary>
            <param name="base_path">Folder where the files will be copied</param>
            <param name="is_check">if true then check that patagames assemblies contains in base_path folder </param>
            <remarks>This method creates x64 and x86 subfolders and copies appropriet file to them.
            This method do nothing if SDK was not properly installed
            </remarks>
        </member>
        <member name="M:Patagames.Activation.Activation.IsKeyActivated(System.String@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Checks if key was activated on this machine
            </summary>
            <param name="key">Receive key if it was activated</param>
            <param name="data">Key+Machine_id</param>
            <param name="hash">Sign of data</param>
            <returns>Returns trie if key was activated, false otherwise</returns>
            <remarks>This method calculate machine_id and check the hash</remarks>
        </member>
        <member name="T:Patagames.Activation.AsnKeyBuilder">
             <summary>
             A class file to aide in working with ASN.1 encoded
             objects such as PKCS#8 PrivateKeyInfo messages and
             X.509 PublicKeyInfo messages. Useful for exporting
             a RSA or DSA key for use in Java and other non-XML
             encoded key aware languages.
             </summary>
            
             <remarks>
             Jeffrey Walton
             </remarks>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.DSAParameters)">
            <summary>
            Returns the AsnMessage representing the X.509 PublicKeyInfo.
            </summary>
            <param name="publicKey">The DSA key to be encoded.</param>
            <returns>Returns the AsnType representing the
            X.509 PublicKeyInfo.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.DSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.RSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.RSAParameters)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.RSAParameters)">
            <summary>
            Returns the AsnMessage representing the X.509 PublicKeyInfo.
            </summary>
            <param name="publicKey">The RSA key to be encoded.</param>
            <returns>Returns the AsnType representing the
            X.509 PublicKeyInfo.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.DSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.RSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.DSAParameters)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.DSAParameters)">
            <summary>
            Returns AsnMessage representing the unencrypted
            PKCS #8 PrivateKeyInfo.
            </summary>
            <param name="privateKey">The DSA key to be encoded.</param>
            <returns>Returns the AsnType representing the unencrypted
            PKCS #8 PrivateKeyInfo.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.RSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.DSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.RSAParameters)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.RSAParameters)">
            <summary>
            Returns AsnMessage representing the unencrypted
            PKCS #8 PrivateKeyInfo.
            </summary>
            <param name="privateKey">The RSA key to be encoded.</param>
            <returns>Returns the AsnType representing the unencrypted
            PKCS #8 PrivateKeyInfo.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PrivateKeyToPKCS8(System.Security.Cryptography.DSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.DSAParameters)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.PublicKeyToX509(System.Security.Cryptography.RSAParameters)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType)">
            <summary>
            <para>An ordered collection of one or more types.
            Returns the AsnType representing an ASN.1 encoded sequence.</para>
            <para>If the AsnType is null, an empty sequence (length 0)
            is returned.</para>
            </summary>
            <param name="value">An AsnType consisting of
            a single value to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded sequence.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType[])">
            <summary>
            <para>An ordered collection of one or more types.
            Returns the AsnType representing an ASN.1 encoded sequence.</para>
            <para>If the AsnType is null, an
            empty sequence (length 0) is returned.</para>
            </summary>
            <param name="values">An array of AsnType consisting of
            the values in the collection to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded Set.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType)">
            <summary>
            <para>An ordered collection zero, one or more types.
            Returns the AsnType representing an ASN.1 encoded sequence.</para>
            <para>If the AsnType value is null,an
            empty sequence (length 0) is returned.</para>
            </summary>
            <param name="value">An AsnType consisting of
            a single value to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded sequence.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType[])">
            <summary>
            <para>An ordered collection zero, one or more types.
            Returns the AsnType representing an ASN.1 encoded sequence.</para>
            <para>If the AsnType array is null or the array is 0 length,
            an empty sequence (length 0) is returned.</para>
            </summary>
            <param name="values">An AsnType consisting of
            the values in the collection to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded sequence.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequence(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateSequenceOf(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])">
            <summary>
            <para>An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded bit string.</para>
            <para>If octets is null or length is 0, an empty (0 length)
            bit string is returned.</para>
            </summary>
            <param name="octets">A MSB (big endian) byte[] representing the
            bit string to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded bit string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)">
            <summary>
            <para>An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded bit string.</para>
            <para>unusedBits is applied to the end of the bit string,
            not the start of the bit string. unusedBits must be less than 8
            (the size of an octet). Refer to ITU X.680, Section 32.</para>
            <para>If octets is null or length is 0, an empty (0 length)
            bit string is returned.</para>
            </summary>
            <param name="octets">A MSB (big endian) byte[] representing the
            bit string to be encoded.</param>
            <param name="unusedBits">The number of unused trailing binary
            digits in the bit string to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded bit string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)">
            <summary>
            An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded bit string.
            If value is null, an empty (0 length) bit string is
            returned.
            </summary>
            <param name="value">An AsnType object to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded bit string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType[])">
            <summary>
            An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded bit string.
            If value is null, an empty (0 length) bit string is
            returned.
            </summary>
            <param name="values">An AsnType object to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded bit string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)">
            <summary>
            <para>An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded bit string.</para>
            <para>If octets is null or length is 0, an empty (0 length)
            bit string is returned.</para>
            <para>If conversion fails, the bit string returned is a partial
            bit string. The partial bit string ends at the octet before the
            point of failure (it does not include the octet which could
            not be parsed, or subsequent octets).</para>
            </summary>
            <param name="value">A MSB (big endian) byte[] representing the
            bit string to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded bit string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])">
            <summary>
            An ordered sequence of zero, one or more octets. Returns
            the ASN.1 encoded octet string. If octets is null or length
            is 0, an empty (0 length) octet string is returned.
            </summary>
            <param name="value">A MSB (big endian) byte[] representing the
            octet string to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded octet string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)">
            <summary>
            An ordered sequence of zero, one or more octets. Returns
            the byte[] representing an ASN.1 encoded octet string.
            If octets is null or length is 0, an empty (0 length)
            o ctet string is returned.
            </summary>
            <param name="value">An AsnType object to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded octet string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])">
            <summary>
            An ordered sequence of zero, one or more octets. Returns
            the byte[] representing an ASN.1 encoded octet string.
            If octets is null or length is 0, an empty (0 length)
            o ctet string is returned.
            </summary>
            <param name="values">An AsnType object to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded octet string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.String)">
            <summary>
            <para>An ordered sequence of zero, one or more bits. Returns
            the AsnType representing an ASN.1 encoded octet string.</para>
            <para>If octets is null or length is 0, an empty (0 length)
            octet string is returned.</para>
            <para>If conversion fails, the bit string returned is a partial
            bit string. The partial octet string ends at the octet before the
            point of failure (it does not include the octet which could
            not be parsed, or subsequent octets).</para>
            </summary>
            <param name="value">A string representing the
            octet string to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded octet string.</returns>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.Byte[],System.UInt32)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(System.String)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateBitString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType)"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOctetString(Patagames.Activation.AsnKeyBuilder.AsnType[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateInteger(System.Byte[])">
            <summary>
            <para>Returns the AsnType representing a ASN.1 encoded
            integer. The octets pass through this method are not modified.</para>
            <para>If octets is null or zero length, the method returns an
            AsnType equivalent to CreateInteger(byte[]{0})..</para>
            </summary>
            <param name="value">A MSB (big endian) byte[] representing the
            integer to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded integer.</returns>
            <example>
            ASN.1 encoded 0:
            <code>CreateInteger(null)</code>
            <code>CreateInteger(new byte[]{0x00})</code>
            <code>CreateInteger(new byte[]{0x00, 0x00})</code>
            </example>
            <example>
            ASN.1 encoded 1:
            <code>CreateInteger(new byte[]{0x01})</code>
            </example>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerPos(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerNeg(System.Byte[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerPos(System.Byte[])">
            <summary>
            <para>Returns the AsnType representing a positive ASN.1 encoded
            integer. If the high bit of most significant byte is set,
            the method prepends a 0x00 to octets before assigning the
            value to ensure the resulting integer is interpreted as
            positive in the application.</para>
            <para>If octets is null or zero length, the method returns an
            AsnType equivalent to CreateInteger(byte[]{0})..</para>
            </summary>
            <param name="value">A MSB (big endian) byte[] representing the
            integer to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded positive integer.</returns>
            <example>
            ASN.1 encoded 0:
            <code>CreateIntegerPos(null)</code>
            <code>CreateIntegerPos(new byte[]{0x00})</code>
            <code>CreateIntegerPos(new byte[]{0x00, 0x00})</code>
            </example>
            <example>
            ASN.1 encoded 1:
            <code>CreateInteger(new byte[]{0x01})</code>
            </example>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateInteger(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerNeg(System.Byte[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerNeg(System.Byte[])">
            <summary>
            <para>Returns the negative ASN.1 encoded integer. If the high
            bit of most significant byte is set, the integer is already
            considered negative.</para>
            <para>If the high bit of most significant byte
            is <bold>not</bold> set, the integer will be 2's complimented
            to form a negative integer.</para>
            <para>If octets is null or zero length, the method returns an
            AsnType equivalent to CreateInteger(byte[]{0})..</para>
            </summary>
            <param name="value">A MSB (big endian) byte[] representing the
            integer to be encoded.</param>
            <returns>Returns the negative ASN.1 encoded integer.</returns>
            <example>
            ASN.1 encoded 0:
            <code>CreateIntegerNeg(null)</code>
            <code>CreateIntegerNeg(new byte[]{0x00})</code>
            <code>CreateIntegerNeg(new byte[]{0x00, 0x00})</code>
            </example>
            <example>
            ASN.1 encoded -1 (2's compliment 0xFF):
            <code>CreateIntegerNeg(new byte[]{0x01})</code>
            </example>
            <example>
            ASN.1 encoded -2 (2's compliment 0xFE):
            <code>CreateIntegerNeg(new byte[]{0x02})</code>
            </example>
            <example>
            ASN.1 encoded -1:
            <code>CreateIntegerNeg(new byte[]{0xFF})</code>
            <code>CreateIntegerNeg(new byte[]{0xFF,0xFF})</code>
            Note: already negative since the high bit is set.</example>
            <example>
            ASN.1 encoded -255 (2's compliment 0xFF, 0x01):
            <code>CreateIntegerNeg(new byte[]{0x00,0xFF})</code>
            </example>
            <example>
            ASN.1 encoded -255 (2's compliment 0xFF, 0xFF, 0x01):
            <code>CreateIntegerNeg(new byte[]{0x00,0x00,0xFF})</code>
            </example>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateInteger(System.Byte[])"/>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateIntegerPos(System.Byte[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateNull">
            <summary>
            Returns the AsnType representing an ASN.1 encoded null.
            </summary>
            <returns>Returns the AsnType representing an ASN.1
            encoded null.</returns>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.TrimStart(System.Byte[])">
            <summary>
            Removes leading 0x00 octets from the byte[] octets. This
            method may return an empty byte array (0 length).
            </summary>
            <param name="octets">An array of octets to trim.</param>
            <returns>A byte[] with leading 0x00 octets removed.</returns>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.TrimEnd(System.Byte[])">
            <summary>
            Removes trailing 0x00 octets from the byte[] octets. This
            method may return an empty byte array (0 length).
            </summary>
            <param name="octets">An array of octets to trim.</param>
            <returns>A byte[] with trailing 0x00 octets removed.</returns>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOid(System.String)">
            <summary>
            Returns the AsnType representing an ASN.1 encoded OID.
            If conversion fails, the result is a partial conversion
            up to the point of failure. If the oid string is null or
            not well formed, an empty byte[] is returned.
            </summary>
            <param name="value">The string representing the object
            identifier to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded object identifier.</returns>
            <example>The following assigns the encoded AsnType
            for a RSA key to oid:
            <code>AsnType oid = CreateOid("1.2.840.113549.1.1.1")</code>
            </example>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOid(System.Byte[])"/>
        </member>
        <member name="M:Patagames.Activation.AsnKeyBuilder.CreateOid(System.Byte[])">
            <summary>
            Returns the AsnType representing an ASN.1 encoded OID.
            If conversion fails, the result is a partial conversion
            (up to the point of failure). If octets is null, an
            empty byte[] is returned.
            </summary>
            <param name="value">The packed byte[] representing the object
            identifier to be encoded.</param>
            <returns>Returns the AsnType representing an ASN.1
            encoded object identifier.</returns>
            <example>The following assigns the encoded AsnType for a RSA
            key to oid:
            <code>// Packed 1.2.840.113549.1.1.1
            byte[] rsa = new byte[] { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01 };
            AsnType = CreateOid(rsa)</code>
            </example>
            <seealso cref="M:Patagames.Activation.AsnKeyBuilder.CreateOid(System.String)"/>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.CasePreservedNames">
            <summary>
            The file system preserves the case of file names when it places a name on disk.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.CaseSensitiveSearch">
            <summary>
            The file system supports case-sensitive file names.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.DaxVolume">
            <summary>
            The specified volume is a direct access (DAX) volume. This flag was introduced in Windows 10, version 1607.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.FileCompression">
            <summary>
            The file system supports file-based compression.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.NamedStreams">
            <summary>
            The file system supports named streams.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.PersistentACLS">
            <summary>
            The file system preserves and enforces access control lists (ACL).
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.ReadOnlyVolume">
            <summary>
            The specified volume is read-only.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SequentialWriteOnce">
            <summary>
            The volume supports a single sequential write.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsEncryption">
            <summary>
            The file system supports the Encrypted File System (EFS).
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsExtendedAttributes">
            <summary>
            The specified volume supports extended attributes. An extended attribute is a piece of
            application-specific metadata that an application can associate with a file and is not part
            of the file's data.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsHardLinks">
            <summary>
            The specified volume supports hard links. For more information, see Hard Links and Junctions.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsObjectIDs">
            <summary>
            The file system supports object identifiers.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsOpenByFileId">
            <summary>
            The file system supports open by FileID. For more information, see FILE_ID_BOTH_DIR_INFO.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsReparsePoints">
            <summary>
            The file system supports re-parse points.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsSparseFiles">
            <summary>
            The file system supports sparse files.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsTransactions">
            <summary>
            The volume supports transactions.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.SupportsUsnJournal">
            <summary>
            The specified volume supports update sequence number (USN) journals. For more information,
            see Change Journal Records.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.UnicodeOnDisk">
            <summary>
            The file system supports Unicode in file names as they appear on disk.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.VolumeIsCompressed">
            <summary>
            The specified volume is a compressed volume, for example, a DoubleSpace volume.
            </summary>
        </member>
        <member name="F:Patagames.Activation.FileSystemFeature.VolumeQuotas">
            <summary>
            The file system supports disk quotas.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ActionTypes">
            <summary>
            A type of action associated with bookmark
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Unsupported">
            <summary>
            Unsupported action type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.CurrentDoc">
            <summary>
            Go to a destination within current document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.ExternalDoc">
            <summary>
            Go to a destination within another document
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Uri">
            <summary>
            Universal Resource Identifier, including web pages and other Internet based resources
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Application">
            <summary>
            Launch an application or open a file
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.AnnotationIntent">
            <summary>
            Represents the intent of the markup annotation.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.Unknown">
            <summary>
            Unknown intent name.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.None">
            <summary>
            The intent is not set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.FreeTextCallout">
            <summary>
            The annotation is intended to function as a callout. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.FreeTextTypeWriter">
            <summary>
            The annotation is intended to function as a click-to-type or typewriter object. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.LineArrow">
            <summary>
            The annotation is intended to function as an arrow. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.LineDimension">
            <summary>
            The annotation is intended to function as a dimension line. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.PolygonCloud">
            <summary>
            The annotation is intended to function as a cloud object. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.PolyLineDimension">
            <summary>
            The polyline annotation is intended to function as a dimension. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationIntent.PolygonDimension">
            <summary>
            The polygon annotation is intended to function as a dimension. Applied to <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.AppearanceStreamModes">
            <summary>
            Represents an annotation appearance mode
            </summary>
            <remarks>
            An annotation can define as many as three separate appearances
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.AppearanceStreamModes.Normal">
            <summary>
            The normal appearance is used when the annotation is not interacting with the
            user. This appearance is also used for printing the annotation.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AppearanceStreamModes.Rollover">
            <summary>
            The rollover appearance is used when the user moves the cursor into the annotation’s active area without pressing the mouse button.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AppearanceStreamModes.Down">
            <summary>
            The down appearance is used when the mouse button is pressed or held down within the annotation’s active area.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.AnnotationFlags">
            <summary>
            Flags used by <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Flags"/>
            </summary>
            <remarks>
            If the NoZoom flag is set, the annotation always maintains the same fixed size on
            the screen and is unaffected by the magnification level at which the page itself is
            displayed. Similarly, if the NoRotate flag is set, the annotation retains its original
            orientation on the screen when the page is rotated.
            <para>
            In either case, the annotation’s position is determined by the coordinates of the
            upper-left corner of its annotation rectangle, as defined by the Rect entry in the
            annotation dictionary and interpreted in the default user space of the page.When
            the default user space is scaled or rotated, the positions of the other three corners
            of the annotation rectangle are different in the altered user space than they were
            in the original user space.The viewer application performs this alteration automatically. 
            However, it does not actually change the annotation’s Rect entry, which
            continues to describe the annotation’s relationship with the unscaled, unrotated
            user space.
            </para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.None">
            <summary>
            No any flags are setted.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.Invisible">
            <summary>
            If set, do not display the annotation if it does not belong to one of the standard annotation types and no annotation handler is available. If clear, display such an unknown annotation using an appearance stream specified by its appearance dictionary, if any.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.Hidden">
            <summary>
            If set, do not display or print the annotation or allow it to interact
            with the user, regardless of its annotation type or whether an annotation
            handler is available. In cases where screen space is limited, the ability to hide
            and show annotations selectively can be used in combination with appearance
            streams to display auxiliary pop-up
            information similar in function to online help systems. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.Print">
            <summary>
            If set, print the annotation when the page is printed. If clear, never
            print the annotation, regardless of whether it is displayed on the screen. This
            can be useful, for example, for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.NoZoom">
            <summary>
            If set, do not scale the annotation’s appearance to match the magnification of the page. The location of the annotation on the page (defined by
            the upper-left corner of its annotation rectangle) remains fixed, regardless of
            the page magnification. See remarks for further discussion.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.NoRotate">
            <summary>
            If set, do not rotate the annotation’s appearance to match the rotation of the page. The upper-left corner of the annotation rectangle remains in
            a fixed location on the page, regardless of the page rotation. See remarks for further discussion.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.NoView">
            <summary>
            If set, do not display the annotation on the screen or allow it to
            interact with the user. The annotation may be printed (depending on the
            setting of the Print flag) but should be considered hidden for purposes of onscreen display and user interaction.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.ReadOnly">
            <summary>
            If set, do not allow the annotation to interact with the user. The
            annotation may be displayed or printed (depending on the settings of the
            NoView and Print flags) but should not respond to mouse clicks or change its
            appearance in response to mouse motions.
            <note type="note">This flag is ignored for widget annotations; its function is subsumed by the ReadOnly flag of the associated form field </note>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.Locked">
            <summary>
            If set, do not allow the annotation to be deleted or its properties (including position and size) to be modified by the user. However, this flag does
            not restrict changes to the annotation’s contents, such as the value of a form field. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.ToggleNoView">
            <summary>
            If set, invert the interpretation of the NoView flag for certain
            events. A typical use is to have an annotation that appears only when a mouse cursor is held over it.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationFlags.LockedContents">
            <summary>
            If set, do not allow the contents of the annotation to be modified by
            the user. This flag does not restrict deletion of the annotation or changes to
            other annotation properties, such as position and size.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BorderEffects">
            <summary>
            Represents the border effects
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderEffects.None">
            <summary>
            No effect: the border is as described by the annotation dictionary’s BS entry.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderEffects.Cloudy">
            <summary>
            The border should appear “cloudy”. The width and dash array specified by BS are ignored.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BorderStyles">
            <summary>
            Represents the border style.
            </summary>
            <remarks>
            Other border styles may be defined in the future. Default value: <strong>Solid</strong>.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderStyles.Solid">
            <summary>
            A solid rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderStyles.Dashed">
            <summary>
            A dashed rectangle surrounding the annotation. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderStyles.Beveled">
            <summary>
            A simulated embossed rectangle that appears to be raised above the surface of the page.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderStyles.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BorderStyles.Underline">
            <summary>
            A single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.CaptionPositions">
            <summary>
            Represents the position of the caption for the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CaptionPositions.Inline">
            <summary>
             the caption will be centered inside the line.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CaptionPositions.Top">
            <summary>
            the caption will be on top of the line
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.EncriptionAlgorithm">
            <summary>
            A type of action associated with bookmark
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.EncriptionAlgorithm.AES128">
            <summary>
            The Advanced Encryption Standard algorithm with a key length of 128 bits is used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.EncriptionAlgorithm.AES256">
            <summary>
            The Advanced Encryption Standard algorithm with a key length of 256 bits is used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.EncriptionAlgorithm.ARCFour128">
            <summary>
            The Alleged Rivest Cipher 4 algorithm with a key length of 128 bits is used.
            </summary>
            <remarks>
            RC4 is a copyrighted, proprietary algorithm of RSA Security, Inc. Independent
            software vendors may be required to license RC4 to develop software that encrypts
            or decrypts PDF documents.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.FileIconNames">
            <summary>
            Represents the name of an icon to be used in displaying the file attachment annotation. 
            </summary>
            <remarks>
            Viewer applications should provide predefined icon appearances for at least the following standard names.
            <para>Additional names may be supported as well.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FileIconNames.PushPin">
            <summary>
            Note icon (Default)
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FileIconNames.Graph">
            <summary>
            Graph icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FileIconNames.Paperclip">
            <summary>
            Paper clip icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FileIconNames.Tag">
            <summary>
            Tag icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FileIconNames.Extended">
            <summary>
            Please see <see cref="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.ExtendedIconName"/> property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IconNames">
            <summary>
            Represents the name of an icon to be used in displaying the annotation. 
            </summary>
            <remarks>
            Viewer applications should provide predefined icon appearances for at least the following standard names.
            <para>Additional names may be supported as well. Default value: Note.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Note">
            <summary>
            Note icon (Default)
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Comment">
            <summary>
            Comment icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Key">
            <summary>
            Key icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Help">
            <summary>
            Help icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.NewParagraph">
            <summary>
            Mew paragraph icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Paragraph">
            <summary>
            Paragraph icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Insert">
            <summary>
            Insert icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconNames.Extended">
            <summary>
            Please see <see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.ExtendedIconName"/> property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.StateModels">
            <summary>
            Representsthe group of <see cref="T:Patagames.Pdf.Enums.AnnotationStates"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StateModels.Marked">
            <summary>
            Marked annotations
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StateModels.Review">
            <summary>
            Review
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.AnnotationStates">
            <summary>
            Represents the annotation states
            </summary>
            <remarks>
            Beginning with PDF 1.5, annotations may have an author-specific state associated
            with them. The state is not specified in the annotation itself but in a separate text
            annotation that refers to the original annotation by means of its <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/> property. 
            States are grouped into a number of <see cref="T:Patagames.Pdf.Enums.StateModels"/>.
            <para>
            Annotations can be thought of as initially being in the default state for each state model. 
            State changes made by a user are indicated in a text annotation with the following entries:
            <list type="bullet">
            <item>The <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Text"/> property specifies the user.</item>
            <item>The <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/> property refers to the original annotation.</item>
            <item><see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.State"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.StateModel"/> update the state of the original annotation for the specified user.</item>
            </list>
            </para>
            Additional state changes are made by adding text annotations in reply to the previous reply for a given user.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Unmarked">
            <summary>
            (Marked) The annotation has not been marked by the user (the default for the Marked sate model)
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Marked">
            <summary>
            (Marked) The annotation has been marked by the user.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.None">
            <summary>
            (Review) The user has indicated nothing about the change (the default for the Review state model).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Accepted">
            <summary>
            (Review) The user agrees with the change.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Rejected">
            <summary>
            (Review) The user disagrees with the change.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Cancelled">
            <summary>
            (Review) The change has been cancelled.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.AnnotationStates.Completed">
            <summary>
            (Review) The change has been completed.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BeepTypes">
            <summary>
            The sound type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Error">
            <summary>
            Error sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Warning">
            <summary>
            Warning sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Question">
            <summary>
            Question sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Status">
            <summary>
            Status sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Default">
            <summary>
            Default sound
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BitmapChannels">
            <summary>
            Bitmap's channels
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BlendTypes">
            <summary>
            Represents the blend modes
            </summary>
            <remarks>
            <para>Photoshop’s hue, saturation, color, and luminosity blend modes are based on a color space with dimensions that the article HSL and HSV calls hue, chroma, and luma.</para>
            <para>Because these blend modes are based on a color space which is much closer than RGB to perceptually relevant dimensions, it can be used to correct the color of an image without altering perceived lightness, and to manipulate lightness contrast without changing the hue or chroma. The Luminosity mode is commonly used for image sharpening, because human vision is much more sensitive to fine-scale lightness contrast than color contrast.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_UNSUPPORTED">
            <summary>
            Unsupported blend mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_NORMAL">
            <summary>
            The foreground color is fully opaque, except for objects for which the opacity is set to less than 100 percent.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_MULTIPLY">
            <summary>
            The <strong>Multiply</strong> blend mode always creates a darker color (except when the foreground or background color is white, in which case no change occurs). <strong>Multiply</strong> is like overprinting two inks. For example, setting a yellow box to <strong>Multiply</strong> and putting the box over a blue area would give you green.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_SCREEN">
            <summary>
            The <strong>Screen</strong> blend mode (which some other applications call "light") is like projecting two or more colored lights at a white wall. The result is almost always lighter than the original colors. If you position a red path, a green path, and a blue path on top of each other and set them to the <strong>Screen</strong> blend mode, the result is white.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_OVERLAY">
            <summary>
            Overlay combines Multiply and Screen blend modes. The parts of the top layer where the base layer is light become lighter, the parts where the base layer is dark become darker. Areas where the top layer are mid grey are unaffected. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_DARKEN">
            <summary>
            This mode compares the color channels of the foreground and background colors and uses the darker of the two.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_LIGHTEN">
            <summary>
            The <strong>Lighten</strong> blend mode (which some applications call "brighten") compares the color channels of the foreground and background colors and uses the lighter of the two.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_COLORDODGE">
            <summary>
            In <strong>Color Dodge</strong> mode, the color channels of the background color are brightened based on the color channels in the foreground color. If the foreground color is black, then the mode has no effect. Anything brighter than black dodges ("lightens") the background. The result is often lighter than the <strong>Screen</strong> blend mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_COLORBURN">
            <summary>
            Here, the background colors are darkened based on the foreground colors. A black foreground color gives you black, and a white foreground color has no effect.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_HARDLIGHT">
            <summary>
            Hard Light combines Multiply and Screen blend modes. Equivalent to Overlay, but with the bottom and top images swapped.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_SOFTLIGHT">
            <summary>
            This is a softer version of Hard Light. Applying pure black or white does not result in pure black or white.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_DIFFERENCE">
            <summary>
            In the <strong>Difference</strong> blend mode, Microsoft Expression Design mathematically subtracts each color channel of the foreground object from the color channel of the background color. If two colors are identical, the result is black. If the two colors are on exactly opposite sides of the color spectrum (such as red and cyan), the result is white. This blend mode produces interesting but sometimes unexpected results, especially with soft-edge paths in bright colors.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_EXCLUSION">
            <summary>
             The foreground object acts as an eraser through all objects below it on the same layer. Any object on a different layer underneath shows through.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_NONSEPARABLE">
            <summary>
            Non separable blend mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_HUE">
            <summary>
            The <strong>Hue</strong> blend mode preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_SATURATION">
            <summary>
            The <strong>Saturation</strong> blend mode preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_COLOR">
            <summary>
            The <strong>Color</strong> blend mode preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BlendTypes.FXDIB_BLEND_LUMINOSITY">
            <summary>
            The <strong>Luminosity</strong> blend mode preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BitmapFormats">
            <summary>
            Bitmap formats
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ButtonTypes">
            <summary>
            The type of button group
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.Ok">
            <summary>
            Ok button
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.OkCancel">
            <summary>
            Ok and Cancel buttons
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.YesNo">
            <summary>
            Yes and No buttons
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.YesNoCancel">
            <summary>
            Yes, No and Cancel buttons
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.CharacterSetTypes">
            <summary>
            Character sets for the font
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_ANSI_CHARSET">
            <summary>
            ANSI character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_DEFAULT_CHARSET">
            <summary>
            Default character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_SYMBOL_CHARSET">
            <summary>
            Symbol character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_SHIFTJIS_CHARSET">
            <summary>
            Shiftjis character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_HANGEUL_CHARSET">
            <summary>
            Hangeul character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_GB2312_CHARSET">
            <summary>
            GB-2312 Character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_CHINESEBIG5_CHARSET">
            <summary>
            Chines big5 character set
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ColorTypes">
            <summary>
            the colorspace in which the color is defined
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Unsupported">
            <summary>
            Unsupported Color Space
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Transparent">
            <summary>
            No color; transparent 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_TRANSPARENT">
            <summary>
            Please use <see cref="F:Patagames.Pdf.Enums.ColorTypes.Transparent"/> instead.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.DeviceGray">
            <summary>
            Black, white, and intermediate shades of gray are special cases of full color.
            </summary>
            <remarks>A grayscale value is represented by a single number in the range 0.0 to 1.0, where 0.0 corresponds to black, 1.0 to white, and intermediate values to different gray levels.</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_GRAY">
            <summary>
            Please use <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceGray"/> instead.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.DeviceRGB">
            <summary>
            Colors in the DeviceRGB color space are specified according to the additive RGB (red-green-blue) color model, in which color values are defined by three components representing the intensities of the additive primary colorants red, green, and blue.
            </summary>
            <remarks>
            Each component is specified by a number in the range 0.0 to 1.0, where 0.0 denotes the complete absence of a primary component and 1.0 denotes maximum intensity. If all three components have equal intensity, the perceived result theoretically is a pure gray on the scale from black to white. If the intensities are not all equal, the result is some color other than a pure gray.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_RGB">
            <summary>
            Please use <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceRGB"/> instead.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.DeviceCMYK">
            <summary>
            The DeviceCMYK color space allows colors to be specified according to the subtractive CMYK (cyan-magenta-yellow-black) model typical of printers and other paper-based output devices.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_CMYK">
            <summary>
            Please use <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceCMYK"/> instead.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.CalGray">
            <summary>
            A CalGray color space (PDF 1.1) is a special case of a single-component CIEbased color space, known as a CIE-based A color space.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.CalRGB">
            <summary>
            A CalRGB color space is a CIE-based ABC color space with only one transformation stage instead of two.
            </summary>
            <remarks>
            In this type of space, A, B, and C represent calibrated red, green, and blue color values. These three color components must be in the range 0.0 to 1.0; component values falling outside that range are adjusted to the nearest valid value without error indication.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Lab">
            <summary>
            A Lab color space is a CIE-based ABC color space with two transformation stages.
            </summary>
            <remarks>
            In this type of space, A, B, and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. The range of the first (L*) component is always 0 to 100; the ranges of the second and third (a* and b*) components are defined by the Range entry in the color space dictionary.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.ICCBased">
            <summary>
            ICCBased color spaces are based on a cross-platform color profile as defined by the International Color Consortium (ICC). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Separation">
            <summary>
            A Separation color space provides a means for specifying the use of additional colorants or for isolating the control of individual color components of a device color space for a subtractive device. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.DeviceN">
            <summary>
            DeviceN color spaces can contain an arbitrary number of color components.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Indexed">
            <summary>
            An Indexed color space allows a PDF content stream to use small integers as indices into a color map or color table of arbitrary colors in some other space.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.Pattern">
            <summary>
            A Pattern color space enables a PDF content stream to paint an area with a pattern rather than a single color. 
            </summary>
            <remarks>
            The pattern may be either a tiling pattern (type 1) or a shading pattern (type 2). 
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.CursorTypes">
            <summary>
            Flags for Cursor type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.Arrow">
            <summary>
            Arrow cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.NESW">
            <summary>
            North east south west cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.NWSE">
            <summary>
            North west south east cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.VBeam">
            <summary>
            Vertical beam cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.HBeam">
            <summary>
            Horizontal beam cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.Hand">
            <summary>
            Hand cursor
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DestinationTypes">
            <summary>
            Represents the type of destintion
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.XYZ">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, with the coordinates (<see cref="P:Patagames.Pdf.Net.PdfDestination.Left"/>, <see cref="P:Patagames.Pdf.Net.PdfDestination.Top"/>) 
            positioned at the upper-left corner of the window and the contents of the page
            magnified by the factor <see cref="P:Patagames.Pdf.Net.PdfDestination.Zoom"/>. 
            </summary>
            <remarks>
            A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter is to be retained unchanged. 
            A zoom value of 0 has the same meaning as a null value.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.Fit">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, with its contents magnified just enough
            to fit the entire page within the window both horizontally and vertically. 
            </summary>
            <remarks>
            If the required horizontal and vertical magnification factors are different, use
            the smaller of the two, centering the page within the window in the other dimension.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitH">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, 
            with the vertical coordinate <see cref="P:Patagames.Pdf.Net.PdfDestination.Top"/> positioned 
            at the top edge of the window and the contents of the page magnified
            just enough to fit the entire width of the page within the window. 
            </summary>
            <remarks>
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitV">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, 
            with the horizontal coordinate <see cref="P:Patagames.Pdf.Net.PdfDestination.Left"/> positioned 
            at the left edge of the window and the contents of the page magnified
            just enough to fit the entire height of the page within the window. 
            </summary>
            <remarks>
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitR">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, 
            with its contents magnified just enough to fit the rectangle specified 
            by the coordinates <see cref="P:Patagames.Pdf.Net.PdfDestination.Left"/>, <see cref="P:Patagames.Pdf.Net.PdfDestination.Bottom"/>, 
            <see cref="P:Patagames.Pdf.Net.PdfDestination.Right"/>, and <see cref="P:Patagames.Pdf.Net.PdfDestination.Top"/>
            entirely within the window both horizontally and vertically. 
            </summary>
            <remarks>
            <para>If the required horizontal and vertical magnification factors are different, use the smaller of
            the two, centering the rectangle within the window in the other dimension. </para>
            <para>A null value for any of the parameters may result in unpredictable behavior.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitB">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, with its contents magnified
            just enough to fit its bounding box entirely within the window both horizontally and vertically.
            </summary>
            <remarks>
            If the required horizontal and vertical magnification
            factors are different, use the smaller of the two, centering the bounding box
            within the window in the other dimension.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitBH">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, 
            with the vertical coordinate <see cref="P:Patagames.Pdf.Net.PdfDestination.Top"/> positioned 
            at the top edge of the window and the contents of the page
            magnified just enough to fit the entire width of its bounding box within the window. 
            </summary>
            <remarks>
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.DestinationTypes.FitBV">
            <summary>
            Display the page designated by <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/>, 
            with the horizontal coordinate <see cref="P:Patagames.Pdf.Net.PdfDestination.Left"/> positioned 
            at the left edge of the window and the contents of the page magnified just enough 
            to fit the entire height of its bounding box within the window. 
            </summary>
            <remarks>
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.DialogResults">
            <summary>
            The return value of messageboxes
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Ok">
            <summary>
            Ok button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Cancel">
            <summary>
            Cancel button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.No">
            <summary>
            No button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Yes">
            <summary>
            Yes button was pressed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DocumentActionTypes">
            <summary>
            Additional actions type of document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforeClose">
            <summary>
            WC, before closing document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforeSave">
            <summary>
            WS, before saving document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.AfterSave">
            <summary>
            DS, after saving document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforePrint">
            <summary>
            WP, before printing document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.AfterPrint">
            <summary>
            DP, after printing document, JavaScript action. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DocumentTags">
            <summary>
            The tag for the meta data.<markup><br/></markup>
            Currently, It can be Title, Author, Subject
            Keywords, Creator, Producer, CreationDate, ModDate or  "Trapped".<markup><br/></markup>
            For detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a>, section 10.2.1, "Document Information Dictionary".
            </summary>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Title">
            <summary>
            (Optional; PDF 1.1) The document’s title. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Author">
            <summary>
            (Optional) The name of the person who created the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Subject">
            <summary>
            (Optional; PDF 1.1) The subject of the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Keywords">
            <summary>
            (Optional; PDF 1.1) Keywords associated with the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Creator">
            <summary>
            (Optional) If the document was converted to PDF from another format, the name of the application (for example, Adobe FrameMaker®) that created the original document from which it was converted. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Producer">
            <summary>
            (Optional) If the document was converted to PDF from another format, the name of the application (for example, Acrobat Distiller) that converted it to PDF. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.CreationDate">
            <summary>
            (Optional) The date and time the document was created, in human-readable form (see Section 3.8.3, “Dates”). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.ModificationDate">
            <summary>
            (Required if PieceInfo is present in the document catalog; otherwise optional; PDF 1.1) The date and time the document was most recently modified, in human-readable form (see Section 3.8.3, “Dates”). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Trapped">
            <summary>
            (Optional; PDF 1.3) A name object indicating whether the document has
            been modified to include trapping information (see Section 10.10.5, “Trapping Support”):
            True The document has been fully trapped; no further trapping is
            needed. (This is the name True, not the boolean value true.)
            False The document has not yet been trapped; any desired
            trapping must still be done. (This is the name False, not the
            boolean value false.)
            Unknown Either it is unknown whether the document has been
            trapped or it has been partly but not yet fully trapped; some
            additional trapping may still be needed.
            Default value: Unknown.
            The value of this entry may be set automatically by the software creating the
            document’s trapping information, or it may be known only to a human operator
            and entered manually. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DuplexTypes">
            <summary>
            Duplex types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexUndefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.Simplex">
            <summary>
            Simplex
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexFlipShortEdge">
            <summary>
            Flip short edge
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexFlipLongEdge">
            <summary>
            Flip long ebge
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FieldFlags">
            <summary>
             Field's flags specifying various characteristics of the field.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field. Any associated widget
            annotations will not interact with the user; that is, they will not respond to
            mouse clicks or change their appearance in response to mouse motions. This
            flag is useful for fields whose values are computed or imported from a database.
            </summary>
            <remarks>Applied to all field types.</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action. 
            </summary>
            <remarks>Applied to all field types.</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action
            </summary>
            <remarks>Applied to all field types.</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.NoToggleToOff">
            <summary>
            If set, exactly one radio button must be selected at all times; clicking the currently selected button has no effect. If clear, clicking the selected button deselects it, leaving no button selected.
            </summary>
            <remarks>Applied to radio buttons only</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.RadiosInUnison">
            <summary>
            Radio buttons(PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value for the on state will turn on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
            <remarks>Applied to radio buttons</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Multiline">
            <summary>
            If set, the field can contain multiple lines of text; if clear, the field’s text is restricted to a single line.
            </summary>
            <remarks>Applied to text fields</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen.
            </summary>
            <remarks>
            Characters typed from the keyboard should instead be echoed in some unreadable form, such as asterisks or bullet characters.
            <para>To protect password confidentiality, viewer applications should neverstore the value of the text field in the PDF file if this flag is set.</para>
            </remarks>
            <remarks>Applied to text fields</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.DoNotScroll">
            <summary>
            If set, the field does not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text than fits within its annotation rectangle. Once the field is full, no further text is accepted.
            </summary>
            <remarks>(PDF 1.4) Applied to text fields</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Comb">
            <summary>
            Meaningful only if the MaxLen entry is present in the text field dictionary and if the Multiline, Password, and FileSelect flags are clear. If set, the field is automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, and the text is laid out into those combs.
            </summary>
            <remarks>(PDF 1.5) Applied to text fields</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a dropdown list; if clear, it includes only a drop-down list. This flag is meaningful only if the Combo flag is set.
            </summary>
            <remarks>Applied to combo box</remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.MultiSelect">
            <summary>
            If set, more than one of the field’s option items may be selected simultaneously; if clear, no more than one item at a time may be selected.
            </summary>
            <remarks>(PDF 1.4) Applied to list</remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.FillModes">
            <summary>
            Fill modes
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.Alternate">
            <summary>
            Specifies the alternate fill mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.Winding">
            <summary>
            Specifies the winding fill mode.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FindFlags">
            <summary>
            Flags used by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/> function.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.None">
            <summary>
            Not set any flags
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.MatchCase">
            <summary>
            If not set, it will not match case by default
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.MatchWholeWord">
            <summary>
            If not set, it will not match the whole word by default.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FlattenFlags">
            <summary>
            The flags for the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)"/> function
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenFlags.NormalDisplay">
            <summary>
            for normal display
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenFlags.FlatPrint">
            <summary>
            for print
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FlattenResults">
            <summary>
            The result flag of the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)"/> function
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.Fail">
            <summary>
            Flatten operation failed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.Success">
            <summary>
            Flatten operation succeed.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.NothingTodo">
            <summary>
            There is nothing can be flatten
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontCharSet">
            <summary>
            The character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.ANSI_CHARSET">
            <summary>
            Specifies 1252 Latin 1 (ANSI) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.DEFAULT_CHARSET">
            <summary>
            Specifies a character set based on the current system locale.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.SYMBOL_CHARSET">
            <summary>
            Specifies symbolyc character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.SHIFTJIS_CHARSET">
            <summary>
            Specifies 932 (DBCS. Japanese) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.HANGEUL_CHARSET">
            <summary>
            Specifies 949 (DBCS, Korean) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.HANGUL_CHARSET">
            <summary>
            Specifies 949 (DBCS, Korean) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.GB2312_CHARSET">
            <summary>
            Specifies 936 (DBCS, Simplified Chinese) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.CHINESEBIG5_CHARSET">
            <summary>
            Specifies 950 (DBCS, Traditional Chinese) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.OEM_CHARSET">
            <summary>
            Specifies a character set that is operating-system dependent.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.JOHAB_CHARSET">
            <summary>
            Specifies 1361 (DBCS, Korean) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.HEBREW_CHARSET">
            <summary>
            Specifies 1255 Hebrew character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.ARABIC_CHARSET">
            <summary>
            Specifies 1256 Arabic character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.GREEK_CHARSET">
            <summary>
            Specifies 1253 Greek character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.TURKISH_CHARSET">
            <summary>
            Specifies 1254 Latin 5 (Turkish) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.VIETNAMESE_CHARSET">
            <summary>
            Specifies 1258 Vietnamese character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.THAI_CHARSET">
            <summary>
            Specifies 874 Thai character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.EASTEUROPE_CHARSET">
            <summary>
            Specifies 1250 Latin 2 (Central Europe) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.RUSSIAN_CHARSET">
            <summary>
            Specifies 1251 Cyrillic (Slavic) character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.MAC_CHARSET">
            <summary>
            Specifies macintosh character set.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontCharSet.BALTIC_CHARSET">
            <summary>
            Specifies 1257 Baltic Rim character set.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontFlags">
            <summary>
            The value of the Flags entry in a font descriptor is an unsigned 32-bit integer containing flags specifying various characteristics of the font. 
            </summary>
            <remarks>
            The Nonsymbolic flag indicates that the font’s character
            set is the Adobe standard Latin character set (or a subset of it) and that it uses the
            standard names for those glyphs. This character set is shown in <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a> in Section D.1, “Latin
            Character Set and Encodings.” If the font contains any glyphs outside this set,
            the Symbolic flag should be set and the Nonsymbolic flag clear. In other words,
            any font whose character set is not a subset of the Adobe standard character set is
            considered to be symbolic. This influences the font’s implicit base encoding and
            may affect a consumer application’s font substitution strategies. 
            <note type="note">This classification of nonsymbolic and symbolic fonts is peculiar to PDF. A
            font may contain additional characters that are used in Latin writing systems but
            are outside the Adobe standard Latin character set; PDF considers such a font to be
            symbolic. The use of two flags to represent a single binary choice is a historical accident.</note>
            The ForceBold flag determines whether bold glyphs are painted with
            extra pixels even at very small text sizes. Typically, when glyphs are painted at
            small sizes on very low-resolution devices such as display screens, features of bold
            glyphs may appear only 1 pixel wide. Because this is the minimum feature width
            on a pixel-based device, ordinary (nonbold) glyphs also appear with 1-pixel-wide
            features and therefore cannot be distinguished from bold glyphs. If the ForceBold
            flag is set, features of bold glyphs may be thickened at small text sizes. 
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_FIXEDPITCH">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_SERIF">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and bottom of glyph stems. (Sans serif fonts do not have serifs.) 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_SYMBOLIC">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. This flag and the Nonsymbolic flag cannot both be set or both be clear (see below).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_SCRIPT">
            <summary>
            Glyphs resemble cursive handwriting. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_NONSYMBOLIC">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it (see below). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_ITALIC">
            <summary>
            Glyphs have dominant vertical strokes that are slanted. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_ALLCAP">
            <summary>
            Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_SMALLCAP">
            <summary>
            Font contains both uppercase and lowercase letters. The uppercase letters are 
            similar to those in the regular version of the same typeface family. The glyphs
            for the lowercase letters have the same shapes as the corresponding uppercase 
            letters, but they are sized and their proportions adjusted so that they have the 
            same size and stroke weight as lowercase glyphs in the same typeface family. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_FORCEBOLD">
            <summary>
            The ForceBold flag determines whether bold glyphs are painted with extra pixels even at very small text sizes
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontFlags.PDFFONT_USEEXTERNATTR">
            <summary>
            External attributes
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontStockNames">
            <summary>
            Represents standard Type 1 Fonts (Standard 14 Fonts). The PostScript names of 14 Type 1 fonts, known as the standard 14 fonts, are as follows:
            </summary>
            <remarks>
            These fonts, or their font metrics and suitable substitution fonts, must be available
            to the consumer application. The character sets and encodings for these
            fonts are listed in Appendix D of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a>.
            The Adobe font metrics (AFM) files for the standard 
            14 fonts are available from the ASN Web site. For
            more information on font metrics, see Adobe Technical Note #5004, Adobe Font Metrics File Format Specification. 
            <para>
            Ordinarily, a font dictionary that refers to one of the standard fonts should omit
            the FirstChar, LastChar, Widths, and FontDescriptor entries. However, it is permissible
            to override a standard font by including these entries and embedding the
            font program in the PDF file. (See implementation note 62 in Appendix H in <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a>.)
            </para>
            <note type="note">Beginning with PDF 1.5, the special treatment given to the standard 14 fonts
            is deprecated. All fonts used in a PDF document should be represented using a complete
            font descriptor. For backwards capability, viewer applications must still provide
            the special treatment identified for the standard 14 fonts. </note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.Arial">
            <summary>
            Synonym for Helvetica
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.ArialBold">
            <summary>
            Synonym for Helvetica−Bold
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.ArialBoldOblique">
            <summary>
            Synonym for Helvetica−BoldOblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.ArialOblique">
            <summary>
            Synonym for Helvetica−Oblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.Courier">
            <summary>
            Courier
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.CourierBold">
            <summary>
            Courier−Bold
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.CourierBoldOblique">
            <summary>
            Courier−BoldOblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.CourierOblique">
            <summary>
            Courier−Oblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.Helvetica">
            <summary>
            Helvetica
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.HelveticaBold">
            <summary>
            Helvetica−Bold
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.HelveticaBoldOblique">
            <summary>
            Helvetica−BoldOblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.HelveticaOblique">
            <summary>
            Helvetica−Oblique
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.TimesRoman">
            <summary>
            Times−Roman
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.TimesBold">
            <summary>
            Times−Bold
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.TimesBoldItalic">
            <summary>
            Times−BoldItalic
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.TimesItalic">
            <summary>
            Times−Italic
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontStockNames.ZapfDingbats">
            <summary>
            ZapfDingbats
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontSubstFlags">
            <summary>
            FontSubstFlags
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_MM">
            <summary>
            FXFONT_SUBST_MM
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_GLYPHPATH">
            <summary>
            FXFONT_SUBST_GLYPHPATH
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_CLEARTYPE">
            <summary>
            FXFONT_SUBST_CLEARTYPE
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_TRANSFORM">
            <summary>
            FXFONT_SUBST_TRANSFORM
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_NONSYMBOL">
            <summary>
            FXFONT_SUBST_NONSYMBOL
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_EXACT">
            <summary>
            FXFONT_SUBST_EXACT
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontSubstFlags.FXFONT_SUBST_STANDARD">
            <summary>
            FXFONT_SUBST_STANDARD
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontTypes">
            <summary>
            Represent font types
            </summary>
            <remarks>
            <para>
            <markup><b>Type 1 Fonts</b></markup>
            </para>
            <para>A Type 1 font program is a stylized PostScript program that describes glyph shapes. 
            It uses a compact encoding for the glyph descriptions, and it includes hint 
            information that enables high-quality rendering even at small sizes and low resolutions. Details on this format are provided in a separate book, Adobe Type 1 Font 
            Format. An alternative, more compact but functionally equivalent representation 
            of a Type 1 font program is documented in Adobe Technical Note #5176, The Compact Font Format Specification. </para>
            <note type="note">Although a Type 1 font program uses PostScript language syntax, using it does not require a full PostScript interpreter; a specialized Type 1 font interpreter suffices</note>
            
            <para>
            <markup><b>TrueType Fonts</b></markup>
            </para>
            <para>The TrueType font format was developed by Apple Computer, Inc., and has been adopted as a standard font format for the Microsoft Windows operating system. Specifications for the TrueType font file format are available in Apple’s TrueType Reference Manual and Microsoft’s TrueType 1.0 Font Files Technical Specification.</para>
            <note type="note">A TrueType font program can be embedded directly in a PDF file as a stream object. The Type 42 font format that is defined for PostScript does not apply to PDF. </note>
            
            <para>
            <markup><b>Type 3 Fonts</b></markup>
            </para>
            <para>Type 3 fonts differ from the other fonts supported by PDF. A Type 3 font dictionary
            defines the font; font dictionaries for other fonts simply contain information
            about the font and refer to a separate font program for the actual glyph descriptions.
            In Type 3 fonts, glyphs are defined by streams of PDF graphics operators.
            These streams are associated with character names. A separate encoding entry
            maps character codes to the appropriate character names for the glyphs. </para>
            <para>Type 3 fonts are more flexible than Type 1 fonts because the glyph descriptions
            may contain arbitrary PDF graphics operators. However, Type 3 fonts have no
            hinting mechanism for improving output at small sizes or low resolutions. </para>
            
            <para>
            <markup><b>CIDFonts</b></markup>
            </para>
            <para>A CIDFont program contains glyph descriptions that are accessed using a CID as the character selector. There are two types of CIDFonts:</para>
            <list type="bullet">
            <item>A Type 0 CIDFont contains glyph descriptions based on the Adobe Type 1 font format
            <note type="note">The term “Type 0” when applied to a CIDFont has a different meaning than for a “Type 0 font”</note>
            </item>
            <item>A Type 2 CIDFont contains glyph descriptions based on the TrueType font format</item>
            </list>
            <para>A CIDFont dictionary is a PDF object that contains information about a CIDFont
            program. Although its Type value is Font, a CIDFont is not actually a font. It does
            not have an Encoding entry, it cannot be listed in the Font subdictionary of a resource
            dictionary, and it cannot be used as the operand of the Tf operator. It is
            used only as a descendant of a Type 0 font. The CMap in the Type 0 font is what
            defines the encoding that maps character codes to CIDs in the CIDFont.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontTypes.PDFFONT_TYPE1">
            <summary>
            A font that defines glyph shapes using Type 1 font technology 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontTypes.PDFFONT_TRUETYPE">
            <summary>
            A font based on the TrueType font format. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontTypes.PDFFONT_TYPE3">
            <summary>
            A font that defines glyphs with streams of PDF graphics operators
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontTypes.PDFFONT_CIDFONT">
            <summary>
            A CIDFont whose glyph descriptions are based on Type 1 or TrueType font technology 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FontWeight">
            <summary>
            Provides a set of static predefined FontWeight values.
            </summary>
            <remarks>
            A font weight describes the relative weight of a font, in terms of the lightness or heaviness of the strokes. Weight differences are generally differentiated by an increased stroke or thickness that is associated with a given character in a font, as compared to a "normal" character from that same font.
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_DONTCARE">
            <summary>
            A default weight is used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_THIN">
            <summary>
            Specifies a "Thin" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_EXTRALIGHT">
            <summary>
            Specifies an "Extra-light" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_LIGHT">
            <summary>
            Specifies a "Light" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_NORMAL">
            <summary>
            Specifies a "Normal" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_MEDIUM">
            <summary>
            Specifies a "Medium" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_SEMIBOLD">
            <summary>
            Specifies a "Semi-bold" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_BOLD">
            <summary>
            Specifies a "Bold" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_EXTRABOLD">
            <summary>
            Specifies an "Extra-bold" font weight.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FontWeight.FW_HEAVY">
            <summary>
            Specifies a "Heavy" font weight.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormFieldTypes">
            <summary>
            Form field Types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_NOFIELDS">
            <summary>
            -1 indicates no fields
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_UNKNOWN">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_PUSHBUTTON">
            <summary>
            push button type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_CHECKBOX">
            <summary>
            check box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_RADIOBUTTON">
            <summary>
            radio button type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_COMBOBOX">
            <summary>
            combo box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_LISTBOX">
            <summary>
            list box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_TEXTFIELD">
            <summary>
            text field type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_SIGNATURE">
            <summary>
            Signature
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.Last">
            <summary>
            The last elemеnt in this enumeration
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormFieldTypesEx">
            <summary>
            Field types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Unknown">
            <summary>
            Unknown field type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.PushButton">
            <summary>
            PA pushbutton is a purely interactive control that responds immediately to user input without retaining a permanent value 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.RadioButton">
            <summary>
            Radio button fields contain a set of related buttons that can each be on or off. Typically, at most one radio button in a set may be on at any given time, and selecting any one of the buttons automatically deselects all the others. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.CheckBox">
            <summary>
            A check box toggles between two states, on and off
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Text">
            <summary>
            Text fields are boxes or spaces in which the user can enter text from the keyboard.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.RichText">
            <summary>
            Rich text
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.ListBox">
            <summary>
            ListBox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.ComboBox">
            <summary>
            ComboBox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Sign">
            <summary>
            Signature fields represent electronic signatures for authenticating the identity of a user and the validity of the document’s contents.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormHighlightingMode">
            <summary>
            The annotation’s highlighting mode, the visual effect to be used when the mouse button is pressed or held down inside its active area
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.None">
            <summary>
            No highlighting
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Invert">
            <summary>
             Invert the contents of the annotation rectangle
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Outline">
            <summary>
            Invert the annotation’s border
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Push">
            <summary>
            Display the annotation as if it were being pushed below the surface of the page
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Toggle">
            <summary>
            Toggle
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormObjectTransparency">
            <summary>
            The transparency type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormObjectTransparency.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormObjectTransparency.PDFTRANS_GROUP">
            <summary>
            Group
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormObjectTransparency.PDFTRANS_ISOLATED">
            <summary>
            Isolated
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormObjectTransparency.PDFTRANS_KNOCKOUT">
            <summary>
            Knockout
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FunctionTypes">
            <summary>
            The function type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FunctionTypes.Unknown">
            <summary>
            Unknown function type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FunctionTypes.Sampled">
            <summary>
            Type 0 (Sampled) function.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FunctionTypes.Exponential">
            <summary>
            Type 2 (Exponential Interpolation) function.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FunctionTypes.Stitching">
            <summary>
            Type 3 (Stitching) function.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FunctionTypes.PostScript">
            <summary>
            Type 4 (PostScript Calculator) function.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FXDIBFormats">
            <summary>
            A number indicating for bitmap format
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes1">
            <summary>
            Gray scale bitmap, one byte per pixel
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes3">
            <summary>
            3 bytes per pixel, byte order: blue, green, red
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes4">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, unused
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes4Alpha">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, alpha
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IconTypes">
            <summary>
            The Icon type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Error">
            <summary>
            Error icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Warning">
            <summary>
            Warning icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Question">
            <summary>
            Question icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Status">
            <summary>
            Status icon
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IndirectObjectTypes">
            <summary>
            The following enumerator describe each object type, as well as how to create and refer to indirect objects.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Invalid">
            <summary>
            Unknown object type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Boolean">
            <summary>
            PDF provides boolean objects identified by the keywords true and false. 
            Boolean objects can be used as the values of array elements and dictionary entries, 
            and can also occur in PostScript calculator functions as the results of boolean 
            and relational operators and as operands to the conditional operators if and ifelse.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Number">
            <summary>
            PDF provides two types of numeric objects: integer and real. Integer objects represent mathematical integers within a certain interval centered at 0. Real objects approximate mathematical real numbers, but with limited range and precision;
            </summary>
            <remarks>
            <para>PDF provides two types of numeric objects: integer and real. Integer objects represent mathematical integers within a certain interval centered at 0. Real objects approximate mathematical real numbers, but with limited range and precision; they are typically represented in fixed-point form rather than floating-point form. The range and precision of numbers are limited by the internal representations used in the computer on which the PDF consumer application is running; Appendix C gives these limits for typical implementations.</para>
            <para>An integer is written as one or more decimal digits optionally preceded by a sign:</para>
            <para>123 43445 +17 −98 0</para>
            <para>The value is interpreted as a signed decimal integer and is converted to an integer object. If it exceeds the implementation limit for integers, it is converted to a real object.</para>
            <para>A real value is written as one or more decimal digits with an optional sign and a leading, trailing, or embedded period (decimal point):</para>
            <para>34.5 −3.62 +123.6 4. −.002 0.0</para>
            <para>The value is interpreted as a real number and is converted to a real object. If it exceeds the implementation limit for real numbers, an error occurs.</para>
            <note type="note">PDF does not support the PostScript syntax for numbers with nondecimal radices (such as 16#FFFE) or in exponential format (such as 6.02E23).</note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.String">
            <summary>
            A string object consists of a series of bytes—unsigned integer values in the range 0 to 255. 
            </summary>
            <remarks>
            <para>String objects are not integer objects, but are stored in a more compact format. The length of a string may be subject to implementation limits;</para>
            <para>String objects can be written in two ways:</para>
            <list type="bullet">
            <item>As a sequence of literal characters enclosed in parentheses ( ); see “Literal Strings,” below”</item>
            <item>As hexadecimal data enclosed in angle brackets; see “Hexadecimal Strings”</item>
            </list>
            <para>Literal Strings</para>
            <para>A literal string is written as an arbitrary number of characters enclosed in parentheses. Any characters may appear in a string except unbalanced parentheses and the backslash, which must be treated specially. Balanced pairs of parentheses within a string require no special treatment.</para>
            <para>Hexadecimal Strings</para>
            <para>Strings may also be written in hexadecimal form, which is useful for including arbitrary binary data in a PDF file. A hexadecimal string is written as a sequence of hexadecimal digits (0–9 and either A–F or a–f) enclosed within angle brackets (&lt; and &gt;):</para>
            <para>&lt;4E6F762073686D6F7A206B6120706F702E&gt;</para>
            <para>Each pair of hexadecimal digits defines one byte of the string. White-space characters (such as space, tab, carriage return, line feed, and form feed) are ignored.</para>
            <para>If the final digit of a hexadecimal string is missing—that is, if there is an odd number of digits—the final digit is assumed to be 0. For example:</para>
            <para>&lt;901FA3&gt;</para>
            <para>is a 3-byte string consisting of the characters whose hexadecimal codes are 90, 1F, and A3, but</para>
            <para>&lt;901FA&gt;</para>
            <para>is a 3-byte string containing the characters whose hexadecimal codes are 90, 1F, and A0.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Name">
            <summary>
            A name object is an atomic symbol uniquely defined by a sequence of characters. Uniquely defined means that any two name objects made up of the same sequence of characters are identically the same object. Atomic means that a name has no internal structure; although it is defined by a sequence of characters, those characters are not considered elements of the name.
            </summary>
            <remarks>
            <para>A slash character (/) introduces a name. The slash is not part of the name but is a prefix indicating that the following sequence of characters constitutes a name. There can be no white-space characters between the slash and the first character in the name. The name may include any regular characters, but not delimiter or white-space characters (see Section 3.1, “Lexical Conventions”). Uppercase and lowercase letters are considered distinct: /A and /a are different names. The following examples are valid literal names:</para>
            <para>
            /Name1
            /Name1<br/>
            /ASomewhatLongerName<br/>
            /A; Name_With−Various***Characters?<br/>
            /1.2<br/>
            /$$<br/>
            /@pattern<br/>
            /.notdef<br/>
            </para>
            <note type="note">The token / (a slash followed by no regular characters) is a valid name.</note>
            <para>Beginning with PDF 1.2, any character except null (character code 0) may be included in a name by writing its 2-digit hexadecimal code, preceded by the number sign character (#); </para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Array">
            <summary>
            An array object is a one-dimensional collection of objects arranged sequentially. Unlike arrays in many other computer languages, PDF arrays may be heterogeneous; that is, an array’s elements may be any combination of numbers, strings, dictionaries, or any other objects, including other arrays. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Dictionary">
            <summary>
            A dictionary object is an associative table containing pairs of objects, known as the dictionary’s entries. The first element of each entry is the key and the second element is the value. The key must be a name (unlike dictionary keys in PostScript, which may be objects of any type). The value can be any kind of object, including another dictionary.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Stream">
            <summary>
            A stream object, like a string object, is a sequence of bytes. However, a PDF application can read a stream incrementally, while a string must be read in its entirety. Furthermore, a stream can be of unlimited length, whereas a string is subject to an implementation limit. For this reason, objects with potentially large amounts of data, such as images and page descriptions, are represented as streams.
            </summary>
            <remarks>
            <note type="note">As with strings, this section describes only the syntax for writing a stream as a sequence of bytes. What those bytes represent is determined by the context in which the stream is referenced.</note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Null">
            <summary>
            The null object has a type and value that are unequal to those of any other object. There is only one object of type null, denoted by the keyword null. An indirect object reference to a nonexistent object is treated the same as a null object. Specifying the null object as the value of a dictionary entry is equivalent to omitting the entry entirely.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IndirectObjectTypes.Reference">
            <summary>
            Any object in a PDF file may be labeled as an indirect object. 
            This gives the object a unique object identifier by which other objects can refer to it 
            (for example, as an element of an array or as the value of a dictionary entry).
            </summary>
            <remarks>
            The object identifier consists of two parts:
            <list type="bullet">
            <item>A positive integer object number. 
            Indirect objects are often numbered sequentially within a PDF file, but this is not required; 
            object numbers may be assigned in any arbitrary order.</item>
            <item>A non-negative integer generation number. In a newly created file, 
            all indirect objects have generation numbers of 0. Nonzero generation numbers may be introduced when 
            the file is later updated; </item>
            </list>
            Together, the combination of an object number and a generation number uniquely identifies an indirect object. 
            The object retains the same object number and generation number throughout its existence, even if its value is modified.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.IsFormAvailableResults">
            <summary>
            The result of the process which check availabilty the forms inside PDF.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.Error">
            <summary>
            error, the input parameter not correct, such as hints is null.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.NotAvaialble">
            <summary>
            data not available
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.Available">
            <summary>
            data available
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.NoFormData">
            <summary>
            No form data.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IsLinearizedResults">
            <summary>
            The result of the process which check linearized PDF.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.UnknownLinearized">
            <summary>
            Unknownd linearized state
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.NotLinearized">
            <summary>
            Not linearized state
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.IsLinearized">
            <summary>
            Linearized state
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.JustifyTypes">
            <summary>
            A code specifying the form of justification to be used in displaying the text
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Left">
            <summary>
            Left-justified 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Centered">
            <summary>
            Centered 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Right">
            <summary>
            Right-justified 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.KeyboardModifiers">
            <summary>
            Keyboard modifiers
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.LineCap">
             <summary>
             Represents line cap styles. The line cap style specifies the shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
             </summary>
             <remarks>
            <para><strong>TABLE 4.4 Line cap styles</strong></para>
             <list type="table">
             <listheader>
             <term>Style</term><term>Appearance</term><description>Description</description>
             </listheader>
             <item><term>Butt</term><term><img src="../../../Pdfium.Docs/Media/LineCapStyle0.png"/></term><description>The stroke is squared off at the endpoint of the path. There is no projection beyond the end of the path.</description></item>
             <item><term>Round</term><term><img src="../../../Pdfium.Docs/Media/LineCa[Style1.png"/></term><description>A semicircular arc with a diameter equal to the line width is drawn around the endpoint and filled in.</description></item>
             <item><term>Square</term><term><img src="../../../Pdfium.Docs/Media/LineCapStyle2.png"/></term>The stroke continues beyond the endpoint of the path for a distance equal to half the line width and is squared off.<description></description></item>
             </list>
             </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineCap.Butt">
            <summary>
            Butt cap.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineCap.Round">
            <summary>
            Round cap.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineCap.Square">
            <summary>
            Projecting square cap. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.LineJoin">
             <summary>
             Represents line join styles. The line join style specifies the shape to be used at the corners of paths that are stroked.
             </summary>
             <remarks>
             Join styles are significant only at points where consecutive segments of a path connect at an angle; segments that 
             meet or intersect fortuitously receive no special treatment.
            <para><strong>TABLE 4.5 Line join styles</strong></para>
             <list type="table">
             <listheader>
             <term>Style</term><term>Appearance</term><description>Description</description>
             </listheader>
             <item><term>Miter</term><term><img src="../../../Pdfium.Docs/Media/LineJoinStyle0.png"/></term><description>The outer edges of the strokes for the two segments are extended until they meet at an angle, as in a picture frame. If the segments meet at too sharp an angle (as defined by the miter limit parameter), a bevel join is used instead.</description></item>
             <item><term>Round</term><term><img src="../../../Pdfium.Docs/Media/LineJoinStyle1.png"/></term><description>An arc of a circle with a diameter equal to the line width is drawn around the point where the two segments meet, connecting the outer edges of the strokes for the two segments.This pieslice-shaped figure is filled in, producing a rounded corner.</description></item>
             <item><term>Bevel</term><term><img src="../../../Pdfium.Docs/Media/LineJoinStyle2.png"/></term>The two segments are finished with butt caps and the resulting notch beyond the ends of the segments is filled with a triangle.<description></description></item>
             </list>
             </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineJoin.Miter">
            <summary>
            Miter join.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineJoin.Round">
            <summary>
            Round join.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineJoin.Bevel">
            <summary>
            Bevel join. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PatternTypes">
            <summary>
            Represents an enumeration identifying the type of pattern
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PatternTypes.Tiling">
            <summary>
            A tiling pattern. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PatternTypes.Shading">
            <summary>
            A shading pattern.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.LineEndingStyles">
             <summary>
             Represent the line enfing styles
             </summary>
             <remarks>
            <para><strong>TABLE 8.27 Line ending styles</strong></para>
             <list type="table">
             <listheader>
             <term>Name</term><term>Appearance</term><description>Description</description>
             </listheader>
             <item><term>Square</term><term><img src="../../../Pdfium.Docs/Media/linending01.png"/></term><description>A square filled with the annotation’s interior color, if any</description></item>
             <item><term>Circle</term><term><img src="../../../Pdfium.Docs/Media/linending02.png"/></term><description>A circle filled with the annotation’s interior color, if any</description></item>
             <item><term>Diamond</term><term><img src="../../../Pdfium.Docs/Media/linending03.png"/></term><description>A diamond shape filled with the annotation’s interior color, if any</description></item>
             <item><term>OpenArrow</term><term><img src="../../../Pdfium.Docs/Media/linending04.png"/></term><description>Two short lines meeting in an acute angle to form an open arrowhead</description></item>
             <item><term>ClosedArrow</term><term><img src="../../../Pdfium.Docs/Media/linending05.png"/></term><description>Two short lines meeting in an acute angle as in the OpenArrow style (see above) and connected by a third line to form a triangular closed arrowhead filled with the annotation’s interior color, if any</description></item>
             <item><term>None</term><term><img src="../../../Pdfium.Docs/Media/linending06.png"/></term><description>No line ending</description></item>
             <item><term>Butt</term><term><img src="../../../Pdfium.Docs/Media/linending07.png"/></term><description>(PDF 1.5) A short line at the endpoint perpendicular to the line itself</description></item>
             <item><term>ROpenArrow</term><term><img src="../../../Pdfium.Docs/Media/linending08.png"/></term><description>(PDF 1.5) Two short lines in the reverse direction from OpenArrow</description></item>
             <item><term>RClosedArrow</term><term><img src="../../../Pdfium.Docs/Media/linending09.png"/></term><description>(PDF 1.5) A triangular closed arrowhead in the reverse direction from ClosedArrow</description></item>
             <item><term>Slash</term><term><img src="../../../Pdfium.Docs/Media/linending10.png"/></term><description>(PDF 1.6) A short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself</description></item>
             </list>
             </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.None">
            <summary>
            No line ending
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.Square">
            <summary>
            A square filled with the annotation’s interior color, if any
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.Circle">
            <summary>
            A circle filled with the annotation’s interior color, if any
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.Diamond">
            <summary>
            A diamond shape filled with the annotation’s interior color, if any
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.OpenArrow">
            <summary>
            Two short lines meeting in an acute angle to form an open arrowhead
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.ClosedArrow">
            <summary>
            Two short lines meeting in an acute angle as in the OpenArrow style (see above) and connected by a third line to form a triangular closed arrowhead filled with the annotation’s interior color, if any
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.Butt">
            <summary>
            (PDF 1.5) A short line at the endpoint perpendicular to the line itself
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.ROpenArrow">
            <summary>
            (PDF 1.5) Two short lines in the reverse direction from OpenArrow
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.RClosedArrow">
            <summary>
            (PDF 1.5) A triangular closed arrowhead in the reverse direction from ClosedArrow
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.LineEndingStyles.Slash">
            <summary>
            (PDF 1.6) A short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PdfContentAlignment">
            <summary>
            Specifies alignment of content.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfContentAlignment.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.Platforms">
            <summary>
            Represents an operating system platform.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.Platforms.Linux">
            <summary>
            Represents the Linux operating system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.Platforms.OSX">
            <summary>
            Represents the OSX operating system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.Platforms.Windows">
            <summary>
            Represents the Windows operating system.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PropertyListTypes">
            <summary>
            Represents the type of the property list of marked content (<see cref="P:Patagames.Pdf.Net.PdfMarkedContent.Parameters"/>)
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PropertyListTypes.None">
            <summary>
            Has no any parameters
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PropertyListTypes.PropertiesDict">
            <summary>
            Indicates that the values are indirect references to objects outside the content stream, the <see cref="P:Patagames.Pdf.Net.PdfMarkedContent.Parameters"/>
            dictionary must be defined as a named resource in the Properties subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PropertyListTypes.DirectDict">
            <summary>
            If all of the values in a property list dictionary are direct objects, the dictionary 
            may be written inline in the content stream as a direct object.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageActionTypes">
            <summary>
            Additional-action types of page object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageActionTypes.FPDFPAGE_AACTION_OPEN">
            <summary>
            /O -- An action to be performed when the page is opened
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageActionTypes.FPDFPAGE_AACTION_CLOSE">
            <summary>
            /C -- An action to be performed when the page is closed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageModes">
            <summary>
            Flags for page mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.Unknown">
            <summary>
            Unknown value
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseOutlines">
            <summary>
            Document outline visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseThumbs">
            <summary>
            Thumbnial images visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseOc">
            <summary>
            Optional content group panel visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseAttachments">
            <summary>
            Attachments panel visible
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageObjectTypes">
            <summary>
            Types of page object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_TEXT">
            <summary>
            Text object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_PATH">
            <summary>
            Path object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_IMAGE">
            <summary>
            Image object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_SHADING">
            <summary>
            Shading object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_FORM">
            <summary>
            Page form object
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageRotate">
            <summary>
            Page orientation: 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Normal">
            <summary>
            Not rotated
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate90">
            <summary>
            rotated 90 degrees clockwise
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate180">
            <summary>
            rotated 180 degrees
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate270">
            <summary>
            rotated 270 degrees clockwise
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PathPointFlags">
            <summary>
            Represents the types of the point in the Path.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PathPointFlags.CloseFigure">
            <summary>
            Specifies that the point is the last point in a closed subpath (figure).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PathPointFlags.LineTo">
            <summary>
            Indicates that the point is one of the two endpoints of a line.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PathPointFlags.BezierTo">
            <summary>
            Indicates that the point is an endpoint or control point of a cubic Bézier spline.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PathPointFlags.MoveTo">
            <summary>
            Starts path
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PdfUserAccessPermission">
            <summary>
            Specifies which operations are permitted when the document is opened with user access.
            </summary>
            <remarks>
            <para>Bit 1–2 Reserved; must be 0.</para>
            <para>Bit 7–8 Reserved; must be 1.</para>
            <para>Bit 13–32 (Revision 3 or greater) Reserved; must be 1.</para>
            <para>Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description.</para>
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.NoPermission">
            <summary>
            Permits everything. This is the default value.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAll">
            <summary>
            Permits everything. This is the default value.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitPrint">
            <summary>
            Bit 3 (Revision 2) Print the document.
            (Revision 3 or greater) Print the document (possibly not at the highest
            quality level, depending on whether bit 12 is also set).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitModifyDocument">
            <summary>Bit 4 Modify the contents of the document by operations other than
            those controlled by bits 6, 9, and 11.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitExtractContent">
            <summary>Bit 5 (Revision 2) Copy or otherwise extract text and graphics from the
            document, including extracting text and graphics (in support of accessibility
            to users with disabilities or for other purposes).
            (Revision 3 or greater) Copy or otherwise extract text and graphics
            from the document by operations other than that controlled by bit 10.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAnnotations">
            <summary>Bit 6 Add or modify text annotations, fill in interactive form fields, and,
            if bit 4 is also set, create or modify interactive form fields (including
            signature fields).</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitReserved">
            <summary>
            Bit 7-8 Reserver; must be 1
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitFormsFill">
            <summary>9 (Revision 3 or greater) Fill in existing interactive form fields (including
            signature fields), even if bit 6 is clear.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAccessibilityExtractContent">
            <summary>Bit 10 (Revision 3 or greater) Extract text and graphics (in support of accessibility
            to users with disabilities or for other purposes).</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAssembleDocument">
            <summary>Bit 11 (Revision 3 or greater) Assemble the document (insert, rotate, or delete
            pages and create bookmarks or thumbnail images), even if bit 4
            is clear.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitFullQualityPrint">
            <summary>Bit 12 (Revision 3 or greater) Print the document to a representation from
            which a faithful digital copy of the PDF content could be generated.
            When this bit is clear (and bit 3 is set), printing is limited to a lowlevel
            representation of the appearance, possibly of degraded quality.
            (See implementation note 24 in Appendix H.)</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitReserved2">
            <summary>
            Bit 13-32. Reserved; must be 1
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PitchFamilyFlags">
            <summary>
            Font pitch and family flags
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_FIXEDPITCH">
            <summary>
            Fixed pitch
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_ROMAN">
            <summary>
            Roman family
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_SCRIPT">
            <summary>
            Script family
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PrintScallingMode">
            <summary>
            Specifies a page scaling mode
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PrintScallingMode.SourceSize">
            <summary>
            Print the page at its original size
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PrintScallingMode.PrintableArea">
            <summary>
            Fit the page to the printable area
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses">
            <summary>
            Flags for progressive process status.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderReader">
            <summary>
            Render reader
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderTobeContinued">
            <summary>
            Render paused
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderDone">
            <summary>
            Render done
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderFailed">
            <summary>
            Render failed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.RelationTypes">
            <summary>
            Represents the relationship between annotations
            </summary>
            <remarks>
            In PDF 1.6, a set of annotations can be grouped so that they function as a single
            unit when a user interacts with them.The group consists of a primary annotation,
            which must not have an IRT entry, and one or more subordinate annotations,
            which must have an <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/> property that 
            refers to the primary annotation and an <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Relationship"/> property whose value is Group.
            <para>
            Some entries in the primary annotation are treated as “group attributes” that
            should apply to the group as a whole; the corresponding properties in the subordinate annotations should be ignored. 
            These properties are <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Contents"/> (or <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RichText"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.DefaultStyle"/>),
            <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ModificationDate"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Color"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Text"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Popup"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.CreationDate"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Subject"/>, and <see cref="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.IsOpen"/>. 
            Operations that manipulate any annotation in a group, such as movement, cut, and copy, should be treated by
            viewer applications as acting on the entire group.
            </para>
            <note type="note"> primary annotation may have replies that are not subordinate annotation
            that is, that do not have an <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Relationship"/> value of Group</note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.RelationTypes.NonSpecified">
            <summary>
            The relationship is not specified;
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RelationTypes.Reply">
            <summary>
            The annotation is considered a reply to the annotation specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/>. 
            Viewer applications should not display replies to an annotation individually but together in the form of threaded comments; 
            see remarks section.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RelationTypes.Group">
            <summary>
            The annotation is grouped with the annotation specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/>
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.RenderFlags">
            <summary>
            Page rendering flags. They can be combined with bit OR.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_ANNOT">
            <summary>
            Set if annotations are to be rendered.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_LCD_TEXT">
            <summary>
            Set if using text rendering optimized for LCD display.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NO_NATIVETEXT">
            <summary>
            Don't use the native text output available on some platforms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_GRAYSCALE">
            <summary>
            Grayscale output.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_DEBUG_INFO">
            <summary>
            Set if you want to get some debug info. Please discuss with Foxit first if you need to collect debug info. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NO_CATCH">
            <summary>
            Set if you don't want to catch exception.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_RENDER_LIMITEDIMAGECACHE">
            <summary>
            Limit image cache size. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_RENDER_FORCEHALFTONE">
            <summary>
            Always use halftone for image stretching.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_PRINTING">
            <summary>
            Render for printing.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_REVERSE_BYTE_ORDER">
            <summary>
            set whether render in a reverse Byte order, this flag only enable when render to a bitmap.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_THUMBNAIL">
            <summary>
            Render page as a thumbnail
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_HQTHUMBNAIL">
            <summary>
            Render page as a thumbnail (high quality)
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.RenderIntent">
            <summary>
            Represents the rendering intent
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderIntent.RelativeColorimetric">
            <summary>
            Colors are represented with respect to the combination of the light source and the output medium’s white point (such as the color of unprinted paper). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderIntent.AbsoluteColorimetric">
            <summary>
            Colors are represented solely with respect to the light source; no correction is made for the output medium’s white point (such as the color of unprinted paper). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderIntent.Saturation">
            <summary>
            Colors are represented in a manner that preserves or emphasizes saturation.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderIntent.Perceptual">
            <summary>
            Colors are represented in a manner that provides a pleasing perceptual appearance. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SandboxPolicies">
            <summary>
            Policy for Sandbox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SandboxPolicies.FPDF_POLICY_MACHINETIME_ACCESS">
            <summary>
            machinetime access sandbox policy
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SaveFlags">
            <summary>
            Flags for <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.Incremental">
            <summary>
            Incremental save.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.NoIncremental">
            <summary>
            Save with no incremental mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.RemoveSecurity">
            <summary>
            Remove security and save with no incremental mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.ObjectStream">
            <summary>
            Save to object stream.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.RemoveUnusedObjects">
            <summary>
            Do not save objects to which there are no references.
            </summary>
            <remarks>
            You can use this flag in order to enable the mechanism that removes the orphaned objects.
            What is the orphaned objects and where they come from is described in <a href="https://forum.patagames.com/posts/m1361findunread-PDF-documents--Orphaned-objects-and-references">this</a> article.
            </remarks>
            <seealso href="https://forum.patagames.com/posts/m1361findunread-PDF-documents--Orphaned-objects-and-references">PDF documents. Orphaned objects and references.</seealso>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.GenerateFreeEntries">
            <summary>
            Include freed objects into the cross-reference table.
            </summary>
            <remarks>
            If this flag is set, then the correspond entries will be added to  the cross-reference table for each missing object.
            <note type="note">This flag is incompatible with <see cref="F:Patagames.Pdf.Enums.SaveFlags.Incremental"/>.</note>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Enums.ShadingTypes">
            <summary>
            Represents the shading type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.Invalid">
            <summary>
            Invalid typeof shading 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading">
            <summary>
            Type 1 (Function-Based) Shadings. Define the color of every point in the domain using a mathematical function(not necessarily smooth or continuous).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading">
            <summary>
            Type 2 (Axial) Shadings. Define a color blend along a line between two points, optionally extended beyond the boundary points by continuing the boundary colors.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading">
            <summary>
            Type 3 (Radial) Shadings. Define a blend between two circles, optionally extended beyond the boundary circles by continuing the boundary colors. This type of shading is commonly used to represent three-dimensional spheres and cones.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.FreeFormGouraudTriangleMeshShading">
            <summary>
            Type 4 Shadings (Free-Form Gouraud-Shaded Triangle Meshes). Define a common construct used by many three-dimensional applications to represent complex colored and shaded shapes. Vertices are specified in free-form geometry.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.LatticeFormGouraudTriangleMeshShading">
            <summary>
            Type 5 Shadings (Lattice-Form Gouraud-Shaded Triangle Meshes). Are based on the same geometrical construct as type 4 but with vertices specified as a pseudorectangular lattice.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.CoonsPatchMeshShading">
            <summary>
            Type 6 Shadings (Coons Patch Meshes). Construct a shading from one or more color patches, each bounded by four cubic Bézier curves.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ShadingTypes.TensorProductPatchMeshShading">
            <summary>
            Type 7 Shadings (Tensor-Product Patch Meshes). Are similar to type 6 but with additional control points in each patch, affording greater control over color mapping.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SoundEncodingFormats">
            <summary>
            Represents the sound encoding formats.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundEncodingFormats.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2B − 1
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundEncodingFormats.Signed">
            <summary>
            Twos-complement values
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundEncodingFormats.muLaw">
            <summary>
            μ-law–encoded samples
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundEncodingFormats.ALaw">
            <summary>
            A-law–encoded samples
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SoundIconNames">
            <summary>
            Represents the name of an icon to be used in displaying the <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/>
            </summary>
            <remarks>
             
            Viewer applications should provide predefined icon appearances for at least the following standard names
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundIconNames.Speaker">
            <summary>
            Speaker stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundIconNames.Mic">
            <summary>
            Microphone stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SoundIconNames.Extended">
            <summary>
            Please see <see cref="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.ExtendedIconName"/> property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.StampIconNames">
            <summary>
            Represents the name of an icon to be used in displaying the <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/>
            </summary>
            <remarks>
             
            Viewer applications should provide predefined icon appearances for at least the following standard names
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Draft">
            <summary>
            Draft stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Approved">
            <summary>
            Approved stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Experimental">
            <summary>
            Experimental stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.NotApproved">
            <summary>
            NotApproved stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.AsIs">
            <summary>
            AsIs stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Expired">
            <summary>
            Expired stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.NotForPublicRelease">
            <summary>
            NotForPublicRelease stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Confidential">
            <summary>
            Confidential stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Final">
            <summary>
            Final stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Sold">
            <summary>
            Sold stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Departmental">
            <summary>
            Departmental stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.ForComment">
            <summary>
            ForComment stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.TopSecret">
            <summary>
            TopSecret stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.ForPublicRelease">
            <summary>
            ForPublicRelease stamp icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.StampIconNames.Extended">
            <summary>
            Please see <see cref="P:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.ExtendedIconName"/> property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.TextPositions">
            <summary>
            Indicating where to position the text of the control caption relative to its icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_CAPTION">
            <summary>
             No icon; caption only
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_ICON">
            <summary>
            No caption; icon only
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_BELOW">
            <summary>
             Caption below the icon 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_ABOVE">
            <summary>
             Caption above the icon 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_RIGHT">
            <summary>
             Caption to the right of the icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_LEFT">
            <summary>
            Caption to the left of the icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_OVERLAID">
            <summary>
             Caption overlaid directly on the icon 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.TextRenderingModes">
            <summary>
            Represents the text rendering mode, Tmode, determines whether showing text causes glyph
            outlines to be stroked, filled, used as a clipping boundary, or some combination
            of the three.
            </summary>
            <remarks>
            <para>
            Stroking, filling, and clipping have the same effects for a text object
            as they do for a path object, although they are specified in an entirely different way.
            The graphics state parameters affecting those operations, such as line
            width, are interpreted in user space rather than in text space.
            </para>
            <note type="note">The text rendering mode has no effect on text displayed in a Type 3 font.</note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.Stroke">
            <summary>
            Stroke text.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.FillThenStroke">
            <summary>
            Fill, then stroke text.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.Nothing">
            <summary>
            Neither fill nor stroke text (invisible).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.FillClip">
            <summary>
            Fill text and add to path for clipping.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.StrokeClip">
            <summary>
            Stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.FillThenStrokeClip">
            <summary>
            Fill, then stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextRenderingModes.Clipping">
            <summary>
            Add text to path for clipping.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.UnsupportedObjectTypes">
            <summary>
            flags for type of unsupport object.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FWL_VKEYCODE">
            <summary>
            Virtual keycodes
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ZoomTypes">
            <summary>
            Zoom types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_XYZ">
            <summary>
            Zoom xyx
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITPAGE">
            <summary>
            Fit to page
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITHORZ">
            <summary>
            Fit to width
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITVERT">
            <summary>
            Fit to height
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITRECT">
            <summary>
            Fit to rectangle
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBBOX">
            <summary>
            fit to bounding box
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBHORZ">
            <summary>
            Fit to bounding box width
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBVERT">
            <summary>
            Fit to bounding box height
            </summary>
        </member>
        <member name="T:Patagames.Pdf.GetBlockCallback">
            <summary>
            A function pointer for getting a block of data from specific position.
            </summary>
            <param name="param">custom user data</param>
            <param name="position">Position is specified by byte offset from beginning of the file.</param>
            <param name="buf">buffer for data allocated inside Pdfium SDK</param>
            <param name="size">buffer size</param>
            <returns>should be true if successful, false for error.</returns>
            <remarks>Required: Yes. Position is specified by byte offset from beginning of the file. It may be possible for FPDFSDK to call this function multiple times for same position.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FILEACCESS">
            <summary>
            Class for custom file access.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEACCESS.FileLen">
            <summary>
            File length, in bytes.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEACCESS.GetBlock">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.GetBlockCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="P:Patagames.Pdf.FPDF_FILEACCESS.Param">
            <summary>
            Gets a user defined data, passed as the first parameter to getBlockCallback callback.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FPDF_FILEACCESS.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initialize a new instance of the FPDF_FILEACCESS class using file length and user data
            </summary>
            <param name="FileLen">File length, in bytes.</param>
            <param name="param">A custom pointer for all implementation specific data.</param>
        </member>
        <member name="M:Patagames.Pdf.FPDF_FILEACCESS.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.FPDF_FILEACCESS"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FPDF_FILEACCESS.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.FPDF_FILEACCESS"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="T:Patagames.Pdf.WriteBlockCallback">
            <summary>
            Output a block of data in your custom way.
            </summary>
            <param name="pThis">Pointer to the structure itself</param>
            <param name="buffer">Pointer to a buffer to output</param>
            <param name="buflen">The size of the buffer</param>
            <returns>Should be non-zero if successful, zero for error</returns>
            <remarks>Required: Yes. Called by function <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)"/></remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FILEWRITE">
            <summary>
             Class for custom file write
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEWRITE.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEWRITE.WriteBlock">
            <summary>
            UserCallbackFunction. See <see cref="T:Patagames.Pdf.WriteBlockCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.ReleaseCallback">
            <summary>
            Give implementation a chance to release any data after the interface is no longer used
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <remarks>Required: No. Called by Pdfium SDK during the final cleanup process.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_InvalidateCallback">
            <summary>
            Invalidate the client area within the specified rectangle.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">Left position of the client area in PDF page coordinate.</param>
            <param name="top">Top  position of the client area in PDF page coordinate.</param>
            <param name="right">Right position of the client area in PDF page  coordinate.</param>
            <param name="bottom">Bottom position of the client area in PDF page coordinate.</param>
            <remarks>Required" Yes. All positions are measured in PDF "user space". Implementation should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function for repainting a specified page area.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_OutputSelectedRectCallback">
            <summary>
            When user is taking the mouse to select texts on a form field, this callback function will keep returning the selected areas to the implementation.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">Left position of the client area in PDF page coordinate.</param>
            <param name="top">Top  position of the client area in PDF page coordinate.</param>
            <param name="right">Right position of the client area in PDF page  coordinate.</param>
            <param name="bottom">Bottom position of the client area in PDF page coordinate.</param>
            <remarks>Required: No. This CALLBACK function is useful for implementing special text selection effect. Implementation should
            first records the returned rectangles, then draw them one by one at the painting period, last,remove all 
            the recorded rectangles when finish painting.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetCursorCallback">
            <summary>
            Set the Cursor shape
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nCursorType">Cursor type. see Flags for Cursor type for the details.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.TimerCallback">
            <summary>
            Declares of a pointer type to the callback function for the <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/> method.
            </summary>
            <param name="idEvent">dentifier of the timer.</param>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetTimerCallback">
            <summary>
            This method installs a system timer. A time-out value is specified, 
            and every time a time-out occurs, the system passes a message to
            the TimerProc callback function. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="uElapse">Specifies the time-out value, in milliseconds.</param>
            <param name="lpTimerFunc">A pointer to the callback function-TimerCallback.</param>
            <returns>The timer identifier of the new timer if the function is successful.
            An application passes this value to the <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_KillTimer"/> method to kill 
            the timer. Nonzero if it is successful; otherwise, it is zero.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_KillTimerCallback">
            <summary>
            This method kills the timer event identified by nIDEvent, set by an earlier call to <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/>.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nTimerID">The timer ID return by <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/> function.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetLocalTimeCallback">
            <summary>
            This method receives the current local time on the system. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <returns><see cref="T:Patagames.Pdf.FPDF_SYSTEMTIME"/> structure filled by current time</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_OnChangeCallback">
            <summary>
            This method will be invoked to notify implementation when the value of any FormField on the document had been changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetPageCallback">
            <summary>
            This method receives the page pointer associated with a specified page index.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="nPageIndex">Index number of the page. 0 for the first page.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes. In some cases, the document-level JavaScript action may refer to a page which hadn't been loaded yet.
            To successfully run the javascript action, implementation need to load the page for SDK.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetCurrentPageCallback">
            <summary>
            This method receives the current page pointer.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetRotationCallback">
            <summary>
            This method receives currently rotation of the page view.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>The page rotation. Should be 0(0 degree),1(90 degree),2(180 degree),3(270 degree), in a clockwise direction.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_DoURIActionCallback">
            <summary>
            This action resolves to a uniform resource identifier. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="bsURI">A byte string which indicates the uniform resource identifier, terminated by 0.</param>
            <remarks>required: No. See the URI actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="T:Patagames.Pdf.FFI_ExecuteNamedActionCallback">
            <summary>
            This method will execute an named action.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="namedAction">A byte string which indicates the named action, terminated by 0.</param>
            <remarks>See the named actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.
            Required: Yes.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetTextFieldFocusCallback">
            <summary>
            This method will be called when a text field is getting or losing a focus.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="value">The string value of the form field, in UTF-16LE format.</param>
            <param name="valueLen">The length of the string value, number of characters (not bytes).</param>
            <param name="is_focus">True if the form field is getting a focus, False for losing a focus.</param>
            <remarks>required: No. Currently,only support text field and combobox field.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_DoGoToActionCallback">
            <summary>
            This action changes the view to a specified destination.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nPageIndex">The index of the PDF page.</param>
            <param name="zoomMode">The zoom mode for viewing page.See ZoomTypes. </param>
            <param name="fPosArray">The float array which carries the position info</param>
            <param name="sizeofArray">The size of float array.</param>
            <remarks>Required: No. See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FORMFILLINFO">
            <summary>
            Class for manipulates with PDF forms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.Release">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.ReleaseCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_Invalidate">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_InvalidateCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_OutputSelectedRect">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_OutputSelectedRectCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetCursor">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetCursorCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetTimerCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_KillTimer">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_KillTimerCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetLocalTime">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetLocalTimeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_OnChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_OnChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetPageCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetCurrentPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetCurrentPageCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetRotation">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetRotationCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_ExecuteNamedAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_ExecuteNamedActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTextFieldFocus">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetTextFieldFocusCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_DoURIAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_DoURIActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_DoGoToAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_DoGoToActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.m_pJsPlatform">
            <summary>
            pointer to <see cref="T:Patagames.Pdf.IPDF_JSPLATFORM"/> interface
            </summary>
        </member>
        <member name="T:Patagames.Pdf.BeforeValueChangeCallback">
            <summary>
            This delegate invoked by SDK before field is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>Required: Yes.
            <para>Delegate is called by the text boxes and the combo boxes when they lose focus.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterValueChangeCallback">
            <summary>
            This delegate invoked by SDK after field is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>Required: Yes.
            <para>Delegate is called by the text boxes and the combo boxes when they lose focus.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeSelectionChangeCallback">
            <summary>
            This delegate invoked by SDK before field's selection is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>Required: Yes.
            <para>Delegate is called by the list boxes when it lose focus.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterSelectionChangeCallback">
            <summary>
            This delegate invoked by SDK after field's selection is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>Required: Yes.
            <para>Delegate is called by the list boxes when it lose focus.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterCheckedStatusChangeCallback">
            <summary>
            This delegate invoked by SDK after checked statuses is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>Required: Yes.
            <para>Delegate is called by the check boxes and radio buttons when they lose focus.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeFormResetCallback">
            <summary>
            This delegate invoked by SDK before forms is reseted.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>Required: Yes.
            <para>Delegate is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterFormResetCallback">
            <summary>
            This delegate invoked by SDK after forms is reseted.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <remarks>Required: Yes.
            <para>Delegate is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeFormImportDataCallback">
            <summary>
            This delegate invoked by SDK before forms data is imported.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>Required: Yes.
            <para>Delegate is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterFormImportDataCallback">
            <summary>
            This delegate invoked by SDK after forms data is imported.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <remarks>Required: Yes.
            <para>Delegate is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FORMFILLNOTIFY">
            <summary>
            Represents a class that contains callbacks which receives the notification from the forms.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeValueChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeValueChangeCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterValueChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterValueChangeCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeSelectionChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeSelectionChangeCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterSelectionChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterSelectionChangeCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterCheckedStatusChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterCheckedStatusChangeCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeFormReset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeFormResetCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterFormReset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterFormResetCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeFormImportData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeFormImportDataCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterFormImportData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterFormImportDataCallback"/> delegate for details
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.ReleaseFontsCallback">
            <summary>
            Give implementation a chance to release any data after the interface is no longer used
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <remarks>Required: No. Called by Pdfium SDK during the final cleanup process.</remarks>
        </member>
        <member name="T:Patagames.Pdf.EnumFontsCallback">
            <summary>
            Enumerate all fonts installed on the system
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="pMapper">An opaque pointer to internal font mapper, used when calling <see cref="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)"/></param>
            <remarks>Required: No. Implementation should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)"/> function for each font found.
            Only TrueType/OpenType and Type1 fonts are accepted by Pdfium SDK.</remarks>
        </member>
        <member name="T:Patagames.Pdf.MapFontCallback">
            <summary>
            Use the system font mapper to get a font handle from requested parameters
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="weight">Weight of the requested font. 400 is normal and 700 is bold.</param>
            <param name="bItalic">Italic option of the requested font, TRUE or FALSE.</param>
            <param name="charset">Character set identifier for the requested font. See above defined constants.</param>
            <param name="pitch_family">A combination of flags. See above defined constants.</param>
            <param name="face">Typeface name. Currently use system local encoding only.</param>
            <param name="bExact">Pointer to an boolean value receiving the indicator whether mapper found the exact match. If mapper is not sure whether it's exact match, ignore this paramter.</param>
            <returns>An opaque pointer for font handle, or IntPtr.Zero if system mapping is not supported.</returns>
            <remarks>
            Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method is not implemented.
            If the system supports native font mapper (like Windows), implementation can implement this method to get a font handle. 
            Otherwise, Pdfium SDK will do the mapping and then call GetFont method.
            Only TrueType/OpenType and Type1 fonts are accepted by Pdfium SDK.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontCallback">
            <summary>
            Get a handle to a particular font by its internal ID
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="face">Typeface name. Currently use system local encoding only.</param>
            <returns>An opaque pointer for font handle.</returns>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> method is not implemented.
            If the system mapping not supported, Pdfium SDK will do the font mapping and use this method to get a font handle.</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontDataCallback">
            <summary>
            Get font data from a font
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <param name="table">TrueType/OpenType table identifier (refer to TrueType specification). 0 for the whole font file.</param>
            <param name="buffer">The buffer receiving the font data. Can be NULL if not provided</param>
            <param name="buf_size">Buffer size, can be zero if not provided</param>
            <returns>Number of bytes needed, if buffer not provided or not large enough, or number of bytes written into buffer otherwise.</returns>
            <remarks>Required: Yes. Can read either full font file, or a particular TrueType/OpenType table</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFaceNameCallback">
            <summary>
            Get face name from a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <param name="buffer">The buffer receiving the face name. Can be NULL if not provided</param>
            <param name="buf_size">Buffer size, can be zero if not provided</param>
            <returns>Number of bytes needed, if buffer not provided or not large enough, or number of bytes written into buffer otherwise.</returns>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontCharsetCallback">
            <summary>
            Get character set information for a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <returns>Character set identifier. See defined constants above.</returns>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.DeleteFontCallback">
            <summary>
            Delete a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_SYSFONTINFO">
            <summary>
            Interface for getting system font information and font mapping
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.Release">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.ReleaseCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.EnumFonts">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.EnumFontsCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.MapFontCallback"/> delegate for detail
            </summary>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method is not implemented.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontCallback"/> delegate for detail
            </summary>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> method is not implemented</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFontData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontDataCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFaceName">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFaceNameCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFontCharset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontCharsetCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.DeleteFont">
            <summary>
            Application defined callback function. See <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.DeleteFont"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_SYSTEMTIME">
            <summary>
            Declares of a struct type to the local system time.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wYear">
            <summary>
            years since 1900
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMonth">
            <summary>
            months since January - [0,11]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wDayOfWeek">
            <summary>
            days since Sunday - [0,6]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wDay">
            <summary>
            day of the month - [1,31]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wHour">
            <summary>
            hours since midnight - [0,23]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMinute">
            <summary>
            minutes after the hour - [0,59]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wSecond">
            <summary>
            seconds after the minute - [0,59] 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMilliseconds">
            <summary>
            milliseconds after the second - [0,999]
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_COLOR">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_COLOR.Empty">
            <summary>
            Empty color
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.A">
            <summary>
            Gets the alpha component value of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.R">
            <summary>
            Gets the red component value of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.G">
            <summary>
            Gets the green component value of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.B">
            <summary>
            Gets the blue component value of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <param name="a">The alpha component. Valid values are 0 through 255.</param>
            <param name="r">The red component. Valid values are 0 through 255.</param>
            <param name="g">The green component. Valid values are 0 through 255.</param>
            <param name="b">The blue component. Valid values are 0 through 255.</param>
            <remarks>To create an opaque color, set alpha to 255. To create a semitransparent color, set alpha to any value from 1 through 254.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from the three RGB component (red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <param name="r">The red component. Valid values are 0 through 255.</param>
            <param name="g">The green component. Valid values are 0 through 255.</param>
            <param name="b">The blue component. Valid values are 0 through 255.</param>
            <remarks>The alpha component is equal to 255.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(System.Int32)">
            <summary>
            Creates a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from a 32-bit ARGB value.
            </summary>
            <param name="argb">A value specifying the 32-bit ARGB value.</param>
            <remarks>The byte-ordering of the 32-bit ARGB value is AARRGGBB. The most significant byte (MSB), represented by AA, is the alpha component value. The second, third, and fourth bytes, represented by RR, GG, and BB, respectively, are the color components red, green, and blue, respectively.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(System.Single[])">
            <summary>
            Creates a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from a float array.
            </summary>
            <param name="arr">An array of numbers in the range 0.0 to 1.0, representing a color.</param>
            <remarks>The number of array elements determines the color space in which the color is defined: 0 - No color(transparent); 1 - gray color; 3 - each item in the array represents RGB components respectively; 4 - each item in the array represents CMYK components respectively.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeArray)">
            <summary>
            Creates a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from a <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> array.
            </summary>
            <param name="arr">An array of numbers in the range 0.0 to 1.0, representing a color.</param>
            <remarks>The number of array elements determines the color space in which the color is defined: 0 - No color(transparent); 1 - gray color; 3 - each item in the array represents RGB components respectively; 4 - each item in the array represents CMYK components respectively.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initialize a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure from the four ARGB component (alpha, red, green, and blue) values.
            </summary>
            <param name="a">The alpha component. Valid values are 0 through 1.</param>
            <param name="r">The red component. Valid values are 0 through 1.</param>
            <param name="g">The green component. Valid values are 0 through 1.</param>
            <param name="b">The blue component. Valid values are 0 through 1.</param>
            <remarks>To create an opaque color, set alpha to 1. To create a semitransparent color, set alpha to any value from 0 through 1.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.ToArgb">
            <summary>
            Gets the 32-bit ARGB value of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
            <returns>The 32-bit ARGB value of this <see cref="T:Patagames.Pdf.FS_COLOR"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.ToArray">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> of this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
            <returns><see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/>  of this <see cref="T:Patagames.Pdf.FS_COLOR"/>.</returns>
            <remarks>The number of array elements determines the color space in which the color is defined: 0 - No color(transparent); 1 - gray color; 3 - each item in the array represents RGB components respectively; 4 - each item in the array represents CMYK components respectively.</remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure and is equivalent to this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
            <param name="obj">The object to test.</param>
            <returns>true if obj is a <see cref="T:Patagames.Pdf.FS_COLOR"/> structure equivalent to this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.Equals(Patagames.Pdf.FS_COLOR)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_COLOR"/> is equivalent to the specified color.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_COLOR"/> to test.</param>
            <returns>true if the two <see cref="T:Patagames.Pdf.FS_COLOR"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.op_Equality(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR)">
            <summary>
            Tests whether two specified <see cref="T:Patagames.Pdf.FS_COLOR"/> structures are equivalent.
            </summary>
            <param name="left">The <see cref="T:Patagames.Pdf.FS_COLOR"/> that is to the left of the equality operator.</param>
            <param name="right">The <see cref="T:Patagames.Pdf.FS_COLOR"/> that is to the right of the equality operator.</param>
            <returns>true if the two <see cref="T:Patagames.Pdf.FS_COLOR"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.op_Inequality(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR)">
            <summary>
            Tests whether two specified <see cref="T:Patagames.Pdf.FS_COLOR"/> structures are different.
            </summary>
            <param name="left">The <see cref="T:Patagames.Pdf.FS_COLOR"/> that is to the left of the inequality operator.</param>
            <param name="right">The <see cref="T:Patagames.Pdf.FS_COLOR"/> that is to the right of the inequality operator.</param>
            <returns>true if the two <see cref="T:Patagames.Pdf.FS_COLOR"/> structures are different; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_COLOR.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Patagames.Pdf.FS_COLOR"/> structure.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this <see cref="T:Patagames.Pdf.FS_COLOR"/>.</returns>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Transparent">
            <summary>
            Gets a color that has an ARGB value of #00FFFFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.AliceBlue">
            <summary>
            Gets a color that has an ARGB value of #FFF0F8FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.AntiqueWhite">
            <summary>
            Gets a color that has an ARGB value of #FFFAEBD7
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Aqua">
            <summary>
            Gets a color that has an ARGB value of #FF00FFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Aquamarine">
            <summary>
            Gets a color that has an ARGB value of #FF7FFFD4
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Azure">
            <summary>
            Gets a color that has an ARGB value of #FFF0FFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Beige">
            <summary>
            Gets a color that has an ARGB value of #FFF5F5DC
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Bisque">
            <summary>
            Gets a color that has an ARGB value of #FFFFE4C4
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Black">
            <summary>
            Gets a color that has an ARGB value of #FF000000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.BlanchedAlmond">
            <summary>
            Gets a color that has an ARGB value of #FFFFEBCD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Blue">
            <summary>
            Gets a color that has an ARGB value of #FF0000FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.BlueViolet">
            <summary>
            Gets a color that has an ARGB value of #FF8A2BE2
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Brown">
            <summary>
            Gets a color that has an ARGB value of #FFA52A2A
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.BurlyWood">
            <summary>
            Gets a color that has an ARGB value of #FFDEB887
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.CadetBlue">
            <summary>
            Gets a color that has an ARGB value of #FF5F9EA0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Chartreuse">
            <summary>
            Gets a color that has an ARGB value of #FF7FFF00
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Chocolate">
            <summary>
            Gets a color that has an ARGB value of #FFD2691E
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Coral">
            <summary>
            Gets a color that has an ARGB value of #FFFF7F50
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.CornflowerBlue">
            <summary>
            Gets a color that has an ARGB value of #FF6495ED
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Cornsilk">
            <summary>
            Gets a color that has an ARGB value of #FFFFF8DC
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Crimson">
            <summary>
            Gets a color that has an ARGB value of #FFDC143C
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Cyan">
            <summary>
            Gets a color that has an ARGB value of #FF00FFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkBlue">
            <summary>
            Gets a color that has an ARGB value of #FF00008B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkCyan">
            <summary>
            Gets a color that has an ARGB value of #FF008B8B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkGoldenrod">
            <summary>
            Gets a color that has an ARGB value of #FFB8860B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkGray">
            <summary>
            Gets a color that has an ARGB value of #FFA9A9A9
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkGreen">
            <summary>
            Gets a color that has an ARGB value of #FF006400
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkKhaki">
            <summary>
            Gets a color that has an ARGB value of #FFBDB76B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkMagenta">
            <summary>
            Gets a color that has an ARGB value of #FF8B008B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkOliveGreen">
            <summary>
            Gets a color that has an ARGB value of #FF556B2F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkOrange">
            <summary>
            Gets a color that has an ARGB value of #FFFF8C00
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkOrchid">
            <summary>
            Gets a color that has an ARGB value of #FF9932CC
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkRed">
            <summary>
            Gets a color that has an ARGB value of #FF8B0000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkSalmon">
            <summary>
            Gets a color that has an ARGB value of #FFE9967A
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkSeaGreen">
            <summary>
            Gets a color that has an ARGB value of #FF8FBC8B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkSlateBlue">
            <summary>
            Gets a color that has an ARGB value of #FF483D8B
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkSlateGray">
            <summary>
            Gets a color that has an ARGB value of #FF2F4F4F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkTurquoise">
            <summary>
            Gets a color that has an ARGB value of #FF00CED1
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DarkViolet">
            <summary>
            Gets a color that has an ARGB value of #FF9400D3
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DeepPink">
            <summary>
            Gets a color that has an ARGB value of #FFFF1493
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DeepSkyBlue">
            <summary>
            Gets a color that has an ARGB value of #FF00BFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DimGray">
            <summary>
            Gets a color that has an ARGB value of #FF696969
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.DodgerBlue">
            <summary>
            Gets a color that has an ARGB value of #FF1E90FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Firebrick">
            <summary>
            Gets a color that has an ARGB value of #FFB22222
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.FloralWhite">
            <summary>
            Gets a color that has an ARGB value of #FFFFFAF0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.ForestGreen">
            <summary>
            Gets a color that has an ARGB value of #FF228B22
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Fuchsia">
            <summary>
            Gets a color that has an ARGB value of #FFFF00FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Gainsboro">
            <summary>
            Gets a color that has an ARGB value of #FFDCDCDC
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.GhostWhite">
            <summary>
            Gets a color that has an ARGB value of #FFF8F8FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Gold">
            <summary>
            Gets a color that has an ARGB value of #FFFFD700
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Goldenrod">
            <summary>
            Gets a color that has an ARGB value of #FFDAA520
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Gray">
            <summary>
            Gets a color that has an ARGB value of #FF808080
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Green">
            <summary>
            Gets a color that has an ARGB value of #FF008000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.GreenYellow">
            <summary>
            Gets a color that has an ARGB value of #FFADFF2F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Honeydew">
            <summary>
            Gets a color that has an ARGB value of #FFF0FFF0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.HotPink">
            <summary>
            Gets a color that has an ARGB value of #FFFF69B4
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.IndianRed">
            <summary>
            Gets a color that has an ARGB value of #FFCD5C5C
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Indigo">
            <summary>
            Gets a color that has an ARGB value of #FF4B0082
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Ivory">
            <summary>
            Gets a color that has an ARGB value of #FFFFFFF0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Khaki">
            <summary>
            Gets a color that has an ARGB value of #FFF0E68C
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Lavender">
            <summary>
            Gets a color that has an ARGB value of #FFE6E6FA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LavenderBlush">
            <summary>
            Gets a color that has an ARGB value of #FFFFF0F5
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LawnGreen">
            <summary>
            Gets a color that has an ARGB value of #FF7CFC00
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LemonChiffon">
            <summary>
            Gets a color that has an ARGB value of #FFFFFACD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightBlue">
            <summary>
            Gets a color that has an ARGB value of #FFADD8E6
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightCoral">
            <summary>
            Gets a color that has an ARGB value of #FFF08080
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightCyan">
            <summary>
            Gets a color that has an ARGB value of #FFE0FFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightGoldenrodYellow">
            <summary>
            Gets a color that has an ARGB value of #FFFAFAD2
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightGray">
            <summary>
            Gets a color that has an ARGB value of #FFD3D3D3
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightGreen">
            <summary>
            Gets a color that has an ARGB value of #FF90EE90
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightPink">
            <summary>
            Gets a color that has an ARGB value of #FFFFB6C1
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightSalmon">
            <summary>
            Gets a color that has an ARGB value of #FFFFA07A
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightSeaGreen">
            <summary>
            Gets a color that has an ARGB value of #FF20B2AA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightSkyBlue">
            <summary>
            Gets a color that has an ARGB value of #FF87CEFA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightSlateGray">
            <summary>
            Gets a color that has an ARGB value of #FF778899
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightSteelBlue">
            <summary>
            Gets a color that has an ARGB value of #FFB0C4DE
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LightYellow">
            <summary>
            Gets a color that has an ARGB value of #FFFFFFE0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Lime">
            <summary>
            Gets a color that has an ARGB value of #FF00FF00
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.LimeGreen">
            <summary>
            Gets a color that has an ARGB value of #FF32CD32
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Linen">
            <summary>
            Gets a color that has an ARGB value of #FFFAF0E6
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Magenta">
            <summary>
            Gets a color that has an ARGB value of #FFFF00FF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Maroon">
            <summary>
            Gets a color that has an ARGB value of #FF800000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumAquamarine">
            <summary>
            Gets a color that has an ARGB value of #FF66CDAA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumBlue">
            <summary>
            Gets a color that has an ARGB value of #FF0000CD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumOrchid">
            <summary>
            Gets a color that has an ARGB value of #FFBA55D3
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumPurple">
            <summary>
            Gets a color that has an ARGB value of #FF9370DB
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumSeaGreen">
            <summary>
            Gets a color that has an ARGB value of #FF3CB371
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumSlateBlue">
            <summary>
            Gets a color that has an ARGB value of #FF7B68EE
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumSpringGreen">
            <summary>
            Gets a color that has an ARGB value of #FF00FA9A
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumTurquoise">
            <summary>
            Gets a color that has an ARGB value of #FF48D1CC
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MediumVioletRed">
            <summary>
            Gets a color that has an ARGB value of #FFC71585
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MidnightBlue">
            <summary>
            Gets a color that has an ARGB value of #FF191970
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MintCream">
            <summary>
            Gets a color that has an ARGB value of #FFF5FFFA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.MistyRose">
            <summary>
            Gets a color that has an ARGB value of #FFFFE4E1
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Moccasin">
            <summary>
            Gets a color that has an ARGB value of #FFFFE4B5
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.NavajoWhite">
            <summary>
            Gets a color that has an ARGB value of #FFFFDEAD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Navy">
            <summary>
            Gets a color that has an ARGB value of #FF000080
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.OldLace">
            <summary>
            Gets a color that has an ARGB value of #FFFDF5E6
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Olive">
            <summary>
            Gets a color that has an ARGB value of #FF808000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.OliveDrab">
            <summary>
            Gets a color that has an ARGB value of #FF6B8E23
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Orange">
            <summary>
            Gets a color that has an ARGB value of #FFFFA500
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.OrangeRed">
            <summary>
            Gets a color that has an ARGB value of #FFFF4500
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Orchid">
            <summary>
            Gets a color that has an ARGB value of #FFDA70D6
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PaleGoldenrod">
            <summary>
            Gets a color that has an ARGB value of #FFEEE8AA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PaleGreen">
            <summary>
            Gets a color that has an ARGB value of #FF98FB98
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PaleTurquoise">
            <summary>
            Gets a color that has an ARGB value of #FFAFEEEE
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PaleVioletRed">
            <summary>
            Gets a color that has an ARGB value of #FFDB7093
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PapayaWhip">
            <summary>
            Gets a color that has an ARGB value of #FFFFEFD5
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PeachPuff">
            <summary>
            Gets a color that has an ARGB value of #FFFFDAB9
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Peru">
            <summary>
            Gets a color that has an ARGB value of #FFCD853F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Pink">
            <summary>
            Gets a color that has an ARGB value of #FFFFC0CB
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Plum">
            <summary>
            Gets a color that has an ARGB value of #FFDDA0DD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.PowderBlue">
            <summary>
            Gets a color that has an ARGB value of #FFB0E0E6
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Purple">
            <summary>
            Gets a color that has an ARGB value of #FF800080
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Red">
            <summary>
            Gets a color that has an ARGB value of #FFFF0000
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.RosyBrown">
            <summary>
            Gets a color that has an ARGB value of #FFBC8F8F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.RoyalBlue">
            <summary>
            Gets a color that has an ARGB value of #FF4169E1
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SaddleBrown">
            <summary>
            Gets a color that has an ARGB value of #FF8B4513
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Salmon">
            <summary>
            Gets a color that has an ARGB value of #FFFA8072
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SandyBrown">
            <summary>
            Gets a color that has an ARGB value of #FFF4A460
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SeaGreen">
            <summary>
            Gets a color that has an ARGB value of #FF2E8B57
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SeaShell">
            <summary>
            Gets a color that has an ARGB value of #FFFFF5EE
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Sienna">
            <summary>
            Gets a color that has an ARGB value of #FFA0522D
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Silver">
            <summary>
            Gets a color that has an ARGB value of #FFC0C0C0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SkyBlue">
            <summary>
            Gets a color that has an ARGB value of #FF87CEEB
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SlateBlue">
            <summary>
            Gets a color that has an ARGB value of #FF6A5ACD
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SlateGray">
            <summary>
            Gets a color that has an ARGB value of #FF708090
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Snow">
            <summary>
            Gets a color that has an ARGB value of #FFFFFAFA
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SpringGreen">
            <summary>
            Gets a color that has an ARGB value of #FF00FF7F
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.SteelBlue">
            <summary>
            Gets a color that has an ARGB value of #FF4682B4
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Tan">
            <summary>
            Gets a color that has an ARGB value of #FFD2B48C
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Teal">
            <summary>
            Gets a color that has an ARGB value of #FF008080
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Thistle">
            <summary>
            Gets a color that has an ARGB value of #FFD8BFD8
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Tomato">
            <summary>
            Gets a color that has an ARGB value of #FFFF6347
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Turquoise">
            <summary>
            Gets a color that has an ARGB value of #FF40E0D0
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Violet">
            <summary>
            Gets a color that has an ARGB value of #FFEE82EE
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Wheat">
            <summary>
            Gets a color that has an ARGB value of #FFF5DEB3
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.White">
            <summary>
            Gets a color that has an ARGB value of #FFFFFFFF
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.WhiteSmoke">
            <summary>
            Gets a color that has an ARGB value of #FFF5F5F5
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.Yellow">
            <summary>
            Gets a color that has an ARGB value of #FFFFFF00
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_COLOR.YellowGreen">
            <summary>
            Gets a color that has an ARGB value of #FF9ACD32
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_MATRIX">
            <summary>
            Represents the transformation matrices
            </summary>
            <remarks>
            To understand the mathematics of coordinate transformations in PDF, it is vital to remember two points: 
            <list type="bullet">
            <item>Transformations alter coordinate systems, not graphics objects. All objects painted before a transformation is applied are unaffected by the transformation. Objects painted after the transformation is applied are interpreted in the transformed coordinate system. </item>
            <item>Transformation matrices specify the transformation from the new (transformed) coordinate system to the original (untransformed) coordinate system. All coordinates used after the transformation are expressed in the transformed coordinate system. PDF applies the transformation matrix to find the equivalent coordinates in the untransformed coordinate system. </item>
            </list>
            <note type="note">Many computer graphics textbooks consider transformations of graphics objects rather than of coordinate systems. Although either approach is correct and selfconsistent, some details of the calculations differ depending on which point of view is taken. </note>
            <para>PDF represents coordinates in a two-dimensional space. The point (x, y) in such a space can be expressed in vector form as [x y 1]. The constant third element of this vector (1) is needed so that the vector can be used with 3-by-3 matrices in the calculations described below. </para>
            <para>The transformation between two coordinate systems is represented by a 3-by-3 transformation matrix written as follows:</para>
            <pre>
            |a b 0|
            |c d 0|
            |e f 1|
            </pre>
            <para>Because a transformation matrix has only six elements that can be changed, it is usually specified in PDF as the six-element array [a b c d e f ]. </para>
            <para>Coordinate transformations are expressed as matrix multiplications:</para>
            <pre>
                                       |a b 0|
            [ x′ y′ 1 ] =  [ x y 1 ] x |c d 0|
                                       |e f 1|
            </pre>
            <para>
            Because PDF transformation matrices specify the conversion from the transformed coordinate system to the 
            original (untransformed) coordinate system, x′ and y′ in this equation are the coordinates in the untransformed coordinate system,
            and x and y are the coordinates in the transformed system. The multiplication is carried out as follows:
            </para>
            <pre>
            x′ = a × x + c × y + e
            y′ = b × x + d × y + f
            </pre>
            <para>If a series of transformations is carried out, the matrices representing each of the individual transformations can be multiplied together to produce a single equivalent matrix representing the composite transformation</para>
            <para>
            Matrix multiplication is not commutative — the order in which matrices are multiplied is significant. Consider a sequence of two transformations: a scaling transformation 
            applied to the user space coordinate system, followed by a conversion from the resulting scaled user space to device space. Let Ms be the matrix specifying 
            the scaling and Mc the current transformation matrix, which transforms user space to device space. Recalling that coordinates are always specified in the transformed
            space, the correct order of transformations must first convert the scaled coordinates to default user space and then the default user space coordinates to device space. This can be expressed as 
            </para>
            <pre>
            Xd = Xu × Mc  = (Xs × Ms) × Mc = Xs × (Ms × Mc)
            </pre>
            where
            <pre>
            Xd denotes the coordinates in device space<markup><br/></markup>
            Xu denotes the coordinates in default user space<markup><br/></markup>
            Xs denotes the coordinates in scaled user space 
            </pre>
            <para>This shows that when a new transformation is concatenated with an existing one, the matrix representing it must be multiplied before (premultiplied with) the existing transformation matrix. </para>
            <para>This result is true in general for PDF: when a sequence of transformations is carried 
            out, the matrix representing the combined transformation (M′) is calculated
            by premultiplying the matrix representing the additional transformation (Mt)
            with the one representing all previously existing transformations (M): </para>
            <pre>
            M′ = Mt × M
            </pre>
            <note type="note">When rendering graphics objects, it is sometimes necessary for an application
            to perform the inverse of a transformation—that is, to find the user space coordinates
            that correspond to a given pair of device space coordinates. Not all transformations
            are invertible, however. For example, if a matrix contains a, b, c, and d
            elements that are all zero, all user coordinates map to the same device coordinates
            and there is no unique inverse transformation. Such noninvertible transformations
            are not very useful and generally arise from unintended operations, such as scaling
            by 0. Use of a noninvertible matrix when painting graphics objects can result in unpredictable behavior.</note>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.a">
            <summary>
            Coefficient a.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.b">
            <summary>
            Coefficient b.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.c">
            <summary>
            Coefficient c.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.d">
            <summary>
            Coefficient d.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.e">
            <summary>
            Coefficient e.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.f">
            <summary>
            Coefficient f.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.#ctor">
            <summary>
            Initialize a new instance of FS_MATRIX class
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initialize a new instance of FS_MATRIX class
            </summary>
            <param name="a">Coefficient a</param>
            <param name="b">Coefficient b</param>
            <param name="c">Coefficient c</param>
            <param name="d">Coefficient d</param>
            <param name="e">Coefficient e</param>
            <param name="f">Coefficient f</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialize a new instance of FS_MATRIX class
            </summary>
            <param name="a">Coefficient a</param>
            <param name="b">Coefficient b</param>
            <param name="c">Coefficient c</param>
            <param name="d">Coefficient d</param>
            <param name="e">Coefficient e</param>
            <param name="f">Coefficient f</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_MATRIX"/> structure with the specified array.
            </summary>
            <param name="array">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> or <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect"/> array that contains a, b, c, d, e and f values of matrix</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.ToArray">
            <summary>
            Returns a <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> representation of the matrix.
            </summary>
            <returns>An array of 6 numbers specifying the matrix coefficients given in the order a, b, c, d, e, f.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.SetIdentity">
            <summary>
            Initializes this instance of the <see cref="T:Patagames.Pdf.FS_MATRIX"/> class as the identity matrix.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.SetReverse">
            <summary>
            Inverts this matrix, if it is invertible.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.SetReverse(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Inverts the specified matrix, if it is invertible and set it to this matrix.
            </summary>
            <param name="matrix">The matrix by which this matrix is to be set.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Concat(Patagames.Pdf.FS_MATRIX,System.Boolean)">
            <summary>
            Multiplies this matrix by the matrix specified in the matrix parameter, and in the order specified in the prepended parameter.
            </summary>
            <param name="matrix">The <see cref="T:Patagames.Pdf.FS_MATRIX"/> by which this matrix is to be multiplied.</param>
            <param name="prepended">Represents the order of the multiplication.</param>
            <remarks>
            <para>
            if the specified order is Prepend (the prepend parameter is True), 
            this Matrix is multiplied by the specified matrix in a prepended order. 
            Otherwise, this Matrix is multiplied by the specified matrix in an appended order.
            </para>
            <para>
            <list type="bullet">
            <item>Prepended order: [SpecifiedMatrix] x [ThisMatrix]</item>
            <item>Appended  order: [ThisMatrix] x [SpecifiedMatrix]</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.ConcatInverse(Patagames.Pdf.FS_MATRIX,System.Boolean)">
            <summary>
            Inverts the matrix specified in the matrix parameter and than multiplies this matrix by the inverted matrix, and in the order specified in the prepended parameter.
            </summary>
            <param name="matrix">The <see cref="T:Patagames.Pdf.FS_MATRIX"/> by which this matrix is to be multiplied.</param>
            <param name="prepended">Represents the order of the multiplication.</param>
            <remarks>
            <para>
            if the specified order is Prepend (the prepend parameter is True), 
            this Matrix is multiplied by the specified matrix in a prepended order. 
            Otherwise, this Matrix is multiplied by the specified matrix in an appended order.
            </para>
            <para>
            <list type="bullet">
            <item>Prepended order: [SpecifiedMatrix] x [ThisMatrix]</item>
            <item>Appended  order: [ThisMatrix] x [SpecifiedMatrix]</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Rotate(System.Single,System.Boolean)">
            <summary>
            Applies a clockwise rotation of an amount specified in the angle parameter, around the origin (zero x and y coordinates) for this Matrix.
            </summary>
            <param name="angle">The angle of the rotation, in radians.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the rotation is applied to this Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Rotate(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Applies a clockwise rotation about the specified point to this Matrix in the specified order.
            </summary>
            <param name="angle">The angle of the rotation, in radians.</param>
            <param name="x">The x-coordinate of the point that represents the center of the rotation.</param>
            <param name="y">The y-coordinate of the point that represents the center of the rotation.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the rotation is applied to this Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Scale(System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified scale vector (sx and sy) to this Matrix using the specified order.
            </summary>
            <param name="sx">The value by which to scale this Matrix in the x-axis direction.</param>
            <param name="sy">The value by which to scale this Matrix in the y-axis direction.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the scale vector is applied to this Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Translate(System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified translation vector to this Matrix in the specified order.
            </summary>
            <param name="x">The x value by which to translate this Matrix.</param>
            <param name="y">The y value by which to translate this Matrix.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the translation is applied to this Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Translate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Applies the specified translation vector to this Matrix in the specified order.
            </summary>
            <param name="x">The x value by which to translate this Matrix.</param>
            <param name="y">The y value by which to translate this Matrix.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the translation is applied to this Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Shear(System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified shear vector to this Matrix in the specified order.
            </summary>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
            <param name="prepended">Specifies the order (append or prepend) in which the shear is applied.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformPoint(System.Single@,System.Single@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a specified point.
            </summary>
            <param name="x">The x-coordinate of the point</param>
            <param name="y">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformPoint(System.Int32@,System.Int32@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a specified point.
            </summary>
            <param name="x">The x-coordinate of the point</param>
            <param name="y">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformDistance(System.Single,System.Single)">
            <summary>
            Applies the geometric transform represented by this Matrix to a distance.
            </summary>
            <param name="dx">The x-coordinate of the distance vector</param>
            <param name="dy">The Y-coordinate of the distance vector</param>
            <returns>The length of hte distance vector</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformDistance(System.Int32,System.Int32)">
            <summary>
            Applies the geometric transform represented by this Matrix to a distance.
            </summary>
            <param name="dx">The x-coordinate of the distance vector</param>
            <param name="dy">The Y-coordinate of the distance vector</param>
            <returns>The length of hte distance vector</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformDistance(System.Single@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a distance.
            </summary>
            <param name="distance">The distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformXDistance(System.Single@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a x-coordinate of the distance vector.
            </summary>
            <param name="dx">The x-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformXDistance(System.Int32@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a x-coordinate of the distance vector.
            </summary>
            <param name="dx">The x-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformYDistance(System.Single@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a y-coordinate of the distance vector.
            </summary>
            <param name="dy">The y-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformYDistance(System.Int32@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a y-coordinate of the distance vector.
            </summary>
            <param name="dy">The y-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformRect(Patagames.Pdf.FS_RECTF@)">
            <summary>
            Applies the geometric transform represented by this Matrix to a specified rectangle.
            </summary>
            <param name="rect">The rectangle to transform</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.TransformVector(System.Single@,System.Single@)">
            <summary>
            Applies only the scale and rotate components of this Matrix to the specified point.
            </summary>
            <param name="vx">The x-coordinate of the point</param>
            <param name="vy">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.GetUnitArea">
            <summary>
            Get unit area
            </summary>
            <returns>Unit area</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.GetXUnit">
            <summary>
            Get x unit
            </summary>
            <returns>x unit</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.GetYUnit">
            <summary>
            Get y unit
            </summary>
            <returns>y unit</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.Is90Rotated">
            <summary>
            Gets a value indicating whether this Matrix is rotated.
            </summary>
            <returns>true if this Matrix is rotated; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.IsIdentity">
            <summary>
            Gets a value indicating whether this Matrix is the identity matrix.
            </summary>
            <returns>true if this Matrix is identity; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.IsInvertible">
            <summary>
            Gets a value indicating whether this Matrix is invertible.
            </summary>
            <returns>true if this Matrix is invertible; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.IsScaled">
            <summary>
            Gets a value indicating whether this Matrix is scaled.
            </summary>
            <returns>true if this Matrix is scaled; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_MATRIX.GetReverse">
            <summary>
            Inverts this Matrix, if it is invertible and return as a new Matrix.
            </summary>
            <returns>The new inctance of the <see cref="T:Patagames.Pdf.FS_MATRIX"/> class.</returns>
        </member>
        <member name="T:Patagames.Pdf.FS_PATHPOINTF">
            <summary>
            Represents a point of the path.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_PATHPOINTF.X">
            <summary>
            Gets or sets the x-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_PATHPOINTF.Y">
            <summary>
            Gets or sets the y-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_PATHPOINTF.Flags">
            <summary>
            Gets the type of the point in the path.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.Equals(System.Object)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> contains the same coordinates and flags as the specified object.
            </summary>
            <param name="obj">The System.Object to test.</param>
            <returns>This method returns true if obj is a <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> and has the same coordinates and flags as this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.Equals(Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> contains the same coordinates and flags as the specified point.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to test.</param>
            <returns>This method returns true if obj has the same coordinates and flags as this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.op_Equality(Patagames.Pdf.FS_PATHPOINTF,Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structures. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to compare.</param>
            <remarks>
            The result specifies whether the
            values of the <see cref="P:Patagames.Pdf.FS_PATHPOINTF.X"/>, <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Y"/> and <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Flags"/> properties
            of the two <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structures are equal.
            </remarks>
            <returns>
            true if the<see cref="P:Patagames.Pdf.FS_PATHPOINTF.X"/>, <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Y"/> and <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Flags"/> values of the
            left and right <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structures are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.op_Inequality(Patagames.Pdf.FS_PATHPOINTF,Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Determines whether the coordinates of the specified points are not equal.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to compare.</param>
            <returns>true to indicate the <see cref="P:Patagames.Pdf.FS_PATHPOINTF.X"/>, <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Y"/> and <see cref="P:Patagames.Pdf.FS_PATHPOINTF.Flags"/> values of left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.#ctor(System.Single,System.Single,Patagames.Pdf.Enums.PathPointFlags)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structure 
            </summary>
            <param name="x">The x-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
            <param name="y">The y-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
            <param name="flags">The flags of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.#ctor(System.Double,System.Double,Patagames.Pdf.Enums.PathPointFlags)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structure 
            </summary>
            <param name="x">The x-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
            <param name="y">The y-coordinate of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
            <param name="flags">The flags of this <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> structure with the specified array.
            </summary>
            <param name="array">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> or <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect"/> array that contains X, Y coordinates and flag.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_PATHPOINTF.ToArray">
            <summary>
            Returns a <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> representation of the path point.
            </summary>
            <returns>An array of 3 numbers specifying the coordinates of point given in the order X, Y and flags.</returns>
        </member>
        <member name="T:Patagames.Pdf.FS_QUADPOINTSF">
            <summary>
            The structure defines the coordinates of the quadrilateral.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x1">
            <summary>
            x coordinate of the first point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y1">
            <summary>
            y coordinate of the first point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x2">
            <summary>
            x coordinate of the second point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y2">
            <summary>
            y coordinate of the second point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x3">
            <summary>
            x coordinate of the third point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y3">
            <summary>
            y coordinate of the third point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x4">
            <summary>
            x coordinate of the fourth point
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y4">
            <summary>
            y coordinate of the fourth point
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structure.
            </summary>
            <param name="x1">x coordinate of the first point.</param>
            <param name="y1">y coordinate of the first point.</param>
            <param name="x2">x coordinate of the second point.</param>
            <param name="y2">y coordinate of the second point.</param>
            <param name="x3">x coordinate of the third point.</param>
            <param name="y3">y coordinate of the third point.</param>
            <param name="x4">x coordinate of the fourth point</param>
            <param name="y4">y coordinate of the fourth point</param>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structure.
            </summary>
            <param name="x1">x coordinate of the first point.</param>
            <param name="y1">y coordinate of the first point.</param>
            <param name="x2">x coordinate of the second point.</param>
            <param name="y2">y coordinate of the second point.</param>
            <param name="x3">x coordinate of the third point.</param>
            <param name="y3">y coordinate of the third point.</param>
            <param name="x4">x coordinate of the fourth point</param>
            <param name="y4">y coordinate of the fourth point</param>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.#ctor(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structure.
            </summary>
            <param name="leftBottom">The left-bottom point of the quadrilateral.</param>
            <param name="rightBottom">The right-bottom point of the quadrilateral.</param>
            <param name="rightTop">The right-top point of the quadrilateral.</param>
            <param name="leftTop">The left-top point of the quadrilateral.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structure with the specified array.
            </summary>
            <param name="array">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> or <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect"/> array of 8 numbers specifying the coordinates of quadrilateral given in the order x1, y1, x2, y2, x3, y3, x4, y4. </param>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.#ctor(Patagames.Pdf.FS_RECTF)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structure with the specified rectangle.
            </summary>
            <param name="rect">The <see cref="T:Patagames.Pdf.FS_RECTF"/> to initialize this quadrileteral.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.ToArray">
            <summary>
            Returns a <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> representation of the quadrilaterals.
            </summary>
            <returns>An array of 8 numbers specifying the coordinates of quadrilateral given in the order x1, y1, x2, y2, x3, y3, x4, y4.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.Equals(System.Object)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> contains the same points as the specified object.
            </summary>
            <param name="obj">The System.Object to test.</param>
            <returns>This method returns true if obj is a <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>and has the same points as this <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.Equals(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> contains the same points as the specified structure.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to test.</param>
            <returns>This method returns true if obj has the same points as this <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.op_Equality(Patagames.Pdf.FS_QUADPOINTSF,Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structures. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to compare.</param>
            <remarks>
            The result specifies whether the points of the both <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structures are equal.
            </remarks>
            <returns>
            true if the  points of both <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structures are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.op_Inequality(Patagames.Pdf.FS_QUADPOINTSF,Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Determines whether the points of the specified quad points strucures are not equal.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to compare.</param>
            <returns>true to indicate the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structures are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_QUADPOINTSF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="T:Patagames.Pdf.FS_RECTF">
            <summary>
            Rectangle area(float) in device or page coordination system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.left">
            <summary>
            The x-coordinate of the left edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.top">
            <summary>
            The y-coordinate of the top edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.right">
            <summary>
            The x-coordinate of the right edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.bottom">
            <summary>
            The y-coordinate of the bottom edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_RECTF.Width">
            <summary>
            Gets the width of current rectangle
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_RECTF.Height">
            <summary>
            Gets the height of current rectangle
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_RECTF"/> structure with the specified location and size.
            </summary>
            <param name="l">The x-coordinate of the left edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="t">The y-coordinate of the top edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="r">The x-coordinate of the right edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="b">The y-coordinate of the bottom edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_RECTF"/> structure with the specified location and size.
            </summary>
            <param name="l">The x-coordinate of the left edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="t">The y-coordinate of the top edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="r">The x-coordinate of the right edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
            <param name="b">The y-coordinate of the bottom edge of this <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_RECTF"/> structure with the specified array.
            </summary>
            <param name="array">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> or <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect"/> array that contains left, bottom, right and top points of rectangle</param>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.ToArray">
            <summary>
            Returns a <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray"/> representation of the rectangle.
            </summary>
            <returns>An array of 4 numbers specifying the coordinates of rectangle given in the order left edge, bottom edge, right edge, top edge.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.Equals(System.Object)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_RECTF"/> contains the same coordinates of left, right, top and bottom edges as the specified object.
            </summary>
            <param name="obj">The System.Object to test.</param>
            <returns>This method returns true if obj is a <see cref="T:Patagames.Pdf.FS_RECTF"/>and has the same coordinates of left, right, top and bottom edges as this <see cref="T:Patagames.Pdf.FS_RECTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.Equals(Patagames.Pdf.FS_RECTF)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_RECTF"/> contains the same coordinates of left, right, top and bottom edges as the specified rectangle.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_RECTF"/> to test.</param>
            <returns>This method returns true if obj has the same coordinates of left, right, top and bottom edges as this <see cref="T:Patagames.Pdf.FS_RECTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.op_Equality(Patagames.Pdf.FS_RECTF,Patagames.Pdf.FS_RECTF)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.FS_RECTF"/> structures. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_RECTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_RECTF"/> to compare.</param>
            <remarks>
            The result specifies whether the
            values of the <see cref="F:Patagames.Pdf.FS_RECTF.left"/>, <see cref="F:Patagames.Pdf.FS_RECTF.right"/>, <see cref="F:Patagames.Pdf.FS_RECTF.top"/> and <see cref="F:Patagames.Pdf.FS_RECTF.bottom"/> properties
            of the two <see cref="T:Patagames.Pdf.FS_RECTF"/> structures are equal.
            </remarks>
            <returns>
            true if the <see cref="F:Patagames.Pdf.FS_RECTF.left"/>, <see cref="F:Patagames.Pdf.FS_RECTF.right"/>, <see cref="F:Patagames.Pdf.FS_RECTF.top"/> and <see cref="F:Patagames.Pdf.FS_RECTF.bottom"/> values of the
            left and right <see cref="T:Patagames.Pdf.FS_RECTF"/> structures are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.op_Inequality(Patagames.Pdf.FS_RECTF,Patagames.Pdf.FS_RECTF)">
            <summary>
            Determines whether the coordinates of left, right, top and bottom edges of the specified rectangle are not equal.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_RECTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_RECTF"/> to compare.</param>
            <returns>true to indicate the <see cref="F:Patagames.Pdf.FS_RECTF.left"/>, <see cref="F:Patagames.Pdf.FS_RECTF.top"/>, <see cref="F:Patagames.Pdf.FS_RECTF.right"/> and <see cref="F:Patagames.Pdf.FS_RECTF.bottom"/> values of left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_RECTF.Inflate(Patagames.Pdf.FS_RECTF)">
            <summary>
            Enlarges a FS_RECTF structure by the specified amount.
            </summary>
            <param name="rect">The amount to inflate this rectangle.</param>
        </member>
        <member name="T:Patagames.Pdf.FS_SIZEF">
            <summary>
            Represents the size in default user space.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_SIZEF.Width">
            <summary>
            Gets or sets the horizontal component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_SIZEF.Height">
            <summary>
            Gets or sets the vertical component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.
            </summary>
            <param name="width">The horizontal component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.</param>
            <param name="height">The vertical component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.
            </summary>
            <param name="width">The horizontal component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.</param>
            <param name="height">The vertical component of this <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.Equals(System.Object)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_SIZEF"/> contains the same width and height as the specified object.
            </summary>
            <param name="obj">The System.Object to test.</param>
            <returns>This method returns true if obj is a <see cref="T:Patagames.Pdf.FS_SIZEF"/>and has the same width and height as this <see cref="T:Patagames.Pdf.FS_SIZEF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.Equals(Patagames.Pdf.FS_SIZEF)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_SIZEF"/> contains the same width and height as the specified structure.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_SIZEF"/> to test.</param>
            <returns>This method returns true if obj has the same width and height as this <see cref="T:Patagames.Pdf.FS_SIZEF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.op_Equality(Patagames.Pdf.FS_SIZEF,Patagames.Pdf.FS_SIZEF)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.FS_SIZEF"/> structures. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_SIZEF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_SIZEF"/> to compare.</param>
            <remarks>
            The result specifies whether the
            values of the <see cref="F:Patagames.Pdf.FS_SIZEF.Width"/> and <see cref="F:Patagames.Pdf.FS_SIZEF.Height"/> properties
            of the two <see cref="T:Patagames.Pdf.FS_SIZEF"/> structures are equal.
            </remarks>
            <returns>
            true if the <see cref="F:Patagames.Pdf.FS_SIZEF.Width"/> and <see cref="F:Patagames.Pdf.FS_SIZEF.Height"/> values of the
            left and right <see cref="T:Patagames.Pdf.FS_SIZEF"/> structures are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.op_Inequality(Patagames.Pdf.FS_SIZEF,Patagames.Pdf.FS_SIZEF)">
            <summary>
            Determines whether the width and Height of the specified strustures are not equal.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_SIZEF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_SIZEF"/> to compare.</param>
            <returns>true to indicate the <see cref="F:Patagames.Pdf.FS_SIZEF.Width"/> and <see cref="F:Patagames.Pdf.FS_SIZEF.Height"/> values of left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_SIZEF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="T:Patagames.Pdf.AddSegmentCallback">
            <summary>
            Add a section to be downloaded.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="offset">The offset of the hint reported to be downloaded.</param>
            <param name="size">The size of the hint reported to be downloaded.</param>
            <remarks>Required: Yes. Called by Pdfium SDK to report some downloading hints for download manager.
            The position and size of section may be not accurate, part of the section might be already available.
            The download manager must deal with that to maximize download efficiency.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_DOWNLOADHINTS">
            <summary>
            Download hints interface. Used to receive hints for further downloading.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_DOWNLOADHINTS.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_DOWNLOADHINTS.AddSegment">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.AddSegmentCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IsDataAvailableCallback">
            <summary>
            Report whether the specified data section is available. A section is available only if all bytes in the section is available.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="offset">The offset of the data section in the file.</param>
            <param name="size">The size of the data section</param>
            <returns>true means the specified data section is available.</returns>
            <remarks>Required: Yes. Called by Pdfium SDK to check whether the data section is ready.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_FILEAVAIL">
            <summary>
            Interface for checking whether the section of the file is available. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_FILEAVAIL.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_FILEAVAIL.IsDataAvailable">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.IsDataAvailableCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_RECT">
            <summary>
            Rectangle area in device coordination system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.left">
            <summary>
            The x-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.top">
            <summary>
            The y-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.right">
            <summary>
            The x-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.bottom">
            <summary>
            The y-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FX_RECT.Width">
            <summary>
            Gets the width of current rectangle
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FX_RECT.Height">
            <summary>
            Gets the height of current rectangle
            </summary>
        </member>
        <member name="T:Patagames.Pdf.NeedToPauseNowCallback">
            <summary>
            Check if we need to pause a progressive process now.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <returns>True for pause now, False for continue.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IFSDK_PAUSE">
            <summary>
            IFSDK_PAUSE interface. Used for progressive rendering. You must make sure that the class instance will not be collected by the garbage collector after passing this instance to unmanaged code.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE.needToPauseNowCallback">
            <summary>
            UserCallback function. See <see cref="T:Patagames.Pdf.NeedToPauseNowCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE._userData">
            <summary>
            A user defined data pointer, used by user's application. Can be NULL.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.IFSDK_PAUSE.userData">
            <summary>
            Gets a user defined data.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.IFSDK_PAUSE.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of the <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> class using callback function and user data
            </summary>
            <param name="userdata">user data passed to interface</param>
        </member>
        <member name="M:Patagames.Pdf.IFSDK_PAUSE.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.IFSDK_PAUSE.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="T:Patagames.Pdf.app_alert_callback">
            <summary>
            pop up a dialog to show warning or hint.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="Msg">A string containing the message to be displayed.</param>
            <param name="Title">The title of the dialog.</param>
            <param name="Type">The type of button group. 0-OK(default); 1-OK,Cancel; 2-Yes,NO; 3-Yes, NO, Cancel.</param>
            <param name="Icon">The icon type</param>
            <returns>The return value could be the folowing type: 1-OK; 2-Cancel; 3-NO; 4-Yes;</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.app_beep_callback">
            <summary>
            Causes the system to play a sound. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="nType">The sound type. 0 - Error; 1 - Warning; 2 - Question; 3 - Status; 4 - Default (default value)</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.app_response_callback">
            <summary>
            Displays a dialog box containing a question and an entry field for the user to reply to the question.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="Question">The question to be posed to the user.</param>
            <param name="Title">The title of the dialog box.</param>
            <param name="Default">A default value for the answer to the question. If not specified, no default value is presented.</param>
            <param name="cLabel">A short string to appear in front of and on the same line as the edit text field.</param>
            <param name="Password">If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.</param>
            <param name="buffer">A string buffer allocated by SDK, to receive the user's response.</param>
            <param name="buflen">The length of the buffer, number of bytes. Currently, It's always be 2048.</param>
            <returns>Number of bytes the complete user input would actually require, not including trailing zeros, regardless of the value of the length parameter or the presence of the response buffer.</returns>
            <remarks>Required: Yes.
            No matter on what platform, the response buffer should be always written using UTF-16LE encoding. If a response buffer is
            present and the size of the user input exceeds the capacity of the buffer as specified by the length parameter, only the
            first "length" bytes of the user input are to be written to the buffer.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_getFilePath_callback">
            <summary>
            Get the file path of the current document. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="filePath">The string buffer to receive the file path. Can be NULL.</param>
            <param name="length">The length of the buffer, number of bytes. Can be 0.</param>
            <returns>Number of bytes the filePath consumes, including trailing zeros.</returns>
            <remarks>
            Required: Yes.
            The filePath should be always input in local encoding.
            The return value always indicated number of bytes required for the buffer, even when there is
            no buffer specified, or the buffer size is less then required. In this case, the buffer will not be modified.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_mail_callback">
            <summary>
            Mails the data buffer as an attachment to all recipients, with or without user interaction. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="mailData">Pointer to the data buffer to be sent.Can be NULL.</param>
            <param name="length">The size,in bytes, of the buffer pointed by mailData parameter.Can be 0.</param>
            <param name="bUI">If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.</param>
            <param name="To">A semicolon-delimited list of recipients for the message.</param>
            <param name="Subject">The subject of the message. The length limit is 64 KB.</param>
            <param name="Cc">A semicolon-delimited list of CC recipients for the message.</param>
            <param name="Bcc">A semicolon-delimited list of BCC recipients for the message.</param>
            <param name="Msg">The content of the message. The length limit is 64 KB.</param>
            <remarks>Required: Yes. If the parameter mailData is NULL or length is 0, the current document will be mailed as an attachment to all recipients.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_print_callback">
            <summary>
            Prints all or a specific number of pages of the document.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="bUI">If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.</param>
            <param name="nStart">A 0-based index that defines the start of an inclusive range of pages.</param>
            <param name="nEnd">A 0-based index that defines the end of an inclusive page range.</param>
            <param name="bSilent">If true, suppresses the cancel dialog box while the document is printing. The default is false.</param>
            <param name="bShrinkToFit">If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.</param>
            <param name="bPrintAsImage">If true, print pages as an image.</param>
            <param name="bReverse">If true, print from nEnd to nStart.</param>
            <param name="bAnnotations">If true (the default), annotations are printed.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_submitForm_callback">
            <summary>
            Send the form data to a specified URL.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="formData">Pointer to the data buffer to be sent.</param>
            <param name="length">The size,in bytes, of the buffer pointed by formData parameter.</param>
            <param name="Url">The URL to send to.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_gotoPage_callback">
            <summary>
            Jump to a specified page.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="nPageNum">The specified page number, zero for the first page.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Field_browse_callback">
            <summary>
            Show a file selection dialog, and return the selected file path.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="filePath">Pointer to the data buffer to receive the file path.Can be NULL.</param>
            <param name="length">The length of the buffer, number of bytes. Can be 0.</param>
            <returns>Number of bytes the filePath consumes, including trailing zeros.</returns>
            <remarks>Required: Yes. The filePath shoule be always input in local encoding.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IPDF_JSPLATFORM">
            <summary>
            class that provides functionality of JS PDF forms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_alert">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_alert_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_beep">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_beep_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_response">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_response_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_getFilePath">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_getFilePath_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_mail">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_mail_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_print">
            <summary>
             Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_print_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_submitForm">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_submitForm_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_gotoPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_gotoPage_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Field_browse">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Field_browse_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.m_pFormfillinfo">
            <summary>
            pointer to <see cref="T:Patagames.Pdf.FPDF_FORMFILLINFO"/> interface.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_POINTF">
            <summary>
            Represents a point.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_POINTF.X">
            <summary>
            Gets or sets the x-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_POINTF.Y">
            <summary>
            Gets or sets the y-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.Equals(System.Object)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_POINTF"/> contains the same coordinates as the specified object.
            </summary>
            <param name="obj">The System.Object to test.</param>
            <returns>This method returns true if obj is a <see cref="T:Patagames.Pdf.FS_POINTF"/> and has the same coordinates as this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.Equals(Patagames.Pdf.FS_POINTF)">
            <summary>
            Specifies whether this <see cref="T:Patagames.Pdf.FS_POINTF"/> contains the same coordinates as the specified point.
            </summary>
            <param name="obj">The <see cref="T:Patagames.Pdf.FS_POINTF"/> to test.</param>
            <returns>This method returns true if obj has the same coordinates as this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.op_Equality(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.FS_POINTF"/> structures. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_POINTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_POINTF"/> to compare.</param>
            <remarks>
            The result specifies whether the
            values of the <see cref="P:Patagames.Pdf.FS_POINTF.X"/> and <see cref="P:Patagames.Pdf.FS_POINTF.Y"/> properties
            of the two <see cref="T:Patagames.Pdf.FS_POINTF"/> structures are equal.
            </remarks>
            <returns>
            true if the <see cref="P:Patagames.Pdf.FS_POINTF.X"/> and <see cref="P:Patagames.Pdf.FS_POINTF.Y"/> values of the
            left and right <see cref="T:Patagames.Pdf.FS_POINTF"/> structures are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.op_Inequality(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Determines whether the coordinates of the specified points are not equal.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.FS_POINTF"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.FS_POINTF"/> to compare.</param>
            <returns>true to indicate the <see cref="P:Patagames.Pdf.FS_POINTF.X"/> and <see cref="P:Patagames.Pdf.FS_POINTF.Y"/> values of left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.#ctor(System.Single,System.Single)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.FS_POINTF"/> structure 
            </summary>
            <param name="x">The x-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</param>
            <param name="y">The y-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.FS_POINTF.#ctor(System.Double,System.Double)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.FS_POINTF"/> structure 
            </summary>
            <param name="x">The x-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</param>
            <param name="y">The y-coordinate of this <see cref="T:Patagames.Pdf.FS_POINTF"/>.</param>
        </member>
        <member name="T:Patagames.Pdf.LOGFONT">
            <summary>
            The LOGFONT structure defines the attributes of a font.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfWeight">
            <summary>
            The weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfItalic">
            <summary>
            An italic font if set to TRUE.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfCharSet">
            <summary>
            The character set. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfPitchAndFamily">
            <summary>
            The pitch and family of the font. The two low-order bits specify the pitch of the font.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfFaceName">
            <summary>
            A string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHAR values, including the terminating NULL.  If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfOutPrecision">
            <summary>
            The output precision. The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, pitch, and font type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfClipPrecision">
            <summary>
            The clipping precision. The clipping precision defines how to clip characters that are partially outside the clipping region. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.lfQuality">
            <summary>
            The output quality. The output quality defines how carefully the graphics device interface (GDI) must attempt to match the logical-font attributes to those of an actual physical font.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.LOGFONT.FontPitchAndFamily">
            <summary>
            The pitch and family of the font. 
            </summary>
            <remarks>
            <para>The proper value can be obtained by using the Boolean OR operator to join one pitch constant with one family constant.</para>
            <para>Font families describe the look of a font in a general way. They are intended for specifying fonts when the exact typeface desired is not available. </para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_DONTCARE">
            <summary>
            Do not care or do not know
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_ROMAN">
            <summary>
            Fonts with variable stroke width (proportional) and with serifs. MS® Serif is an example.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_SWISS">
            <summary>
            Fonts with variable stroke width (proportional) and without serifs. MS® Sans Serif is an example.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_MODERN">
            <summary>
            Fonts with constant stroke width (monospace), with or without serifs. Monospace fonts are usually modern. Pica, Elite, and Courer New® are examples.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_SCRIPT">
            <summary>
            Fonts designed to look like handwriting. Script and Cursive are examples.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPitchAndFamily.FF_DECORATIVE">
            <summary>
            Novelty fonts. Old English is an example.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.LOGFONT.FontPrecision">
            <summary>
            The output precision.
            </summary>
            <remarks>
            <para>The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, pitch, and font type. It can be one of the following values.</para>
            <para>Applications can use the OUT_DEVICE_PRECIS, OUT_RASTER_PRECIS, OUT_TT_PRECIS, and OUT_PS_ONLY_PRECIS values to control how the font mapper chooses a font when the operating system contains more than one font with a specified name. For example, if an operating system contains a font named Symbol in raster and TrueType form, specifying OUT_TT_PRECIS forces the font mapper to choose the TrueType version. Specifying OUT_TT_ONLY_PRECIS forces the font mapper to choose a TrueType font, even if it must substitute a TrueType font of another name.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_DEFAULT_PRECIS">
            <summary>
            Specifies the default font mapper behavior.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_STRING_PRECIS">
            <summary>
            This value is not used by the font mapper, but it is returned when raster fonts are enumerated.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_CHARACTER_PRECIS">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_STROKE_PRECIS">
            <summary>
            This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, and vector fonts are enumerated.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_TT_PRECIS">
            <summary>
            Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_DEVICE_PRECIS">
            <summary>
            Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_RASTER_PRECIS">
            <summary>
            Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_TT_ONLY_PRECIS">
            <summary>
            Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system, the font mapper returns to default behavior.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontPrecision.OUT_OUTLINE_PRECIS">
            <summary>
            This value instructs the font mapper to choose from TrueType and other outline-based fonts.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.LOGFONT.FontClipPrecision">
            <summary>
            The clipping precision.
            </summary>
            <remarks>
            <para>The clipping precision defines how to clip characters that are partially outside the clipping region. It can be one or more of the following values.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_DEFAULT_PRECIS">
            <summary>
            Specifies default clipping behavior.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_CHARACTER_PRECIS">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_STROKE_PRECIS">
            <summary>
            Not used by the font mapper, but is returned when raster, vector, or True Type fonts are enumerated.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_MASK">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_LH_ANGLES">
            <summary>
            When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed. If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system. For more information about the orientation of coordinate systems, see the description of the nOrientation parameter.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_TT_ALWAYS">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_DFA_DISABLE">
            <summary>
            Windows XP SP1: Turns off font association for the font. Note that this flag is not guaranteed to have any effect on any platform after Windows Server 2003.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontClipPrecision.CLIP_EMBEDDED">
            <summary>
            You must specify this flag to use an embedded read-only font.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.LOGFONT.FontQuality">
            <summary>
            The output quality.
            </summary>
            <remarks>
            <para>The output quality defines how carefully the graphics device interface (GDI) must attempt to match the logical-font attributes to those of an actual physical font. It can be one of the following values.</para>
            <para>If neither ANTIALIASED_QUALITY nor NONANTIALIASED_QUALITY is selected, the font is antialiased only if the user chooses smooth screen fonts in Control Panel.</para>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.DEFAULT_QUALITY">
            <summary>
            Appearance of the font does not matter.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.DRAFT_QUALITY">
            <summary>
            Appearance of the font is less important than when PROOF_QUALITY is used. For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.PROOF_QUALITY">
            <summary>
            Character quality of the font is more important than exact matching of the logical-font attributes. For GDI raster fonts, scaling is disabled and the font closest in size is chosen. Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are synthesized if necessary.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.NONANTIALIASED_QUALITY">
            <summary>
            Font is never antialiased.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.ANTIALIASED_QUALITY">
            <summary>
            Font is always antialiased if the font supports it and the size of the font is not too small or too large.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONT.FontQuality.CLEARTYPE_QUALITY">
            <summary>
            If set, text is rendered (when possible) using ClearType antialiasing method. See Remarks for more information.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.LOGFONTINT">
            <summary>
            The LOGFONT structure defines the attributes of a font.
            </summary>
            <remarks>
            Please refer <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd145037(v=vs.85).aspx">MSDN</a> for more details
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfHeight">
            <summary>
            The height, in logical units, of the font's character cell or character. The character height value (also known as the em height) is the character cell height value minus the internal-leading value. The font mapper interprets the value specified in lfHeight in the following manner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfWidth">
            <summary>
            The average width, in logical units, of characters in the font. If lfWidth is zero, the aspect ratio of the device is matched against the digitization aspect ratio of the available fonts to find the closest match, determined by the absolute value of the difference.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfEscapement">
            <summary>
            The angle, in tenths of degrees, between the escapement vector and the x-axis of the device. The escapement vector is parallel to the base line of a row of text.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfOrientation">
            <summary>
            The angle, in tenths of degrees, between each character's base line and the x-axis of the device.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfWeight">
            <summary>
            The weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfItalic">
            <summary>
            An italic font if set to TRUE.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfUnderline">
            <summary>
            An underlined font if set to TRUE.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfStrikeOut">
            <summary>
            A strikeout font if set to TRUE.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfCharSet">
            <summary>
            The character set. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfOutPrecision">
            <summary>
            The output precision. The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, pitch, and font type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfClipPrecision">
            <summary>
            The clipping precision. The clipping precision defines how to clip characters that are partially outside the clipping region. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfQuality">
            <summary>
            The output quality. The output quality defines how carefully the graphics device interface (GDI) must attempt to match the logical-font attributes to those of an actual physical font.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfPitchAndFamily">
            <summary>
            The pitch and family of the font. The two low-order bits specify the pitch of the font.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.LOGFONTINT.lfFaceName">
            <summary>
            A string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHAR values, including the terminating NULL.  If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.LOGFONTINT.ToString">
            <summary>
            Returns a string that represents the LOGFONT object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfInkPointCollection">
            <summary>
            Represents a collection in which each item is a collection of line points
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfInkPointCollection"/>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeArray)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfInkPointCollection"/> with specified ink list points
            </summary>
            <param name="inkList">The ink list points array.</param>
            <remarks>
            Ink list points array may be modified to across the PDF internal rules.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Finalize">
            <summary>
            Releases all lresources used by the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Contains(Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation})">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.IndexOf(Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation})">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.CopyTo(Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation}[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Remove(Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation})">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Add(Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation})">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkPointCollection.Insert(System.Int32,Patagames.Pdf.Net.Annotations.PdfLinePointCollection{Patagames.Pdf.Net.Annotations.PdfInkAnnotation})">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> to insert into the collection.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection">
            <summary>
            Represent the collection of the line ending styles to be used in drawing the annotation’s border or lines
            </summary>
            <remarks>
            A collectiom may contain max two styles.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the underlying array has been disposed of.
            </summary>
            <value>true if object has been disposed of; otherwise, false.</value>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeArray)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection"/> with specified line ending styles array
            </summary>
            <param name="lineEnding">The line ending styles array.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.#ctor(Patagames.Pdf.Enums.LineEndingStyles,Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection"/> with specified line ending styles array
            </summary>
            <param name="first">The line ending style for the first point of the callout line.</param>
            <param name="second">The line ending style for the first point of the callout line.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Finalize">
            <summary>
            Releases all lresources used by the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Contains(Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.IndexOf(Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Determines the index of a specific  item in the collection.
            </summary>
            <param name="item">The item to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Clear">
            <summary>
            Removes all items from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.CopyTo(Patagames.Pdf.Enums.LineEndingStyles[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Remove(Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Add(Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineEndingCollection.Insert(System.Int32,Patagames.Pdf.Enums.LineEndingStyles)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Enums.LineEndingStyles"/> to insert into the collection.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1">
            <summary>
            Represent the collection of line points.
            </summary>
            <typeparam name="T">Underlying type used with this collection.</typeparam>
            <remarks>
            The maximum number of points in a collection depends on the usage context.
            Currently it is 2 if type of T is <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>,
            3 if type of T is <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/> and unlimited for others.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.IsDisposed">
            <summary>
            Gets a value indicating whether the underlying array has been disposed of.
            </summary>
            <value>true if object has been disposed of; otherwise, false.</value>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeArray)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> with specified line points array
            </summary>
            <param name="linePoints">The line points array.</param>
            <remarks>
            Line points array may be modified to across the PDF internal rules.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.#ctor(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> with specified points
            </summary>
            <param name="p1">First poitn of the callout line</param>
            <param name="p2">Second poitn of the callout line</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.#ctor(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/> with specified points
            </summary>
            <param name="p1">First poitn of the callout line</param>
            <param name="p2">Second poitn of the callout line</param>
            <param name="p3">Third poitn of the callout line</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Finalize">
            <summary>
            Releases all lresources used by the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Patagames.Pdf.FS_POINTF"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.FS_POINTF"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.FS_POINTF"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Contains(Patagames.Pdf.FS_POINTF)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.FS_POINTF"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_POINTF"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.FS_POINTF"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.IndexOf(Patagames.Pdf.FS_POINTF)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.FS_POINTF"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.FS_POINTF"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.FS_POINTF"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.FS_POINTF"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.FS_POINTF"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.FS_POINTF"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.CopyTo(Patagames.Pdf.FS_POINTF[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Remove(Patagames.Pdf.FS_POINTF)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.FS_POINTF"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_POINTF"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.FS_POINTF"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.FS_POINTF"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Add(Patagames.Pdf.FS_POINTF)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.FS_POINTF"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_POINTF"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1.Insert(System.Int32,Patagames.Pdf.FS_POINTF)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.FS_POINTF"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.FS_POINTF"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_POINTF"/> to insert into the collection.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation">
            <summary>
            Represents 3D annotation
            </summary>
            <remarks>3D annotations are the means by which 3D artwork is represented in a PDF document.
            <note type="note">This annotation is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfAnnotation">
            <summary>
            Abstract class representing entries that are common to all annotations.
            </summary>
            <remarks>
            The annotation may contain additional entries specific to a particular annotation type; see the descriptions of individual annotation type.
            <note>
            A annotation may be referenced from the <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection"/> that assigned with
            one page only. Attempting to share an annotation among multiple pages
            produces unpredictable behavior.This requirement applies only to the annotation
            itself, not to subsidiary objects, which can be shared among multiple annotations without causing any difficulty
            </note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ListOfIndirectObjects">
            <summary>
            Gets list of indirect objects
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Page">
            <summary>
            Gets PDF page associated with this annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle">
            <summary>
            Gets or sets the annotation rectangle, defining the location of the annotation on the page in default user space units.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Contents">
            <summary>
            Gets or sets the text to be displayed for the annotation or, if this type of annotation does not display text, an alternate description of the annotation’s contents in human-readable form.
            </summary>
            <remarks>
            <para><see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/> annotations display text directly on the page. The annotation’s Contents property specifies the displayed text.</para>
            <para>Most other markup annotations have an associated pop-up window that may contain text. The annotation’s Contents property specifies the text to be displayed
            when the pop-up window is opened. These include <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation"/>,
            <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation"/>, 
            <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfInkAnnotation"/>,
            and <see cref="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation"/> annotations.</para>
            <para><see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/> annotations do not have a pop-up window but may also have associated text specified by the Contents property.</para>
            <note type="note">When separating text into paragraphs, a carriage return should be used (and not, for example, a line feed character).</note>
            <para>For all other annotation types (<see cref="T:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfWidgetAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation"/>, and <see cref="T:Patagames.Pdf.Net.Annotations.PdfTrapNetAnnotation"/>),
            the Contents property provides an alternate representation of the annotation’s contents in human-readable form, which is useful when extracting the document’s
            contents in support of accessibility to users with disabilities or for other purposes.</para>
            <para>The <see cref="T:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation"/> type typically does not appear by itself; it is associated with a markup annotation that uses it to display text.
            <note type="note"> The Contents property for a pop-up annotation is relevant only if it has no parent; in that case, it represents the text of the annotation.</note>
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Name">
            <summary>
            Gets or sets the annotation name, a text string uniquely identifying it among all the annotations on its page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ModificationDate">
            <summary>
            Gets or sets the date and time when the annotation was most recently modified.
            The preferred format is a date string as described in remarks, 
            but viewer applications should be prepared to accept and display a string in any format.
            </summary>
            <remarks>
            PDF defines a standard date format, which closely follows that of the
            international standard ASN.1 (Abstract Syntax Notation One), defined in ISO/
            IEC 8824 (see the Bibliography). A date is an ASCII string of the form
            <para>(D:YYYYMMDDHHmmSSOHH'mm')</para>
            where
            <list type="bullet">
            <item>YYYY is the year</item>
            <item>MM is the month</item>
            <item>DD is the day (01–31)</item>
            <item>HH is the hour (00–23)</item>
            <item>mm is the minute (00–59)</item>
            <item>SS is the second (00–59)</item>
            <item>O is the relationship of local time to Universal Time (UT), denoted by one of the characters +, −, or Z (see below)</item>
            <item>HH followed by ' is the absolute value of the offset from UT in hours (00–23)</item>
            <item>mm followed by ' is the absolute value of the offset from UT in minutes (00–59)</item>
            </list>
            The apostrophe character (') after HH and mm is part of the syntax. All fields after
            the year are optional. (The prefix D:, although also optional, is strongly
            recommended.) The default values for MM and DD are both 01; all other
            numerical fields default to zero values. A plus sign (+) as the value of the O field
            signifies that local time is later than UT, a minus sign(−) signifies that local time
            is earlier than UT, and the letter Z signifies that local time is equal to UT.If no UT
            information is specified, the relationship of the specified time to UT is considered
            to be unknown.Regardless of whether the time zone is known, the rest of the date
            should be specified in local time.
            <para>For example, December 23, 1998, at 7:52 PM, U.S.Pacific Standard Time, is
            represented by the string</para>
            D:199812231952−08'00'
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Flags">
            <summary>
             Gets or sets a set of flags specifying various characteristics of the annotation <see cref="T:Patagames.Pdf.Enums.AnnotationFlags"/>. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Color">
            <summary>
            Gets or sets the color of annotation.Please see remarks section for more details
            </summary>
            <remarks>
            The color used for the following purposes:
            <list type="bullet">
            <item>The background of the annotation’s icon when closed</item>
            <item>The title bar of the annotation’s pop-up window</item>
            <item>The border of a link annotation</item>
            </list>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.NormalAppearance">
            <summary>
            The annotation’s normal appearance.
            </summary>
            <remarks>
            An appearance dictionary specifying how the annotation is presented visually on the page.
            <para>The normal appearance is used when the annotation is not interacting with the user.This appearance is also used for printing the annotation.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.RolloverAppearance">
            <summary>
            The annotation’s rollover appearance. 
            </summary>
            <remarks>
            An appearance dictionary specifying how the annotation is presented visually on the page.
            <para>The rollover appearance is used when the user moves the cursor into the annotation’s active area without pressing the mouse button.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.DownAppearance">
            <summary>
            The annotation’s down appearance.
            </summary>
            <remarks>
            An appearance dictionary specifying how the annotation is presented visually on the page.
            <para>The down appearance is used when the mouse button is pressed or held down within the annotation’s active area.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new annotation.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.Create(Patagames.Pdf.Net.BasicTypes.PdfTypeBase,Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new annotation based on its type in the specified dictionary.
            </summary>
            <param name="dictionary">Annotation dictionary or indirect dictionary.</param>
            <param name="page">The PDF page associated with annotation.</param>
            <returns>A new instance of the derived annotation class or <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnknownAnnotation"/> if type is not recognized.</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfParserException"/>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Annotation class and optionally releases the managed resources.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.CreateEmptyAppearance(Patagames.Pdf.Enums.AppearanceStreamModes)">
            <summary>
            Creates empty appearance stream
            </summary>
            <param name="mode">A type of annotation appearance that should be created.</param>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotation.GenerateAppearance(Patagames.Pdf.Enums.AppearanceStreamModes)">
            <summary>
            Generate content of specified appearance stream. 
            </summary>
            <param name="mode">Specifies appearance stream that should be generated.</param>
            <returns>true if content was successfully generated; false otherwise.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection">
            <summary>
            Represents a collection of annotation.
            </summary>
            <remarks>
            Each annotation contained in the collection may be referenced from the collection associated with only one page. Attempting to share an annotation among multiple pages produces unpredictable behavior. This requirement applies only to the annotation itself, not to subsidiary objects, which can be shared among multiple annotations without causing any difficulty.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the underlying array has been disposed of.
            </summary>
            <value>true if object has been disposed of; otherwise, false.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Page">
            <summary>
            Gets page with which this collection is assosiated.Gets page with which this collection is associated. All annotations added to the collection should be associated with this page only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection"/> which will be associated with the specified page.
            </summary>
            <param name="page">The page that will be associated with this instance.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.GetAnnotations(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Gets annotations associated with the given page
            </summary>
            <param name="page">The page you want to get annotations for.</param>
            <returns>The instance of <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection"/>, ornull if the page does not contain any annotation.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Create(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates an empty collection of annotations for specified page.
            </summary>
            <param name="page">The page you want to create annotations for.</param>
            <returns>Not empty collection if any annotations already exist on the page, empty collection otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Item(System.Int32)">
            <summary>
            Gets or sets the annotation at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The annotation at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Count">
            <summary>
            Gets the number of annotations contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Add(Patagames.Pdf.Net.Annotations.PdfAnnotation)">
            <summary>
            Adds an annotation to the collection
            </summary>
            <param name="item">The annotation to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Clear">
            <summary>
            Removes all annotations from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Contains(Patagames.Pdf.Net.Annotations.PdfAnnotation)">
            <summary>
            Determines whether the collection contains a specific annotation.
            </summary>
            <param name="item">The annotation to locate in the collection.</param>
            <returns>true if annotation is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.IndexOf(Patagames.Pdf.Net.Annotations.PdfAnnotation)">
            <summary>
            Determines the index of a specific annotation in the collection.
            </summary>
            <param name="item">The annotation to locate in the collection</param>
            <returns>The index of annotation if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Insert(System.Int32,Patagames.Pdf.Net.Annotations.PdfAnnotation)">
            <summary>
            Inserts an annotation to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which annotation should be inserted.</param>
            <param name="item">The annotation to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.Remove(Patagames.Pdf.Net.Annotations.PdfAnnotation)">
            <summary>
            Removes the first occurrence of a specific annotation from the collection.
            </summary>
            <param name="item">The annotation to remove from the collection.</param>
            <returns>
            true if annotation was successfully removed from the collection;
            otherwise, false. This method also returns false if annotation is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the annotation at the specified index.
            </summary>
            <param name="index">The zero-based index of the annotation to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.CopyTo(Patagames.Pdf.Net.Annotations.PdfAnnotation[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfAnnotationCollection.GetByDictionary(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Determines whether the collection contains a specific annotation.
            </summary>
            <param name="dictionary">The annotation dictionary to locate in the collection.</param>
            <returns>The annotation if found in the collection; otherwise, null</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation">
            <summary>
            Represents a caret annotation
            </summary>
            <remarks>
            A caret annotation (PDF 1.5) is a visual symbol that indicates the presence of text edits. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.InnerRectangle">
            <summary>
            Gets or sets an inner rectangle of the annotation.
            </summary>
            <remarks>
            The inner rectangle is the actual boundaries of the of the underlying caret.
            Such a difference can occur, for example, when a paragraph symbol specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.IsSymbol"/> property is displayed along with the caret. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.IsSymbol">
            <summary>
            Gets or sets a value indicating whether a new paragraph symbol (¶) is associated with the caret.
            </summary>
            <remarks>
            <list type="table">
            <item><term><strong>true</strong></term><description>A new paragraph symbol (¶) should be associated with the caret.</description></item>
            <item><term><strong>false</strong></term><description>No symbol should be associated with the caret.</description></item>
            </list>
            Default value: <strong>false</strong>.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_RECTF,Patagames.Pdf.FS_COLOR,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation"/> with parameters as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="caretRect">The rectangle in which caret should be inscribed.</param>
            <param name="color">The caret color.</param>
            <param name="showSymbol">A flag indicating whether the symbol "new paragraph" should be displayed.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCaretAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation">
            <summary>
            Represents the circle annotation
            </summary>
            <remarks>
            See details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_RECTF,Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="rect">The rectangle where an annotation should be placed.</param>
            <param name="strokeColor">The stroke color of a square</param>
            <param name="fillColor">Color of the fill of a square annotation.</param>
            <remarks>
            The  opacity of the annotation will be equal to the Alpha component  of the fill color.
            If it is equal to 0 then to the Alpha component of the of the stroke color.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation">
            <summary>
            Represents a file attachment annotation
            </summary>
            <remarks>
            A file attachment annotation (PDF 1.3) contains a reference to a file, which typically 
            is embedded in the PDF file; For example, a table of data might
            use a file attachment annotation to link to a spreadsheet file based on that data;
            activating the annotation extracts the embedded file and gives the user an opportunity 
            to view it or store it in the file system.
            <para>
            The Contents entry of the annotation dictionary may specify descriptive text relating 
            to the attached file.
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.StandardIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
            <remarks>
            Additional names may be supported as well. In this case please use <see cref="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.ExtendedIconName"/> property.
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over 
            the StandardIconName and <see cref="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.ExtendedIconName"/> properties.</note>
            <para>Default value: <strong>PushPin</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.ExtendedIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.SimpleFileSpec">
            <summary>
            Gets the string representation of the file specification, if any.
            </summary>
            <remarks>
            A simple file specification gives just the name of the target file in a standard format, independent of the naming conventions of any particular file system.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.FileSpecification">
            <summary>
            Gets or sets a file specification described the file associated with this annotation.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.FileIconNames,System.String,System.Byte[],Patagames.Pdf.FS_COLOR,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="filename">The name of the attached file.</param>
            <param name="fileData">The contents of the attached file.</param>
            <param name="color">Annotation color.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.FileIconNames,System.String,System.Byte[],System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="filename">The name of the attached file.</param>
            <param name="fileData">The contents of the attached file.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFileAttachmentAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation">
            <summary>
            Represents a free text annotation
            </summary>
            <remarks>
            A free text annotation (PDF 1.3) displays text directly on the page. 
            Unlike an ordinary text annotation (see <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/>), a free text annotation
            has no open or closed state; instead of being displayed in a pop-up window, the
            text is always visible.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.DefaultAppearance">
            <summary>
            Gets or sets the default appearance string to be used in formatting the text.
            </summary>
            <remarks>
            <note type="note">The Appearance Stream, if present, takes precedence over the DefaultAppearance property; </note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.TextAlignment">
            <summary>
            Gets or sets the horizontal alignment of text content.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.DefaultStyle">
            <summary>
            Gets or sets a default style string.
            </summary>
            <remarks>
            <note type="note">This property is ignored when regenerates the annotation’s appearance stream.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.CalloutLine">
            <summary>
            Gets or sets a collection of the <see cref="T:Patagames.Pdf.FS_POINTF"/> that represent callout line attached to the free text annotation. 
            </summary>
            <remarks>
            <para>
            Callout line main contain three or two points.
            Three points represent the starting, knee point, and ending coordinates of the line in default user space,
            as shown in Figure. Two points represent the starting and ending coordinates of the line.
            </para>
            <img src="../../../Pdfium.Docs/Media/CalloutLine.png" />
            <note type="note">When callout is used the <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.Intent"/> property must be set to <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.FreeTextCallout"/></note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.LineEnding">
            <summary>
            Gets or sets a list of line ending styles to be used in drawing the <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.CalloutLine"/>.
            </summary>
            <remarks>
            The first and second elements of the collection specify the line ending styles for the endpoints defined, respectively, by the
            first and second point in the <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.CalloutLine"/> collection.
            <para>Default value: <strong>[None None]</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.Intent">
            <summary>
            Gets or sets a name describing the intent of the free text annotation.
            </summary>
            <remarks>
            Valid values are <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.FreeTextCallout"/>, which means that the annotation is intended to function as a callout, and <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.FreeTextTypeWriter"/>, which means that the annotation is intended to function as a click-to-type or typewriter object.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.BorderEffect">
            <summary>
            Gets or sets a border effect (<see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/>) used in conjunction with the <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.BorderStyle"/>.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.BorderStyle">
            <summary>
            Gets or sets a border style (see <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>) specifying the line width and dash pattern to be used in drawing the annotation’s border.
            </summary>
            <remarks>
            <note type="note">The annotation's appearance streame, if present, takes precedence over BorderStyle property.</note>
            <note type="note">If neither the value of Border nor the value of BorderStyle property is present, the border is drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.InnerRectangle">
            <summary>
            Gets or sets a four numbers describing the inner rectangle of the annotation.
            </summary>
            <remarks>
            <para>
            The inner rectangle is where the annotation’s text should be displayed. 
            Any border styles and/or border effects specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.BorderStyle"/> and
            <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.BorderEffect"/> properties, respectively, are applied to the border of the inner rectangle.
            </para>
            <para>
            The four numbers correspond to the differences in default user space between
            the left, top, right, and bottom coordinates of <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/> and those of the inner rectangle, respectively.
            </para>
            <para>
            Each value must be greater than or equal to 0. The sum of the 
            top and bottom differences must be less than the height of <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/>, and the sum of 
            the left and right differences must be less than the width of <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.PdfTextObject,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/> with <see cref="T:Patagames.Pdf.Net.PdfTextObject"/> and parameters as specified.
            </summary>
            <param name="page">The <see cref="T:Patagames.Pdf.Net.PdfPage"/> where watremark must be placed.</param>
            <param name="text">The <see cref="T:Patagames.Pdf.Net.PdfTextObject"/> that will be used as a watermark.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
            <param name="rotation">The rotation degree.</param>
            <param name="scale">Absolute scale.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            <note type="note"><see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.DefaultAppearance"/> should be set in the format /StockFontName fontSize Tf r g b rg". Text matrix, if specified, is ignored.  </note>
            <note type="note">The <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RichText"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation.DefaultStyle"/> properties are ignored.</note>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation">
            <summary>
            Represents the highlight annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation"/> with quadrilateral as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="leftBottom">Left-bottom point of the quadrilateral.</param>
            <param name="rightTop">Right-top point of the quadrilateral.</param>
            <param name="rightBottom">Right-bottom point of the quadrilateral.</param>
            <param name="leftTop">Left-top point of the quadrilateral.</param>
            <param name="Color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfHighlightAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfInkAnnotation">
            <summary>
            Represents an Ink annotation
            </summary>
            <remarks>
            An ink annotation (PDF 1.3) represents a freehand “scribble” composed of one or
            more disjoint paths. When opened, it displays a pop-up window containing the
            text of the associated note.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.LineStyle">
            <summary>
            Gets or sets a line style (see <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>) specifying the line width and dash pattern to be used in drawing the paths.
            </summary>
            <remarks>
            <note type="note">The annotation's appearance stream, if present, takes precedence over the  <see cref="P:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.InkList"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.LineStyle"/> properties.</note>
            <note type="note">If the value of LineStyle property is null, the ink list is drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.InkList">
            <summary>
            Gets or sets a collection of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinePointCollection`1"/>, each representing a stroked path. 
            </summary>
            <remarks>
            Each item is a series of alternating horizontal and vertical coordinates in default user space,
            specifying points along the path.When drawn, the points are connected by
            straight lines or curves in an implementation-dependent way.
            <note type="note">
            PdfViewer always use straight lines to connect the points along each path.
            </note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfInkAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfInkAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfInkAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation">
             <summary>
             Represents a line annotation
             </summary>
             <remarks>
             A line annotation (PDF 1.3) displays a single straight line on the page. 
             When opened, it displays a pop-up window containing the text of the associated note.
             <para></para>
             
             <list type="table">
             <item><term><img src="../../../Pdfium.Docs/Media/Figure8.5LeaderLines.png" /></term></item>
             <listheader>
             <term>FIGURE 8.5 Leader lines</term>
             </listheader>
             </list>
            
             <para></para>
             <para>Figure 8.6 illustrates the effect of including a caption to a line annotation, which is specified by setting <see cref="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Cap"/> property to true.</para>
             <list type="table">
             <item><term><img src="../../../Pdfium.Docs/Media/Figure8.6Caption.png" /></term></item>
             <listheader>
             <term>FIGURE 8.6 Lines with captions appearing as part of the line</term>
             </listheader>
             </list>
            
             <para></para>
             <para>Figure 8.7 illustrates the effect of applying a caption to a line annotation that has a leader offset.</para>
             <list type="table">
             <item><term><img src="../../../Pdfium.Docs/Media/Figure8.7CaptionOffset.png" /></term></item>
             <listheader>
             <term>FIGURE 8.7 Line with a caption appearing as part of the offset</term>
             </listheader>
             </list>
             </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Line">
            <summary>
            Gets or sets a collection of the <see cref="T:Patagames.Pdf.FS_POINTF"/> specifying the starting and ending coordinates of the line in default user space.
            </summary>
            <remarks>
            <note type="note">If the value of the <see cref="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LeaderLineLenght"/> property is non zero, this value represents the endpoints of the leader lines rather than the endpoints of the line itself; 
            see Figure 8.5 in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/> reference.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LineEnding">
            <summary>
            Gets or sets a list of line ending styles to be used in drawing the <see cref="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Line"/>.
            </summary>
            <remarks>
            The first and second elements of the collection specify the line ending styles for the endpoints defined, respectively, by the
            first and second point in the <see cref="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Line"/> collection.
            <para>Default value: <strong>[None None]</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LineStyle">
            <summary>
            Gets or sets a line style (see <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>) specifying the line width and dash pattern to be used in drawing the line.
            </summary>
            <remarks>
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over LineStyle property.</note>
            <note type="note">If the value of LineStyle property is null, the line is drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.InteriorColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Intent">
            <summary>
            Gets or sets a name describing the intent of the line annotation.
            </summary>
            <remarks>
            Valid values are <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.LineArrow"/>, which means that the annotation is intended to function as an arrow, and <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.LineDimension"/>, which means that the annotation is intended to function as a dimension line.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LeaderLineLenght">
            <summary>
            The length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself, as shown in Figure 8.5 in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/> reference.
            </summary>
            <remarks>
            A positive value means that the leader lines appear in the direction that is clockwise when traversing 
            the line from its starting point to its ending point(as specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Line"/>); 
            a negative value indicates the opposite direction.
            <para>Default value: <strong>0</strong> (no leader lines).</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LeaderLineExtension">
            <summary>
            A non-negative number representing the length of leader line extensions that extend from the line 
            proper 180 degrees from the leader lines, as shown in Figure 8.5 in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/> reference.
            </summary>
            <remarks>Default value: <strong>0</strong> (no leader line extensions).</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.Cap">
            <summary>
            Gets or set a flag specifying whether line has a caption.
            </summary>
            <remarks>
            If true, the text specified by the <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Contents"/> or <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RichText"/> properties
            should be replicated as a caption in the appearance of the line, as shown in Figure 8.6 and Figure 8.7 in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/> reference. 
            The text should be rendered in a manner appropriate to the content, taking into account factors 
            such as writing direction.
            <para>Default value: <strong>false</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.LeaderLineOffset">
            <summary>
            Gets or sets a non-negative number representing the length of the leader line offset, which is the amount of empty space between the endpoints of the annotation and the beginning of the leader lines.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.CaptionPosition">
            <summary>
            Gets or sets a value describing the annotation’s caption positioning. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.CaptionOffset">
            <summary>
            Gets or sets the value specifying the offset of the caption text from its normal position.
            </summary>
            <remarks>
            The horizontal component of the <see cref="T:Patagames.Pdf.FS_SIZEF"/> structure is the horizontal offset along the 
            annotation line from its midpoint, with a positive value indicating offset to the right and 
            a negative value indicating offset to the left.
            The vertical component is the vertical offset perpendicular to the annotation
            line, with a positive value indicating a shift up and a negative value indicating a shift down.
            <para>Default value: <strong>[0, 0]</strong> (no offset from normal positioning)</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLineAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation">
            <summary>
            A link annotation represents either a hypertext link to a destination elsewhere in the document
            or an action to be performed.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation.Link">
            <summary>
            Get a <see cref="T:Patagames.Pdf.Net.PdfLink"/> associated with this annotation.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfLinkAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation">
            <summary>
            Represents the Markup annotations.
            </summary>
            <remarks>
            Many annotation types are defined as markup annotations because they are used
            primarily to mark up PDF documents. These annotations have
            text that appears as part of the annotation and may be displayed in other ways by
            a viewer application, such as in a Comments pane.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Text">
            <summary>
            Gets or sets the text label to be displayed in the title bar of the annotation’s pop-up window when open and active.
            </summary>
            <remarks>
            By convention, this entry identifies the user who added the annotation.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Popup">
            <summary>
            Gets or sets a pop-up annotation for entering or editing the text associated with this annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Opacity">
            <summary>
            Gets or sets the constant opacity value to be used in painting the annotation.
            </summary>
            <remarks>
            Opacity vary from 0.0 (no contribution) to 1.0 (maximum contribution)
            <para>This value applies to all visible elements of the annotation in its closed state (including its background and border) but not to the popup window that appears when the annotation is opened.</para>
            <para>The specified value is not used if the annotation has an appearance stream; 
            in that case, the appearance stream must
            specify any transparency. (However, if the viewer regenerates the annotation’s
            appearance stream, it may incorporate the Opacity value into the stream’s content.)</para>
            <para>The implicit blend mode is Normal.
            Default value: <strong>1.0</strong>.</para>
            <note type="note">If no explicit appearance stream is defined for the annotation, it is painted by
            implementation-dependent means that do not necessarily conform to the Adobe
            imaging model; in this case, the effect of this entry is implementation-dependent as well.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RichText">
            <summary>
            A rich text string to be displayed in the pop-up window when the annotation is opened.
            </summary>
            <remarks>
            <note type="note">This property is ignored when regenerates the annotation’s appearance stream.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.CreationDate">
            <summary>
            Gets or sets the date and time when the annotation was created.
            </summary>
            <remarks>
            Please see remarks section at <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ModificationDate"/> for more details.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation">
            <summary>
            Gets or sets annotation that this annotation is “in reply to.” 
            </summary>
            <remarks>
            Both annotations must be on the same page of the document. The relationship between the two annotations is specified by the <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Relationship"/> property.
            <para>If this entry is present in an FDF file, 
            its type is not a dictionary but a text string containing the contents of the <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Name"/> property of the annotation being replied to, to allow for a situation where the annotation being replied to is not in the same FDF file.
            An <see cref="T:Patagames.Pdf.Net.Exceptions.PdfParserException"/> will be thrown in this case, but you may use the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dictionary"/> property to get access to this entry.
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Subject">
            <summary>
            Gets or sets text representing a short description of the subject being addressed by the annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Relationship">
            <summary>
            Gets or sets a value specifying the relationship (the “reply type”) between this annotation and one specified by <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RelationshipAnnotation"/>.
            </summary>
            <remarks>
            Please see the remark section at <see cref="T:Patagames.Pdf.Enums.RelationTypes"/>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.InternalIntent">
            <summary>
            Gets or sets a string describing the intent of the markup annotation.
            </summary>
            <remarks>
            Intents allow viewer applications to distinguish between different uses and behaviors of a single markup annotation type. 
            If this property is not present (null) or its value is
            the same as the annotation type, the annotation has no explicit intent and should
            behave in a generic manner in a viewer application.
            <para>
            <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfLineAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation"/> annotations, and (in PDF 1.7) <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation"/> 
            have defined intents, whose values are enumerated in the corresponding topics.
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            <note type="note">Overridden in derived classes. The basic implementation do nothing.</note>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation">
            <summary>
            Represents Movie Annotation
            </summary>
            <remarks>
            A movie annotation contains animated graphics and sound to be presented on the computer screen and through the speakers. When the annotation is activated, the movie is played.
            <note type="note">This annotation is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfMovieAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation">
            <summary>
            Represents polygon or polyline annotations
            </summary>
            <remarks>
            Polygon annotations (PDF 1.5) display closed polygons on the page. 
            Such polygons may have any number of vertices connected by straight lines. 
            Polyline annotations (PDF 1.5) are similar to polygons, except that the first and last vertex are not implicitly connected.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.Vertices">
            <summary>
            Gets or sets a collection of the <see cref="T:Patagames.Pdf.FS_POINTF"/> specifying the coordinates and style of each vertex, in default user space.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.LineStyle">
            <summary>
            Gets or sets a line style (see <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>) specifying the line width and dash pattern to be used in drawing the line.
            </summary>
            <remarks>
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over the <see cref="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.Vertices"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.LineStyle"/> properties.</note>
            <note type="note">If the value of LineStyle property is null, the line is drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation">
            <summary>
            Represents the polygon annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation.BorderEffect">
            <summary>
            Gets or sets a <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/> describing an effect applied to the line described by the <see cref="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.LineStyle"/> property.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation.Intent">
            <summary>
            Gets or sets a name describing the intent of the polygon annotation.
            </summary>
            <remarks>
            Valid values are <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.PolygonCloud"/>, which means that the annotation is intended to function as a cloud object, 
            and <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.PolygonDimension"/>, (PDF 1.7), which indicates that the polygon annotation is intended to function as a dimension.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation">
            <summary>
            Represents the polyline annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation"/>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation.LineEnding">
            <summary>
            Gets or sets a list of line ending styles to be used in drawing the polugon or polyline/>.
            </summary>
            <remarks>
            The first and second elements of the array specify
            the line ending styles for the endpoints defined, respectively, by the first and last
            pairs of coordinates in the <see cref="P:Patagames.Pdf.Net.Annotations.PdfPolygonalChainAnnotation.Vertices"/> colection.
            <para>Default value: <strong>[None None]</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation.InteriorColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation.Intent">
            <summary>
            Gets or sets a name describing the intent of the polyline annotation.
            </summary>
            <remarks>
            Valid value is <see cref="F:Patagames.Pdf.Enums.AnnotationIntent.PolyLineDimension"/>, (PDF 1.7), which indicates that the polyline annotation is intended to function as a dimension
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolylineAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation">
            <summary>
            Represents a pop-up annotation 
            </summary>
            <remarks>
            A pop-up annotation displays text in a pop-up window for entry and
            editing. It typically does not appear alone but is associated with a markup annotation, 
            its parent annotation, and is used for editing the parent’s text.It has no
            appearance stream or associated actions of its own and is identified by the Popup
            property in the parent’s annotation.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Parent">
            <summary>
            Gets or sets the parent annotation with which this pop-up annotation is associated.
            </summary>
            <remarks>
            <note>
            If this Property is notnull, the parent annotation’s 
            <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Contents"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ModificationDate"/>, <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Color"/>, and <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Text"/> entries override those of the pop-up annotation itself.
            </note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.IsOpen">
            <summary>
            Gets or sets a flag specifying whether the pop-up annotation should initially be displayed open. 
            </summary>
            <remarks>Default value: <strong>false</strong></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Contents">
            <summary>
            If <see cref="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Parent"/> property is not null, the parent annotation’s  <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Contents"/> property override of the pop-up annotation itself.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.ModificationDate">
            <summary>
            If <see cref="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Parent"/> property is not null, the parent annotation’s  <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.ModificationDate"/> property override of the pop-up annotation itself.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Color">
            <summary>
            If <see cref="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Parent"/> property is not null, the parent annotation’s  <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Color"/> property override of the pop-up annotation itself.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Text">
            <summary>
            If <see cref="P:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.Parent"/> property is <see cref="T:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation"/>, the parent annotation’s  <see cref="P:Patagames.Pdf.Net.Annotations.PdfMarkupAnnotation.Text"/> property override of the pop-up annotation itself.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.Annotations.PdfAnnotation,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="parent">The parent annotation with which this pop-up annotation is associated.</param>
            <param name="isOpen">A flag specifying whether the pop-up annotation should initially be displayed open.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfPopupAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation">
            <summary>
            Represents square or circle annotation
            </summary>
            <remarks>
            Square and circle annotations (PDF 1.3) display, respectively, a rectangle or an ellipse on the page.
            When opened, they display a pop-up window containing the
            text of the associated note. The rectangle or ellipse is inscribed within the annotation rectangle 
            defined by the <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/> property.
            Figure 8.8 shows two annotations, each with a border width of 18 points. 
            <note type="note">Despite the names square and circle, the width and height of the annotation rectangle need not be equal.</note>
            <para></para>
            <list type="table">
            <item><term><img src="../../../Pdfium.Docs/Media/Figure8.8.png" /></term></item>
            <listheader>
            <term>FIGURE 8.8 Square and circle annotations</term>
            </listheader>
            </list>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.BorderStyle">
            <summary>
            Gets or sets a border style (see <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>) specifying the line width and dash pattern to be used in drawing the rectangle or ellipse.
            </summary>
            <remarks>
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over the  <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/> and <see cref="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.BorderStyle"/> properties.</note>
            <note type="note">If the value of BorderStyle property is null, the rectanle or ellipse are drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.InteriorColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s rectangle or ellipse.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.BorderEffect">
            <summary>
            Gets or sets a <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/> describing an effect applied to the border described by the <see cref="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.BorderStyle"/> property.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.InnerRectangle">
            <summary>
            Gets or sets an inner rectangle of the annotation.
            </summary>
            <remarks>
            The inner rectangle is the actual boundaries of the underlying square or circle. 
            Such a difference can occur in situations where a border effect causes the size of the <see cref="P:Patagames.Pdf.Net.Annotations.PdfAnnotation.Rectangle"/> to increase beyond that of the square or circle.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation">
            <summary>
            Represents Printer’s Mark annotation
            </summary>
            <remarks>
            A printer’s mark annotation represents a graphic symbol, such as a registration target, color bar, or cut mark, 
            added to a page to assist production personnel in identifying components of a multiple-plate job and maintaining
            consistent output during production.
            <note type="note">This annotation is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfPrinterMarkAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation">
            <summary>
            Represents Screen annotation
            </summary>
            <remarks>
            A screen annotation specifies a region of a page upon which media clips
            may be played.It also serves as an object from which actions can be triggered.
            <note type="note">This annotation is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation">
            <summary>
            A sound annotation (PDF 1.2) is analogous to a text annotation except that instead of a text note, 
            it contains sound recorded from the computer’s microphone
            or imported from a file. When the annotation is activated, the sound is played.
            The annotation behaves like a text annotation in most ways, with a different icon
            (by default, a speaker) to indicate that it represents a sound.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.StandardIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
            <remarks>
            Additional names may be supported as well. In this case please use <see cref="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.ExtendedIconName"/> property.
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over 
            the StandardIconName and <see cref="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.ExtendedIconName"/> properties.</note>
            <para>Default value: <strong>Speaker</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.ExtendedIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.Sound">
            <summary>
            Gets or sets a sound object defining the sound to be played when the annotation is activated.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.SoundIconNames,Patagames.Pdf.FS_COLOR,System.Single,System.Single,System.Byte[],Patagames.Pdf.Enums.SoundEncodingFormats,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/> with specified parameters.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="color">Annotation color.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
            <param name="sampleData">An array of sample values.</param>
            <param name="encoding">The encoding format for the sample data.</param>
            <param name="bps">The number of bits per sample value per channel.</param>
            <param name="rate">The sampling rate, in samples per second.</param>
            <param name="channels">The number of sound channels.</param>
            <remarks>
            For a description of the sampleData format, see the remarks section of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> class.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.SoundIconNames,System.Single,System.Single,System.Byte[],Patagames.Pdf.Enums.SoundEncodingFormats,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/> with specified parameters.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
            <param name="sampleData">An array of sample values.</param>
            <param name="encoding">The encoding format for the sample data.</param>
            <param name="bps">The number of bits per sample value per channel.</param>
            <param name="rate">The sampling rate, in samples per second.</param>
            <param name="channels">The number of sound channels.</param>
            <remarks>
            For a description of the sampleData format, see the remarks section of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> class.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfScreenAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.SoundIconNames,Patagames.Pdf.FS_COLOR,System.Single,System.Single,Patagames.Pdf.Net.Wrappers.PdfSound)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/> with specified parameters.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="color">Annotation color.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
            <param name="sound">An instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> contained sampled data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.SoundIconNames,System.Single,System.Single,Patagames.Pdf.Net.Wrappers.PdfSound)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation"/> with specified parameters.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
            <param name="sound">An instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> contained sampled data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSoundAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation">
            <summary>
            Represents the square annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_RECTF,Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="rect">The rectangle where an annotation should be placed.</param>
            <param name="strokeColor">The stroke color of a square</param>
            <param name="fillColor">Color of the fill of a square annotation.</param>
            <remarks>
            The  opacity of the annotation will be equal to the Alpha component  of the fill color.
            If it is equal to 0 then to the Alpha component of the of the stroke color.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquareAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation">
            <summary>
            Represents the squiggly annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation"/> with quadrilateral parameters as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="leftBottom">Left-bottom point of the quadrilateral.</param>
            <param name="rightTop">Right-top point of the quadrilateral.</param>
            <param name="rightBottom">Right-bottom point of the quadrilateral.</param>
            <param name="leftTop">Left-top point of the quadrilateral.</param>
            <param name="Color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfSquigglyAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation">
            <summary>
            Represents a rubber stamp annotation
            </summary>
            <remarks>
            A rubber stamp annotation (PDF 1.3) displays text or graphics intended to look as
            if they were stamped on the page with a rubber stamp. When opened, it displays a
            pop-up window containing the text of the associated note.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.StandardIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
            <remarks>
            Additional names may be supported as well. In this case please use <see cref="P:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.ExtendedIconName"/> property.
            <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over 
            the StandardIconName and <see cref="P:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.ExtendedIconName"/> properties.</note>
            <para>Default value: <strong>Draft</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.ExtendedIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.StampIconNames,System.Single,System.Single,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The icon to be used in displaying the annotation.</param>
            <param name="x">The x-coordinate of the left bottom corner of the annotation rectangle.</param>
            <param name="y">The y-coordinate of the left-bottom cornere of the annotation rectangle.</param>
            <param name="color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,System.String,System.Single,System.Single,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="text">The icon to be used in displaying the annotation.</param>
            <param name="x">The x-coordinate of the left bottom corner of the annotation rectangle.</param>
            <param name="y">The y-coordinate of the left-bottom cornere of the annotation rectangle.</param>
            <param name="color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfStampAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStampAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation">
            <summary>
            Represents the strikeOut annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation"/> with quadrilateral parameters as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="leftBottom">Left-bottom point of the quadrilateral point.</param>
            <param name="rightTop">Right-top point of the quadrilateral point.</param>
            <param name="rightBottom">Right-bottom point of the quadrilateral point.</param>
            <param name="leftTop">Left-top point of the quadrilateral point.</param>
            <param name="Color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfStrikeoutAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation">
            <summary>
            Represents a text annotation
            </summary>
            <remarks>
            A text annotation represents a “sticky note” attached to a point in the PDF document. 
            When closed, the annotation appears as an icon; when open, it displays a
            pop-up window containing the text of the note in a font and size chosen by the
            viewer application. Text annotations do not scale and rotate with the page; they
            behave as if the NoZoom and NoRotate annotation flags (see <see cref="T:Patagames.Pdf.Enums.AnnotationFlags"/>)
            were always set.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.IsOpen">
            <summary>
            Gets or sets a flag specifying whether the annotation should initially be displayed open. 
            </summary>
            <remarks>
            Default value: <strong>false</strong> (closed).
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.StandardIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
            <remarks>
            Additional names may be supported as well. In this case please use <see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.ExtendedIconName"/> property.
            <note type="note">he annotation dictionary’s AP entry, if present, 
            takes precedence over the StandardIconName and <see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.ExtendedIconName"/> properties.</note>
            <para>Default value: <strong>Note</strong>.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.ExtendedIconName">
            <summary>
            The name of an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.StateModel">
            <summary>
            Gets orsets the state model corresponding to <see cref="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.State"/>;
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.State">
            <summary>
            Gets orsets the state to which the original annotation should be set; 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.IconNames,Patagames.Pdf.FS_COLOR,System.String,System.String,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/> with specified parameters.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="color">Annotation color.</param>
            <param name="text">Annotation text.</param>
            <param name="subject">Annotation subject.</param>
            <param name="x">The x-coordinate of the left bottom corner of the annotation rectangle.</param>
            <param name="y">The y-coordinate of the left-bottom cornere of the annotation rectangle.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Enums.IconNames,System.String,System.String,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="icon">The name of a standard icon to be used in displaying the annotation.</param>
            <param name="text">Annotation text.</param>
            <param name="subject">Annotation subject.</param>
            <param name="x">The x-coordinate of this annotation.</param>
            <param name="y">The y-coordinate of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties.
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style of annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation">
            <summary>
            Represents highlight, underline, squiggly and strikeout annotations
            </summary>
            <remarks>
            Text markup annotations appear as highlights, underlines, strikeouts (all PDF 1.3), 
            or jagged(“squiggly”) underlines(PDF 1.4) in the text of a document.
            When opened, they display a pop-up window containing the text of the associated note.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation.QuadPoints">
             <summary>
             Gets or sets a list of <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> structures specifying the coordinates of quadrilaterals in default user space.
             </summary>
             <remarks>
             Each quadrilateral encompasses a word or group of contiguous words in the text underlying the annotation.
             The coordinates for each quadrilateral are given in the four vertices in counterclockwise order (see Figure 8.9).
             The text is oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
             <note type="note">The annotation dictionary’s AP entry, if present, takes precedence over QuadPoints property</note>
            
             <list type="table">
             <item><term><img src="../../../Pdfium.Docs/Media/Figure8.9QuadPoints.png" /></term></item>
             <listheader>
             <term>FIGURE 8.9 QuadPoints specification</term>
             </listheader>
             </list>		
             </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/> with quadrilateral parameters as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="leftBottom">Left-bottom point of the quadrilateral point.</param>
            <param name="rightTop">Right-top point of the quadrilateral point.</param>
            <param name="rightBottom">Right-bottom point of the quadrilateral point.</param>
            <param name="leftTop">Left-top point of the quadrilateral point.</param>
            <param name="Color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation.RegenerateAppearances">
            <summary>
            Re-creates the appearance of the annotation based on its properties
            </summary>
            <remarks>
            When the annotation does not have an Appearance stream (old style annotations), 
            they are not rendered by the Pdfium engine. 
            Calling this function creates an appearance stream based on the default parameters and the properties of this annotation.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfTrapNetAnnotation">
            <summary>
            Represents a Trap Network annotation
            </summary>
            <remarks>
            A trap network annotation defines the trapping characteristics for a page of a PDF document. 
            (Trapping is the process of adding marks to a page along color boundaries to avoid unwanted visual artifacts resulting 
            from misregistration of colorants when the page is printed.) 
            <note type="note">This annotation type is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTrapNetAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.Pdf3DAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfTrapNetAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfTrapNetAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation">
            <summary>
            Represents the underline annotation
            </summary>
            <remarks>
            Please find details in the remarks section of <see cref="T:Patagames.Pdf.Net.Annotations.PdfTextMarkupAnnotation"/>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_COLOR)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation"/> with quadrilateral parameters as specified.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="leftBottom">Left-bottom point of the quadrilateral point.</param>
            <param name="rightTop">Right-top point of the quadrilateral point.</param>
            <param name="rightBottom">Right-bottom point of the quadrilateral point.</param>
            <param name="leftTop">Left-top point of the quadrilateral point.</param>
            <param name="Color">The color of this annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnderlineAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfUnknownAnnotation">
            <summary>
            Represent the unsupported annotation type
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfUnknownAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfUnknownAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="annot">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation">
            <summary>
            Represents a watermark annotation
            </summary>
            <remarks>
            <para>
            A watermark annotation (PDF 1.6) is used to represent graphics that are expected
            to be printed at a fixed size and position on a page, regardless of the dimensions
            of the printed page.
            </para>
            <para>
            Watermark annotations have no pop-up window or other interactive elements.
            When displaying a watermark annotation on-screen, viewer applications should
            use the dimensions of the media box as the page size so that the scroll and zoom
            behavior is the same as for other annotations.
            </para>
            <note type="note">
            Since many printing devices have nonprintable margins, it is recommended
            that such margins be taken into consideration when positioning watermark annotations near the edge of a page.
            </note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.PdfTextObject,Patagames.Pdf.Enums.PdfContentAlignment,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation"/> with text object as specified.
            </summary>
            <param name="page">The <see cref="T:Patagames.Pdf.Net.PdfPage"/> where watremark must be placed.</param>
            <param name="text">The <see cref="T:Patagames.Pdf.Net.PdfTextObject"/> that will be used as a watermark.</param>
            <param name="alignment">Align the watermark on the page.</param>
            <param name="vDistance">Set the vertical distance between the target page and the watermark.</param>
            <param name="hDistance">Set the horizontal distance between the target page and the watermark.</param>
            <param name="rotation">The rotation degree.</param>
            <param name="scale">Absolute scale.</param>
            <param name="showOnPrint">Show watermark when ptinting.</param>
            <param name="showOnDisplay">Show watermark when displaying on screen.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.PdfImageObject,Patagames.Pdf.Enums.PdfContentAlignment,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation"/> with image object as specified.
            </summary>
            <param name="page">The <see cref="T:Patagames.Pdf.Net.PdfPage"/> where watremark must be placed.</param>
            <param name="image">The <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> that will be used as a watermark.</param>
            <param name="alignment">Align the watermark on the page.</param>
            <param name="vDistance">Set the vertical distance between the target page and the watermark.</param>
            <param name="hDistance">Set the horizontal distance between the target page and the watermark.</param>
            <param name="rotation">The rotation degree.</param>
            <param name="scale">Absolute scale.</param>
            <param name="showOnPrint">Show watermark when ptinting.</param>
            <param name="showOnDisplay">Show watermark when displaying on screen.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Annotations.PdfWidgetAnnotation">
            <summary>
            Represents Widget Annotation
            </summary>
            <remarks>
            Interactive forms use widget annotations to represent the appearance of fields and to manage user interactions.
            <note type="note">This annotation is currently not supported by the SDK.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWidgetAnnotation.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Creates a new <see cref="T:Patagames.Pdf.Net.Annotations.PdfWidgetAnnotation"/>.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Annotations.PdfWidgetAnnotation.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Annotations.PdfWatermarkAnnotation"/> class based on the specified dictionary.
            </summary>
            <param name="page">The PDF page associated with annotation.</param>
            <param name="dictionary">The annotation dictionary or indirect dictionary.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable">
            <summary>
            Represents the cross-reference table
            </summary>
            <remarks>
            The cross-reference table contains information that permits random access to
            indirect objects within the file so that the entire file need not be read to locate any
            particular object. The table contains a one-line entry for each indirect object,
            specifying the location of that object within the body of the file. (Beginning with
            PDF 1.5, some or all of the cross-reference information may alternatively be
            contained in cross-reference streams;)
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Handle">
            <summary>
            Gets the Pdfium SDK handle that the object is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Count">
            <summary>
            Gets the number of elements contained in the list.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem"/> with specified object number.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem"/> at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfCrossReferenceTable class from given Handle
            </summary>
            <param name="Handle">Handle to the PDF document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.FromPdfDocument(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Gets the cross reference table from specified PDF document
            </summary>
            <param name="doc">A PDF document</param>
            <returns>The new instance of list PdfCrossReferenceTable.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Remove(System.Int32)">
            <summary>
            Removes specified object from the table.
            </summary>
            <param name="objectNumber">The object's number to remove from the table.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Rebuild">
            <summary>
            Rebuild cross-reference table.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.Shrink(System.Int32)">
            <summary>
            Shrink the table up to specified object.
            </summary>
            <param name="objectNumber">The object's number to remove from the table.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfCrossReferenceTable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem">
            <summary>
            Represenmts the information about item in cross-reference table
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem.ObjectNumber">
            <summary>
            Gets object's number
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem.Position">
            <summary>
            Gets the number of bytes from the beginning of the file to the beginning of the object. See remarks for details.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Object Type</term><description>Position means</description>
            </listheader>
            <item><term>0</term><description>Nothing means. Always 0.</description></item>
            <item><term>1</term><description>The byte offset of the object, starting from the beginning of the file.</description></item>
            <item><term>2</term><description>The object number of the object stream in which this object is stored.</description></item>
            <item><term>255</term><description>The byte offset of the StreamObject, starting from the beginning of the file.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem.ObjectType">
            <summary>
            Gets type of object.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Value</term><term>Name</term><description>Description</description>
            </listheader>
            <item><term>0</term><term>free entry</term><description>Object not represented in file.</description></item>
            <item><term>1</term><term>in-use entry</term><description>Object represented in file.</description></item>
            <item><term>2</term><term>in-objstm entry</term><description>The object is located in the stream of objects.</description></item>
            <item><term>255</term><term>object stream marker</term><description>The object is a stream of objects.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.BasicTypes.PdfCrossRefItem.GenerationNumber">
            <summary>
            Generation number
            </summary>
            <remarks>
            Except for object number 0, all objects in the cross-reference table initially have
            generation numbers of 0. When an indirect object is deleted, its cross-reference
            entry is marked free and it is added to the linked list of free entries.The entry’s
            generation number is incremented by 1 to indicate the generation number to be
            used the next time an object with that object number is created.Thus, each time
            the entry is reused, it is given a new generation number.The maximum
            generation number is 65,535; when a cross-reference entry reaches this value, it is
            never reused.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfIndirectList">
            <summary>
            Represents the list of indirect objects
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.Handle">
            <summary>
            Gets the Pdfium SDK handle that the object is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.LastObjectNum">
            <summary>
            Gets the number of the last object in the list.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.Item(System.Int32)">
            <summary>
            Gets or sets the object from the list with the specified number
            </summary>
            <param name="number">The object's number to get or set.</param>
            <returns>The object with the specified number.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.Count">
            <summary>
            Gets the number of elements contained in the list.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfIndirectList class from given Handle
            </summary>
            <param name="Handle">Handle to the list of object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.FromPdfDocument(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Gets the list of indirect objects from specified PDF document
            </summary>
            <param name="doc">A PDF document</param>
            <returns>The list of Indirect objects or null if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.FromFdfDocument(Patagames.Pdf.Net.FdfDocument)">
            <summary>
            Gets the list of indirect objects from specified Forms Data Format document
            </summary>
            <param name="fdf">A Forms Data Format document</param>
            <returns>The list of Indirect objects or null if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.Add(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Adds an object to the end of the list.
            </summary>
            <param name="indirectObject">The object to add to the list.</param>
            <returns>Return the number of oject which was added.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.Remove(System.Int32)">
            <summary>
            Destroy specified object and remove its from the list.
            </summary>
            <param name="objectNumber">The object's number to remove from the list.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfIndirectList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeArray">
            <summary>
            Represents the Array type of objects
            </summary>
            <remarks>
            An array object is a one-dimensional collection of objects arranged sequentially. 
            Unlike arrays in many other computer languages, PDF arrays may be heterogeneous; 
            that is, an array’s elements may be any combination of numbers, strings, dictionaries, 
            or any other objects, including other arrays. 
            The number of elements in an array is subject to an implementation limit;
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeArray class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Array object.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Create">
            <summary>
            Creates new Array object
            </summary>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeArray class
            </summary>
            <param name="handle">A handle to the unmanaged Array object.</param>
            <returns>An instance of PdfTypeArray</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetAt(System.Int32)">
            <summary>
            Gets the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetMatrixAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as a matrix.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The matrix located at the specified index; null if there is no matrix.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetRectAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as a rectangle.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The rectangle located at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetRealAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as a Real number.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The real number located at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetIntegerAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as an integer value.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The integer value located at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetBooleanAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as a boolean value.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The boolean value located at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetStringAt(System.Int32)">
            <summary>
            Gets the element with the specified index and returns it as a ansi string.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The string located at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddReal(System.Single)">
            <summary>
            Adds a real value to the Array.
            </summary>
            <param name="value">The real number which should be added at the end of Array.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddInteger(System.Int32)">
            <summary>
            Adds the integer value to the Array.
            </summary>
            <param name="value">The integer number which should be added at the end of Array.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddString(System.String)">
            <summary>
            Adds the ansi string to the Array.
            </summary>
            <param name="text">The string which should be added at the end of Array.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddName(System.String)">
            <summary>
            Creates a Name object and adds it to the Array.
            </summary>
            <param name="name">The name which should be added at the end of Array.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddIndirect(Patagames.Pdf.Net.BasicTypes.PdfIndirectList,System.Int32)">
            <summary>
            Creates an Indirect object and adds it to the Array.
            </summary>
            <param name="list">List of objects</param>
            <param name="objectNumber">Object's number</param>
            <exception cref="T:System.ArgumentNullException">list is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.AddIndirect(Patagames.Pdf.Net.BasicTypes.PdfIndirectList,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates an Indirect object and adds it to the Array.
            </summary>
            <param name="list">List of objects</param>
            <param name="directObject">A PDF object</param>
            <exception cref="T:System.ArgumentNullException">list or object is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.SetAt(System.Int32,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Sets the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <param name="value">The element which should be setted at the specified index.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array</exception>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.SetAt(System.Int32,Patagames.Pdf.Net.BasicTypes.PdfTypeBase,Patagames.Pdf.Net.BasicTypes.PdfIndirectList)">
            <summary>
            Sets the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <param name="value">The element which should be setted at the specified index.</param>
            <param name="list">The list of objects.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array</exception>
            <exception cref="T:System.ArgumentNullException">value or list is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Add(Patagames.Pdf.Net.BasicTypes.PdfTypeBase,Patagames.Pdf.Net.BasicTypes.PdfIndirectList)">
            <summary>
            Adds an item to the Array
            </summary>
            <param name="item">The object to add to the Array</param>
            <param name="list">The list of objects.</param>
            <exception cref="T:System.ArgumentNullException">item or list is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Insert(System.Int32,Patagames.Pdf.Net.BasicTypes.PdfTypeBase,Patagames.Pdf.Net.BasicTypes.PdfIndirectList)">
            <summary>
            Inserts an item to the Array at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the Array.</param>
            <param name="list">The list of objects.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array.</exception>
            <exception cref="T:System.ArgumentNullException">item or list is null.</exception>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Count">
            <summary>
             Gets the number of elements contained in the Array.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array</exception>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the Array is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.IndexOf(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Determines the index of a specific item in the Array.
            </summary>
            <param name="item">The object to locate in the Array</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
            <exception cref="T:System.ArgumentNullException">item is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.RemoveAt(System.Int32)">
            <summary>
            Removes the System.Collections.Generic.IList`1 item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Add(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Adds an item to the Array
            </summary>
            <param name="item">The object to add to the Array</param>
            <exception cref="T:System.ArgumentNullException">item is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Insert(System.Int32,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Inserts an item to the Array at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the Array.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the Array.</exception>
            <exception cref="T:System.ArgumentNullException">item is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Clear">
            <summary>
            Removes all items from the Array
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Contains(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Determines whether the Array contains a specific value.
            </summary>
            <param name="item">The object to locate in the Array.</param>
            <returns>true if item is found in the Array; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">item is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.CopyTo(Patagames.Pdf.Net.BasicTypes.PdfTypeBase[],System.Int32)">
            <summary>
            Copies the elements of the Array to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from Array. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.Remove(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Removes the first occurrence of a specific object from the Array.
            </summary>
            <param name="item">The object to remove from the Array.</param>
            <returns>
            true if item was successfully removed from the Array;
            otherwise, false. This method also returns false if item is not found in the
            original Array.
            </returns>
            <exception cref="T:System.ArgumentNullException">item is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the Array.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeBase">
            <summary>
            Represents the base class for PDF types
            </summary>
            <remarks>
            PDF supports eight basic types of objects:
            <list type="bullet">
            <item>Boolean values</item>
            <item>Integer and real numbers</item>
            <item>Strings</item>
            <item>Names</item>
            <item>Arrays</item>
            <item>Dictionaries</item>
            <item>Streams</item>
            <item>The null object</item>
            </list>
            Objects may be labeled so that they can be referred to by other objects.
            A labeled object is called an indirect object.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Handle">
            <summary>
            Gets the Pdfium SDK handle that the object is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            </summary>
            <value>true if object has been disposed of; otherwise, false.</value>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.ObjectType">
            <summary>
            Gets the type of a PDF object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.ObjectNumber">
            <summary>
            Get a positive integer object number. Indirect objects are often numbered sequentially within a PDF file, but this is not required; object numbers may be assigned in any arbitrary order.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.GenerationNumber">
            <summary>
            Get a non-negative integer generation number. In a newly created file, all indirect objects have generation numbers of 0. Nonzero generation numbers may be introduced when the file is later updated.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of IntObjBase class from given Handle
            </summary>
            <param name="Handle">A handle to an unmanaged object.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Create(System.IntPtr)">
            <summary>
            Identifies the type of the specified object and creates an instance of this type.
            </summary>
            <param name="handle">A handle to an unmanaged object.</param>
            <returns>The instance of a newly created object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Dispose">
            <summary>
            Releases all resources used by the object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the object.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Clone(System.Boolean)">
            <summary>
            Create a new PDF object based on this object.
            </summary>
            <param name="bDirect">A flag indicating whether indirect objects should be cloned as direct objects.</param>
            <returns>A cloned PDF object.</returns>
            <remarks>
            <para>bDirect should be <strong>False</strong> to keep indirect objects as is; 
            <strong>True</strong> to convert indirect objects to direct objects.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Release">
            <summary>
            Delete object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.As``1">
            <summary>
            Converts the current instance to specified type.
            </summary>
            <typeparam name="T">The type the instance should be converted for.</typeparam>
            <returns>Returns instance of type of T or throw an exception <see cref="T:Patagames.Pdf.Net.Exceptions.UnexpectedTypeException"/> if type of this istance is not T.</returns>
            <remarks>This instance may be a direct or inderect object of type T
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.Is``1">
            <summary>
            Checks if this instance has the specified type.
            </summary>
            <typeparam name="T">The type for check.</typeparam>
            <returns>Returns true if this instance has type T; false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBase.OnDestroy">
            <summary>
            Called immediately before the object is destroyed.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeBoolean">
            <summary>
            Represents the Boolean type of objects
            </summary>
            <remarks>
            PDF provides boolean objects identified by the keywords true and false. 
            Boolean objects can be used as the values of array elements and dictionary entries, 
            and can also occur in PostScript calculator functions as the results of boolean 
            and relational operators and as operands to the conditional operators if and ifelse.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeBoolean.Value">
            <summary>
            Gets or sets the value for this Boolean object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBoolean.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeBoolean class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Boolean object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBoolean.Create(System.Boolean)">
            <summary>
            Creates new Boolean object
            </summary>
            <param name="bInitialVal">Initial value for this object</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeBoolean.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeBoolean class
            </summary>
            <param name="handle">A handle to the unmanaged Boolean object</param>
            <returns>An instance of PdfTypeBoolean</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary">
            <summary>
            Represents the Dictionary type of objects
            </summary>
            <remarks>
            A dictionary object is an associative table containing pairs of objects, known as the dictionary’s entries. 
            The first element of each entry is the key and the second element is the value. 
            The key must be a name. The value can be any kind of object, including another dictionary. 
            A dictionary entry whose value is null is equivalent to an absent entry. 
            (This differs from PostScript, where null behaves like any other object as the value of a dictionary entry.) 
            The number of entries in a dictionary is subject to an implementation limit;
            <note type="note">No two entries in the same dictionary should have the same key. If a key does appear more than once, its value is undefined.</note>
            Dictionary objects are the main building blocks of a PDF document. 
            They are commonly used to collect and tie together the attributes of a complex object, 
            such as a font or a page of the document, with each entry in the dictionary specifying the name 
            and value of an attribute. By convention, the Type entry of such a dictionary identifies the type 
            of object the dictionary describes. 
            In some cases, a Subtype entry (sometimes abbreviated S) is used to further identify a specialized 
            subcategory of the general type. The value of the Type or Subtype entry is always a name. 
            For example, in a font dictionary, the value of the Type entry is always Font, whereas that of the Subtype entry 
            may be Type1, TrueType, or one of several other values.
            <para>
            The value of the Type entry can almost always be inferred from context. 
            The operand of the Tf operator, for example, must be a font object; 
            therefore, the Typeentry in a font dictionary serves primarily as documentation and as information for error checking. 
            The Type entry is not required unless so stated in its description; 
            however, if the entry is present, it must have the correct value. 
            In addition, the value of the Type entry in any dictionary, even in private data, 
            must be either a name defined in this book or a registered name.
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.IsSignature">
            <summary>
            Determines whether the Dictionary is a signature field.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeDictionary class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Dictionary object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Create">
            <summary>
            Creates new Dictionary object
            </summary>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeDictionary class
            </summary>
            <param name="handle">A handle to the unmanaged Dictionary object</param>
            <returns>An instance of PdfTypeDictionary</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetBy(System.String)">
            <summary>
            Gets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetAt(System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Sets the element at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="value">The element which should be setted at the specified key.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
            <exception cref="T:System.ArgumentNullException">The key or value is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetMatrixBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as a matrix.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The matrix located at the specified key; null if there is no matrix.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetMatrixAt(System.String,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Sets the matrix at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="matrix">The matrix which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetRectBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as a rectangle.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The rectangle located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetRectAt(System.String,Patagames.Pdf.FS_RECTF)">
            <summary>
            Sets the rectangle at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="rect">The rectangle which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetRealBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as a Real number.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The real number located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetRealAt(System.String,System.Single)">
            <summary>
            Sets the Real number at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="value">The real  number which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetIntegerBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as an integer value.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The integer value located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetIntegerAt(System.String,System.Int32)">
            <summary>
            Sets the integer value at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="value">The integer value which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetBooleanBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as a boolean value.
            </summary>
            <param name="key">The key of the element to get</param>
            <returns>The boolean value located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetBooleanAt(System.String,System.Boolean)">
            <summary>
            Sets the boolean value at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="value">The boolean value which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetStringBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as a ansi string.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The string located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetUnicodeBy(System.String)">
            <summary>
            Gets the element with the specified key and returns it as an unicode string.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The string located at the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetStringAt(System.String,System.String)">
            <summary>
            Sets the ansi string at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="text">The string which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetNameAt(System.String,System.String)">
            <summary>
            Creates a Name object and sets it at the specified key.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="name">The name which should be setted at the specified key.</param>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetIndirectAt(System.String,Patagames.Pdf.Net.BasicTypes.PdfIndirectList,System.Int32)">
            <summary>
            Creates an Indirect object and sets it at the specified key of dictionary.
            </summary>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="list">List of objects</param>
            <param name="objectNumber">Object's number</param>
            <exception cref="T:System.ArgumentNullException">The key or list is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.SetIndirectAt(System.String,Patagames.Pdf.Net.BasicTypes.PdfIndirectList,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates an Indirect object and sets it at the specified key of dictionary.
            </summary>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="list">List of objects</param>
            <param name="directObject">Handle to PDF object</param>
            <exception cref="T:System.ArgumentNullException">The key, list or object is null.</exception>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Count">
            <summary>
             Gets the number of keys contained in the Dictionary.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
            <exception cref="T:System.ArgumentNullException">The key or value is null.</exception>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the Dictionary object is read-only.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Keys">
            <summary>
            Gets an ICollection object containing the keys of the IDictionary object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Values">
            <summary>
            Gets an ICollection object containing the values in the IDictionary object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase})">
            <summary>
            Adds an element with the provided key and value to the IDictionary object.
            </summary>
            <param name="item">The item to be added.</param>
            <exception cref="T:System.ArgumentNullException">The key or value is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Add(System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Adds an element with the provided key and value to the IDictionary object.
            </summary>
            <param name="key">The string to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeBase"/> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">The key or value is null.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the Dictionary.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase})">
            <summary>
            Determines whether the Dictionary contains an item with the specified key.
            </summary>
            <param name="item">The object to locate in the Dictionary.</param>
            <returns>true if the Dictionary contains an item with the key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the Dictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the Dictionary.</param>
            <returns>true if the Dictionary contains an element with the key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase})">
            <summary>
            Removes the element with the specified key from the Dictionary.
            </summary>
            <param name="item">The key of the element to remove.</param>
            <returns>Always true</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the Dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>Always true</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.TryGetValue(System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements Dictionary contains an element with the specified key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">The key is null.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Patagames.Pdf.Net.BasicTypes.PdfTypeBase}[],System.Int32)">
            <summary>
            Copies the elements of the Dictionary to an Array, starting at a particular Array index
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from Dictionary. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">The array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect">
            <summary>
            Represents the indirect objects
            </summary>
            <remarks>
            Any object in a PDF file may be labeled as an indirect object. 
            This gives the object a unique object identifier by which other objects can refer to it 
            (for example, as an element of an array or as the value of a dictionary entry). 
            The object identifier consists of two parts:
            <list type="bullet">
            <item>A positive integer object number. Indirect objects are often numbered sequentially within a PDF file, 
            but this is not required; object numbers may be assigned in any arbitrary order.</item>
            <item>A non-negative integer generation number. In a newly created file, all indirect objects have generation numbers of 0. 
            Nonzero generation numbers may be introduced when the file is later updated.</item>
            </list>
            Together, the combination of an object number and a generation number uniquely identifies an indirect object. 
            The object retains the same object number and generation number throughout its existence, even if its value is modified.
            <note type="note">In the data structures that make up a PDF document, certain values are required to be specified as 
            indirect object references. Except where this is explicitly called out, any object (other than a stream) may be specified 
            either directly or as an indirect object reference; the semantics are entirely equivalent. 
            Note in particular that content streams, which define the visible contents of the document, 
            may not contain indirect references.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.Direct">
            <summary>
            Gets the direct object for this indirect object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.List">
            <summary>
            Gets a list of objects in which is linked with the specified reference object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.Number">
            <summary>
            Gets an object number which is linked with the specified reference object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeIndirect class from given Handle
            </summary>
            <param name="Handle">A handle to an unmanaged indirect object.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.Create(Patagames.Pdf.Net.BasicTypes.PdfIndirectList,System.Int32)">
            <summary>
            Create an instance of an indirect object.
            </summary>
            <param name="list">The <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfIndirectList"/> which contains this object for which the indiret object is created.</param>
            <param name="num">Object number for which the indiret object is created.</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeIndirect class
            </summary>
            <param name="handle">A handle to an unmanaged indirect object.</param>
            <returns>An instance of PdfTypeIndirect</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeIndirect.SetDirect(Patagames.Pdf.Net.BasicTypes.PdfIndirectList,System.Int32)">
            <summary>
            Changes a link of Reference object to the specified object in the specified list.
            </summary>
            <param name="list">List of indirect objects</param>
            <param name="num">Object's number in the specified list</param>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeName">
            <summary>
            Represents the Name type of objects
            </summary>
            <remarks>
            A name object is an atomic symbol uniquely defined by a sequence of characters. 
            Uniquely defined means that any two name objects made up of the same sequence of characters 
            are identically the same object. 
            Atomic means that a name has no internal structure; although it is defined by a sequence of characters, 
            those characters are not considered elements of the name.
            <para>
            The name may include any regular characters, but not delimiter or white-space characters. 
            Uppercase and lowercase letters are considered distinct: 'A' and 'a' are different names.
            </para>
            <para>Beginning with PDF 1.2, any character except null (character code 0) may be included in a name 
            by writing its 2-digit hexadecimal code, preceded by the number sign character (#).
            This syntax is required to represent any of the delimiter or white-space characters or the number sign character itself; 
            it is recommended but not required for characters whose codes are outside the range 33 (!) to 126 (~).
            </para>
            <para>The length of a name is subject to an implementation limit; 
            The limit applies to the number of characters in the name’s internal representation. For example, the name A#20B has free characters (A, space, B), not five.</para>
            <note type="note">PDF does not prescribe what UTF-8 sequence to choose for representing any given piece of externally specified text as a name object. 
            In some cases, multiple UTF-8 sequences could represent the same logical text.
            Name objects defined by different sequences of bytes constitute distinct name objects in PDF, 
            even though the UTF-8 sequences might have identical external interpretations.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeName.Value">
            <summary>
            Gets or sets the value for this Name object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeName.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeName class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Name object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeName.Create(System.String)">
            <summary>
            Creates new Name object
            </summary>
            <param name="initialVal">Initial value for this object</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeName.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeName class
            </summary>
            <param name="handle">A handle to the unmanaged Name object</param>
            <returns>An instance of PdfTypeName</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeNull">
            <summary>
            Represents the Null type of objects
            </summary>
            <remarks>
            The null object has a type and value that are unequal to those of any other object. 
            There is only one object of type null, denoted by the keyword null. 
            An indirect object reference to a nonexistent object is treated the same as a null object. 
            Specifying the null object as the value of a dictionary entry is equivalent to omitting the entry entirely.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNull.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeNull class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Null object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNull.Create">
            <summary>
            Creates new Null object
            </summary>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNull.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeNull class
            </summary>
            <param name="handle">A handle to the unmanaged Null object</param>
            <returns>An instance of PdfTypeNull</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber">
            <summary>
            Represents the Numeric type of objects
            </summary>
            <remarks>
            PDF provides two types of numeric objects: integer and real. 
            Integer objects represent mathematical integers within a certain interval centered at 0. 
            Real objectsapproximate mathematical real numbers, but with limited range and precision; 
            they are typically represented in fixed-point form rather than floating-point form. 
            The range and precision of numbers are limited by the internal representations used in the computer 
            on which the PDF consumer application is running.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.IntValue">
            <summary>
            Gets or sets the value for this Number object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.FloatValue">
            <summary>
            Gets or sets the value for this Number object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.IsInteger">
            <summary>
            Gets a boolean value that indicates whether a Number is an integer.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeNumber class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Number object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.Create(System.Int32)">
            <summary>
            Creates new Number object
            </summary>
            <param name="initialVal">Initial value for this object</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.Create(System.Single)">
            <summary>
            Creates new Number object
            </summary>
            <param name="initialVal">Initial value for this object</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeNumber.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeNumber class
            </summary>
            <param name="handle">A handle to the unmanaged Number object</param>
            <returns>An instance of PdfTypeNumber</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeStream">
            <summary>
            Represents the Stream type of objects
            </summary>
            <remarks>
            A stream object, like a string object, is a sequence of bytes. 
            However, a PDF application can read a stream incrementally, while a string must be read in its entirety. 
            Furthermore, a stream can be of unlimited length, whereas a string is subject to an implementation limit. 
            For this reason, objects with potentially large amounts of data, such as images and page descriptions, 
            are represented as streams. All streams must be indirect objects and the stream dictionary must be a direct object. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Length">
            <summary>
            Gets the length in bytes of the underlying buffer of the stream.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.RawData">
            <summary>
            Get underlying buffer of the stream.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Content">
            <summary>
            Get a managed copy of underlying buffer of the stream.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.IsMemoryBased">
            <summary>
            Gets a boolean value that indicates whether a Stream was initialized from memory.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Dictionary">
            <summary>
            Gets a Dictionary representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.DecodedData">
            <summary>
            Gets decoded strem content.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.DecodedText">
            <summary>
            Gets decoded stream contetn as ASCII string
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeStream class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged Stream object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Create">
            <summary>
            Creates new Stream object
            </summary>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeStream class
            </summary>
            <param name="handle">A handle to the unmanaged Stream object</param>
            <returns>An instance of PdfTypeStream</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.SetRawData(System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Set specified raw data into current stream
            </summary>
            <param name="data">The stream raw data in unmanaged memory</param>
            <param name="size">The length in bytes of the data</param>
            <param name="bCompressed">Indicates whether a passed buffer is compressed or not.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.SetContent(System.Byte[],System.Boolean)">
            <summary>
            Replace the stream content with the specified data.
            </summary>
            <param name="data">Data to write to stream</param>
            <param name="bCompressed">Indicates whether a passed buffer is compressed or not.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Init(System.Byte[],Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Initialize the stream with a sequence of bytes.
            </summary>
            <param name="data">An array of bytes. This method copies all bytes from data to the current stream.</param>
            <param name="dictionary">The dictionary associated with the stream.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.Read(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Reads a specified number of bytes from the current stream from specified position.
            </summary>
            <param name="startPos">The ofset from the begining of stream</param>
            <param name="length">The number of bytes to read from stream</param>
            <param name="buffer">An array of readed bytes.</param>
            <returns>True for successfull, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeStream.InitEmpty">
            <summary>
            Initialize the stream with an empty sequence of bytes.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeString">
            <summary>
            Represents the String type of objects
            </summary>
            <remarks>
            A string object consists of a series of bytes—unsigned integer values in the range 0 to 255. 
            String objects are not integer objects, but are stored in a more compact format. 
            The length of a string may be subject to implementation limits.
            <para>String objects can be written in two ways:</para>
            <list type="bullet">
            <item>As a sequence of literal characters</item>
            <item>As hexadecimal data. e.g. 4E6F762073686D6F7A206B6120706F702E</item>
            </list>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeString.IsHex">
            <summary>
            Gets a boolean value that indicates whether a String is a hex.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeString.AnsiString">
            <summary>
            Gets or sets the non unicode string 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeString.UnicodeString">
            <summary>
            Gets the unicode string 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeString.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeString class from given Handle
            </summary>
            <param name="Handle">A handle to the unmanaged String object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeString.Create(System.String,System.Boolean,System.Boolean)">
            <summary>
            Create new String object and initialise it with string
            </summary>
            <param name="initialVal">Initial value for this object</param>
            <param name="bUnicode">Indicates what the given string is a unicode string.</param>
            <param name="bHex">Indicates whether a value is a HEX. Used for non unicode strings only.</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeString.Create(System.IntPtr)">
            <summary>
            Creates new instance of PdfTypeString class
            </summary>
            <param name="handle">A handle to the unmanaged String object</param>
            <returns>An instance of PdfTypeString</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown">
            <summary>
            Represents the unknown (unsuported) type of objects
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.Direct">
            <summary>
            Gets the inderect object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.AnsiString">
            <summary>
            Gets a non-unicode string representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.UnicodeString">
            <summary>
            Gets a unicode string representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.Number">
            <summary>
            Gets a floating-point representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.Integer">
            <summary>
            Gets an integer representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.Dictionary">
            <summary>
            Gets a Dictionary representation of the specified object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.Array">
            <summary>
            Gets an Array representation of the specified object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfTypeUnknown.#ctor(System.IntPtr)">
            <summary>
            Construct new instance of PdfTypeUnknown class from given Handle
            </summary>
            <param name="Handle">Handle to the unmanaged object</param>
        </member>
        <member name="T:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection">
            <summary>
            Represents a collection of referred objects.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Handle">
            <summary>
            Gets the Pdfium SDK handle that the collection is bound to
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,System.Int32)">
            <summary>
            Construct new instance of <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection"/> class from given Handle
            </summary>
            <param name="doc">A PDF document</param>
            <param name="Handle">Handle to the list of object</param>
            <param name="Count">Number of items in the given collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.FromPdfDocument(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Gets the list of referenced objets from the catalog of the specified PDF document
            </summary>
            <param name="doc">A PDF document</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.RequiredDataIsAbsentException">
            <para>This method cannot accept newly created documents. If you pass such a document as an argument, the <see cref="T:Patagames.Pdf.Net.Exceptions.RequiredDataIsAbsentException"/> will be thrown.</para>
            <para>To get the instance of the PdfDocument class that can be passed to the FromPdfDocument method, you must save the document to a temporary file or an array of bytes, and then open it with the <see cref="O:Patagames.Pdf.Net.PdfDocument.Load"/>.</para>
            </exception>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection"/> class</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Dispose">
            <summary>
            Dispose <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection"/>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Contains(System.Int32)">
            <summary>
            Determines whether the collection contains an object with specified object number/>.
            </summary>
            <param name="objectNumber">The object number to locate in the collection.</param>
            <returns>true if object with specified number is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.IndexOf(System.Int32)">
            <summary>
            Determines the index of an object with specific object number in the collection.
            </summary>
            <param name="objectNumber">The object number to locate in the collection</param>
            <returns>The index of  object with specified object number if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.GetBy(System.Int32)">
            <summary>
            Gets the object with specified object number
            </summary>
            <param name="objectNumber">The object number to locate in the collection.</param>
            <returns>The <see cref="T:Patagames.Pdf.REFOBJ"/> with the specified object number.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.REFOBJ"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The <see cref="T:Patagames.Pdf.REFOBJ"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.REFOBJ"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Add(Patagames.Pdf.REFOBJ)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.REFOBJ"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.REFOBJ"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.REFOBJ"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Contains(Patagames.Pdf.REFOBJ)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.REFOBJ"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.REFOBJ"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.REFOBJ"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.CopyTo(Patagames.Pdf.REFOBJ[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.IndexOf(Patagames.Pdf.REFOBJ)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.REFOBJ"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.REFOBJ"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.REFOBJ"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Insert(System.Int32,Patagames.Pdf.REFOBJ)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.REFOBJ"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.REFOBJ"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.REFOBJ"/> to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.Remove(Patagames.Pdf.REFOBJ)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.REFOBJ"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.REFOBJ"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.REFOBJ"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.REFOBJ"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.BasicTypes.PdfRefObjectsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.REFOBJ"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.REFOBJ"/>  to remove.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect">
            <summary>
            Represents a border effects.
            </summary>
            <remarks>
            Beginning with PDF 1.5, some annotations (<see cref="T:Patagames.Pdf.Net.Annotations.PdfFigureAnnotation"/>, <see cref="T:Patagames.Pdf.Net.Annotations.PdfCircleAnnotation"/>, and <see cref="T:Patagames.Pdf.Net.Annotations.PdfPolygonAnnotation"/>) can have
            a <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/> that specifies an effect to be applied
            to the border of the annotations. Beginning with PDF 1.6, the <see cref="T:Patagames.Pdf.Net.Annotations.PdfFreeTextAnnotation"/>
            can also have a <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/>.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfBorderEffect.Effect">
            <summary>
            Gets or sets the border effect to apply. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfBorderEffect.Intensity">
            <summary>
            A number describing the intensity of the effect. Suggested values range from 0 to 2. Default value: 0.
            </summary>
            <remarks>
            Valid only if the value of <see cref="P:Patagames.Pdf.Net.Wrappers.PdfBorderEffect.Effect"/> property is <see cref="F:Patagames.Pdf.Enums.BorderEffects.Cloudy"/>.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfBorderEffect.#ctor">
            <summary>
            Creates new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfBorderEffect.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderEffect"/> and initialize it with specified dictionary
            </summary>
            <param name="dictionary">The dictionary or indirect dictionary</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle">
            <summary>
            Represents border style.
            </summary>
            <remarks>
            An annotation may optionally be surrounded by a border when displayed or
            printed. If present, the border is drawn completely inside the annotation rectangle.
            In PDF 1.1, the characteristics of the border are specified by the Border
            entry in the annotation dictionary. Beginning with
            PDF 1.2, some types of annotations may instead specify their border characteristics 
            in a <strong>BorderStyle</strong> property. 
            <note type="note">If neither the Border nor the BS entry is present, the
            border is drawn as a solid line with a width of 1 point.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfBorderStyle.Width">
            <summary>
            Gets or sets the border width in points.
            </summary>
            <remarks>
            If this value is 0, no border is drawn. Default value: 1.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfBorderStyle.Style">
            <summary>
            Gets or sets border style.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfBorderStyle.DashPattern">
            <summary>
            Gets or sets an array defining a pattern of dashes and gaps to be used in drawing a dashed border.
            </summary>
            <remarks>
            The dash array is specified in the same format as in the line dash pattern parameter of the graphics state.
            The dash phase is not specified and is assumed to be 0. For example, a DashPattern
            property of[3 2] specifies a border drawn with 3-point dashes alternating with 2-point
            gaps. Default value: [3].
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfBorderStyle.#ctor">
            <summary>
            Creates new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfBorderStyle.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfBorderStyle"/> and initialize it with specified dictionary
            </summary>
            <param name="dictionary">The dictionary or indirect dictionary</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfWrapper">
            <summary>
            Represents the base class for all dictionary helpers
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dictionary">
            <summary>
            Gets dictionary associated with that object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.#ctor">
            <summary>
            Creates empty dictionary.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> and initialize it with specified dictionary
            </summary>
            <param name="dictionary">The dictionary or indirect dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.Finalize">
            <summary>
            Finalise object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.Equals(System.Object)">
            <summary>
            Determines whether the specified annotations is equal to the current annotation.
            </summary>
            <param name="dictionary">The dictionary to compare with the current dictionary.</param>
            <returns>true if the specified dictionary is equal to the current dictionary; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.Equals(Patagames.Pdf.Net.Wrappers.PdfWrapper)">
            <summary>
            Determines whether the specified annotations is equal to the current annotation.
            </summary>
            <param name="dictionary">The dictionary to compare with the current dictionary.</param>
            <returns>true if the specified dictionary is equal to the current dictionary; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.op_Equality(Patagames.Pdf.Net.Wrappers.PdfWrapper,Patagames.Pdf.Net.Wrappers.PdfWrapper)">
            <summary>
            Compares two <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> classes. 
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> to compare.</param>
            <remarks>
            The result specifies whether the
            values of the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dictionary"/> properties
            of the two <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> are point to the same dictionary.
            </remarks>
            <returns>
            true if the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfWrapper.Dictionary"/> values of the
            left and right <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> classes are point to the same dictionary.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.op_Inequality(Patagames.Pdf.Net.Wrappers.PdfWrapper,Patagames.Pdf.Net.Wrappers.PdfWrapper)">
            <summary>
            Determines whether the Dictionary property of the <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> classes are pointed to the different dictionaries.
            </summary>
            <param name="left">A <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> to compare.</param>
            <param name="right">A <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/> to compare.</param>
            <returns>Tru or false</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Patagames.Pdf.Net.Wrappers.PdfWrapper"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfWrapper.IsExists(System.String)">
            <summary>
            Determines whether the specified key is contained in the current dictionary.
            </summary>
            <param name="key">The key</param>
            <returns>The method return false if key is not contained by dictionary; or if the key is contained, but its value is null, PdfTypeNull or indirect reference to PdfTypeNull or the Direct property is null.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfFile">
            <summary>
            Represents a embedded file object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFile.Stream">
            <summary>
            Gets underlying stream.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFile.CreationDate">
            <summary>
            Gets or sets the date and time when the embedded file was created.
            </summary>
            <remarks>
            <para>
            PDF defines a standard date format, which closely follows that of the international standard ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824 
            A date is a string of the form</para>
            <para>D:YYYYMMDDHHmmSSOHH'mm'</para>
            <para>where YYYY is the year; MM is the month; DD is the day(01–31); HH is the hour(00–23); mm is the minute(00–59); SS is the second(00–59);
            O is the relationship of local time to Universal Time(UT), denoted by one of the characters +, −, or Z;
            HH followed by ' is the absolute value of the offset from UT in hours (00–23),
            mm followed by ' is the absolute value of the offset from UT in minutes (00–59)
            </para>
            <para>The apostrophe character (') after HH and mm is part of the syntax. All fields after
            the year are optional. (The prefix D:, although also optional, is strongly recommended.) 
            The default values for MM and DD are both 01; all other numerical fields default to zero values. A plus sign (+) as the value of the O field
            signifies that local time is later than UT, a minus sign(−) signifies that local time
            is earlier than UT, and the letter Z signifies that local time is equal to UT.If no UT
            information is specified, the relationship of the specified time to UT is considered
            to be unknown.Regardless of whether the time zone is known, the rest of the date
            should be specified in local time.</para>
            <para>For example, December 20, 2018, at 3:50 PM, U.S. Pacific Standard Time, is represented by the string</para>
            <para>D:201812201550−08'00'</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFile.ModificationDate">
            <summary>
            Gets or sets the date and time when the embedded file was last modified.
            </summary>
            <remarks>
            Please see remarks section of <see cref="P:Patagames.Pdf.Net.Wrappers.PdfFile.CreationDate"/>.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFile.CheckSum">
            <summary>
            Gets or sets a 16-byte string that is the checksum of the bytes of the uncompressed embedded file.
            </summary>
            <remarks>
            The checksum is calculated by applying the standard MD5 message-digest algorithm (described in Internet RFC 1321, The MD5
            Message-Digest Algorithm) to the bytes of the embedded file stream.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFile.FileSize">
            <summary>
            Gets or sets a 16-byte string that is the checksum of the bytes of the uncompressed embedded file.
            </summary>
            <remarks>
            The checksum is calculated by applying the standard MD5 message-digest algorithm (described in Internet RFC 1321, The MD5
            Message-Digest Algorithm) to the bytes of the embedded file stream.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfFile.#ctor(System.Byte[])">
            <summary>
            Creates new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFile"/>.
            </summary>
            <param name="fileContent">The contents of the file that should be embedded</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfFile.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeStream)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFile"/> and initialize it with specified steeam
            </summary>
            <param name="stream">The dictionary or indirect dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfFile.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFile"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfFileSpecification">
            <summary>
            Represents a file sppecification
            </summary>
            <remarks>
            A PDF file can refer to the contents of another file by using a file specification (PDF 1.1), which can take either of two forms:
            <list type="bullet">
            <item>A simple file specification gives just the name of the target file in a standard format, independent of the naming conventions of any particular file system. It can take the form of either a string or a dictionary</item>
            <item>A full file specification includes information related to one or more specific file systems.</item>
            </list>
            <para>
            Although the file designated by a file specification is normally external to the
            PDF file referring to it, PDF 1.3 permits a copy of the external file to be
            embedded within the referring PDF file, allowing its contents to be stored or
            transmitted along with the PDF file. However, embedding a file does not change
            the presumption that it is external to the PDF file. Consequently, to ensure that
            the PDF file can be processed correctly, it may be necessary to copy its embedded
            files back into a local file system.
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification._fileSystem">
            <summary>
            Gets or sets the name of the file system to be used to interpret this file specification. 
            </summary>
            <remarks>
            If value is not null, all other properties are interpreted by the designated file system.
            PDF defines only one standard file system name, URL; an application or plug-in extension 
            can register other names. This 
            Property is independent of the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.FileName"/> property.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.FileName">
            <summary>
            Gets or sets a file specification string.
            </summary>
            <remarks>
            A file specification string of the form described in section “File Specification Strings”
            or (if the file system is URL) a uniform resource locator, as described in Section “URL Specifications”
            in remarks of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFileSpecification"/> reference.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.IsUrl">
            <summary>
            Gets or sets a flag indicating that the file name should be interpreted as an URL
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.IsVolatile">
            <summary>
            Gets or sets a flag indicating whether the file referenced by the this file specification is volatile (changes frequently with time).
            </summary>
            <remarks>
            If the value is true, applications should
            never cache a copy of the file.For example, a movie annotation referencing a URL to
            a live video camera could set this flag to true to notify the application that it should
            reacquire the movie each time it is played.Default value: false.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.Description">
            <summary>
            Gets or sets descriptive text associated with the file specification.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.EmbeddedFile">
            <summary>
            Gets or sets embedded file.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Creates new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFileSpecification"/>.
            </summary>
            <param name="document">Instance of PdfDocument class with which this dictionary is associated</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfFileSpecification.#ctor(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.Net.BasicTypes.PdfTypeBase)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfFileSpecification"/> and initialize it with specified dictionary
            </summary>
            <param name="document">Instance of PdfDocument class with which this dictionary is associated</param>
            <param name="dictionary">The dictionary or indirect dictionary</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Wrappers.PdfSound">
            <summary>
            Represents a sound object
            </summary>
            <remarks>
            <para>
            Sample values are stored in the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.Stream"/> with the most significant bits first (big-endian order for samples larger than 8 bits). 
            Samples that are not a multiple of 8 bits are packed into consecutive bytes, starting at the most significant end.
            If a sample extends across a byte boundary, the most significant bits are placed in the first byte, followed by less significant bits in subsequent bytes. 
            For dual-channel stereophonic sounds, the samples are stored in an interleaved format, with each
            sample value for the left channel (channel 1) preceding the corresponding sample for the right(channel 2).
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Stream">
            <summary>
            Gets underlying stream.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Rate">
            <summary>
            Gets or sets the sampling rate, in samples per second.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Channels">
            <summary>
            Gets or sets the number of sound channels. 
            </summary>
            <remarks>
            Default value: <strong>1</strong>.
            <note type="note">Acrobat supports a maximum of two sound channels.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Bps">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
            <remarks>Default value: <strong>8</strong>.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Encoding">
            <summary>
            Gets or sets the encoding format for the sample data.
            </summary>
            <remarks>Default value: <strong>Raw</strong>.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.CompressionFormat">
            <summary>
            The sound compression format used on the sample data.
            </summary>
            <remarks>
            If this property is null, no sound compression has been used; 
            the data contains sampled waveforms to be played at <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.Rate"/> samples per second per channel.
            <note type="note">At the time of publication, no standard values have been defined for the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.CompressionFormat"/> 
            and <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.Parameters"/> properties.</note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Wrappers.PdfSound.Parameters">
            <summary>
            Gets or sets optional parameters specific to the sound compression format used.
            </summary>
            <remarks>
            <note type="note">At the time of publication, no standard values have been defined for the <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.CompressionFormat"/> and <see cref="P:Patagames.Pdf.Net.Wrappers.PdfSound.Parameters"/> properties.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfSound.#ctor(System.Byte[],Patagames.Pdf.Enums.SoundEncodingFormats,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/>.
            </summary>
            <param name="sampleData">Sample values which should be stored in the stream.</param>
            <param name="encoding">The encoding format for the sample data.</param>
            <param name="bps">The number of bits per sample value per channel.</param>
            <param name="rate">The sampling rate, in samples per second.</param>
            <param name="channels">The number of sound channels.</param>
            <remarks>
            For a description of the sampleData format, see the remarks section of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> class.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfSound.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeStream)">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> and initialize it with specified stream
            </summary>
            <param name="stream">The dictionary or indirect dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfSound.FromWave(System.Byte[])">
            <summary>
            Creates a new instance of <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/> class from a waveform sound specified either by a byte array.
            </summary>
            <param name="waveData">A byte array containing a waveform sound.</param>
            <returns>New instance of PdfSound class.</returns>
            <remarks>Only WAV files in PCM format are supported.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Wrappers.PdfSound.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.Wrappers.PdfSound"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment"/> event. This event called by SDK to report some downloading hints for download manager.
            </summary>
            <remarks>The position and size of section may be not accurate, part of the section might be already available.
            The download manager must deal with that to maximize download efficiency.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.SegmentOffset">
            <summary>
            Gets the offset of the hint reported to be downloaded.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.SegmentSize">
            <summary>
            Gets the size of the hint reported to be downloaded.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs"/> object
            </summary>
            <param name="segmentOffset">The offset of the hint reported to be downloaded.</param>
            <param name="segmentSize">The size of the hint reported to be downloaded.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs">
            <summary>
            Represents the class that contain event data for display alert window from SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.Text">
            <summary>
            Gets displayed text.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.Title">
            <summary>
            Gets dispayed title.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.ButtonType">
            <summary>
            Gets button type for displayed window
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.IconType">
            <summary>
            Gets icon type for displayed window
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.DialogResult">
            <summary>
            Sets the button type that the user clicked in the alert window
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AppAlertEventEventArgs.#ctor(System.String,System.String,Patagames.Pdf.Enums.ButtonTypes,Patagames.Pdf.Enums.IconTypes)">
            <summary>
            Construct AppAlertEventArgs object.
            </summary>
            <param name="Text">A string containing the message to be displayed.</param>
            <param name="Title">The title of the dialog.</param>
            <param name="ButtonType">The stype of button group. 0-OK(default); 1-OK,Cancel; 2-Yes,NO; 3-Yes, NO, Cancel.</param>
            <param name="IconType">The icon type</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs">
            <summary>
            Represents the class that contain event data for display response window from SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Question">
            <summary>
            The question to be posed to the user.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Title">
            <summary>
            The title of the dialog box.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Default">
            <summary>
            A default value for the answer to the question. If not specified, no default value is presented.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.cLabel">
            <summary>
            A short string to appear in front of and on the same line as the edit text field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.IsPassword">
            <summary>
            If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.UserResponse">
            <summary>
            To receive the user's response.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Construct AppAlertEventArgs object.
            </summary>
            <param name="Question">The question to be posed to the user.</param>
            <param name="Title">The title of the dialog box.</param>
            <param name="Default">A default value for the answer to the question. If not specified, no default value is presented.</param>
            <param name="cLabel">A short string to appear in front of and on the same line as the edit text field.</param>
            <param name="IsPassword">If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.BrowseFileEventArgs">
            <summary>
            Represents the class that contain event data for display File Browse Dialog from SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.BrowseFileEventArgs.FilePath">
            <summary>
            The application must set this property to a user-selected file
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfCustomLoader.LoadBlock"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.UserData">
            <summary>
            Gets custom user data
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.Position">
            <summary>
            Gets position is specified by byte offset from beginning of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.Buffer">
            <summary>
            Gets buffer for loaded data allocated inside Pdfium SDK.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.ReturnValue">
            <summary>
            Should be true if successful, false for error.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.#ctor(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Construct CustomLoadEventArgs object
            </summary>
            <param name="userData">Custom user data</param>
            <param name="position">Position is specified by byte offset from beginning of the file.</param>
            <param name="buffer">Buffer for loaded data allocated inside Pdfium SDK.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs">
            <summary>
            Represents the class that contain event data for DocumentClosing event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs.Cancel">
            <summary>
            Gets or sets the value indicating that document should not be closed;
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs.#ctor">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.DocumentClosingEventArgs"/> object
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs">
            <summary>
            Represents the class that contain event data for Goto action
            </summary>
            <remarks>
            <para>Application must changes the view to a specified destination.</para>
            <para>See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</para></remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.PageIndex">
            <summary>
            The index of the PDF page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.Zoom">
            <summary>
            The zoom mode for viewing page.See ZoomTypes.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.Positions">
            <summary>
            The float array which carries the position info
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.#ctor(System.Int32,Patagames.Pdf.Enums.ZoomTypes,System.Single[])">
            <summary>
            Construct DoGotoActionEventArgs object.
            </summary>
            <param name="PageIndex">The index of the PDF page.</param>
            <param name="Zoom">The zoom mode for viewing page.See ZoomTypes.</param>
            <param name="Positions">The float array which carries the position info</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.EventArgs`1">
            <summary>
            Represents the class that contain event data, and provides a value to use for various events.
            </summary>
            <typeparam name="T">The type of the property of the class.</typeparam>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.EventArgs`1.Value">
            <summary>
            Gets or sets a value, which depend on the type of event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.EventArgs`1.#ctor(`0)">
            <summary>
            Construct EventArgs object
            </summary>
            <param name="value">The value with which object will be initialized</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.FillFormNotifyAfterEventArgs">
            <summary>
            Represents the class that contain event data for form notifications
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FillFormNotifyAfterEventArgs.Field">
            <summary>
            Gets <see cref="T:Patagames.Pdf.Net.PdfField"/> that fires the event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.FillFormNotifyAfterEventArgs.#ctor(Patagames.Pdf.Net.PdfField)">
            <summary>
            Construct FillFormNotifyAfterEventArgs object.
            </summary>
            <param name="Field">A PDF form</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.FillFormNotifyBeforeEventArgs">
            <summary>
            Represents the class that contain event data for form notifications
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FillFormNotifyBeforeEventArgs.Field">
            <summary>
            Gets <see cref="T:Patagames.Pdf.Net.PdfField"/> that fires the event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FillFormNotifyBeforeEventArgs.Value">
            <summary>
            Gets field value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FillFormNotifyBeforeEventArgs.IsCancel">
            <summary>
            Gets or sets a flag indicating whether the action should be canceled
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.FillFormNotifyBeforeEventArgs.#ctor(Patagames.Pdf.Net.PdfField,System.String)">
            <summary>
            Construct FillFormNotifyBeforeEventArgs object.
            </summary>
            <param name="Field">A PDF form</param>
            <param name="Value">Field's value</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.FocusChanged"/> event
            </summary>
            <remarks>Currently,only support text field and combobox field.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.Value">
            <summary>
            The string value of the form field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.IsFocused">
            <summary>
            True if the form field is getting a focus, False for losing a focus.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Construct FocusChangedEventArgs object
            </summary>
            <param name="value">The string value of the form field.</param>
            <param name="isFocused">True if the form field is getting a focus, False for losing a focus.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.FoundTextAddedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfSearch.FoundTextAdded"/> event. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.EventArguments.FoundTextAddedEventArgs.FoundText">
            <summary>
            Gets found text which was added into search result.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.FoundTextAddedEventArgs.#ctor(Patagames.Pdf.Net.PdfSearch.FoundText)">
            <summary>
            Initialize the new instance of PdfSearchFoundTextAddedEventArgs class
            </summary>
            <param name="foundText">Found text structure</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.InterFormNotifyBeforeEventArgs">
            <summary>
            Represents the class that contain event data for form notifications
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.InterFormNotifyBeforeEventArgs.IsCancel">
            <summary>
            Gets or sets a flag indicating whether the action should be canceled
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs">
            <summary>
            Represents the class that contain event data for invalidate the client area within the specified rectangle.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.Page">
            <summary>
            PdfPage object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.Rect">
            <summary>
            Rectangle to invalidate
            </summary>
            <remarks>All positions are measured in PDF "user space". Implementation should call <see cref="O:Patagames.Pdf.Net.PdfPage.Render"/> method for repainting a specified page area.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_RECTF)">
            <summary>
            Construct InvalidatePageEventArgs object
            </summary>
            <param name="page">PdfPage object</param>
            <param name="rect">Rectangle to invalidate</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.IsSegmentAvailable"/> event. This event called by SDK to check whether the data section is ready.
            </summary>
            <remarks>Report whether the specified data section is available. A section is available only if all bytes in the section is available.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.SegmentOffset">
            <summary>
            The offset of the data section in the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.SegmentSize">
            <summary>
            The size of the data section
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.IsSegmentAvailable">
            <summary>
            True means the specified data section is available.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs"/> object
            </summary>
            <param name="segmentOffset">The offset of the data section in the file.</param>
            <param name="segmentSize">The size of the data section</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.LocalTimeEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.LocalTime"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.LocalTimeEventArgs.Time">
            <summary>
            Application should sets current time to this property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageInserted"/> and
            <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageDeleted"/> events.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs.Index">
            <summary>
            Gets the index of the page which was added or deleted.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs"/> object
            </summary>
            <param name="index">Zero-based index of the page which was added or deleted.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PdfAfterLinkClickedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.Controls.WinForms.PdfViewer.AfterLinkClicked"/> event. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfAfterLinkClickedEventArgs.WebLink">
            <summary>
            Gets WebLink object if it was clicked, null otherwise
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfAfterLinkClickedEventArgs.Link">
            <summary>
            Gets PdfLink object if it was clicked, null otherwise
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PdfAfterLinkClickedEventArgs.#ctor(Patagames.Pdf.Net.PdfWebLink,Patagames.Pdf.Net.PdfLink)">
            <summary>
            Construct new PdfAfterLinkClickedEventArgs object
            </summary>
            <param name="WebLink">WebLink object that was clicked.</param>
            <param name="Link">PdfLink object that was clicked.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.Controls.WinForms.PdfViewer.BeforeLinkClicked"/> event. 
            </summary>
            <remarks>In this event handler, you can cancel the link action.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs.WebLink">
            <summary>
            Gets WebLink object if it was clicked, null otherwise
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs.Link">
            <summary>
            Gets PdfLink object if it was clicked, null otherwise
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs.Cancel">
            <summary>
            Determines whether the default action is canceled. True to cancel, false otherwise.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PdfBeforeLinkClickedEventArgs.#ctor(Patagames.Pdf.Net.PdfWebLink,Patagames.Pdf.Net.PdfLink)">
            <summary>
            Construct new PdfBeforeLinkClickedEventArgs object
            </summary>
            <param name="WebLink">WebLink object that was clicked.</param>
            <param name="Link">PdfLink object that was clicked.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PdfPageEventArgs">
            <summary>
            Represents the class that contain PdfPage as event data.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PdfPageEventArgs.Page">
            <summary>
            The page
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PdfPageEventArgs.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.PdfPageEventArgs"/> object
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PrintEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.Print"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bUI">
            <summary>
            If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.nStart">
            <summary>
            A 0-based index that defines the start of an inclusive range of pages.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.nEnd">
            <summary>
            A 0-based index that defines the end of an inclusive page range.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bSilent">
            <summary>
            If true, suppresses the cancel dialog box while the document is printing. The default is false.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bShrinkToFit">
            <summary>
            If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bPrintAsImage">
            <summary>
            If true, print pages as an image.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bReverse">
            <summary>
            If true, print from nEnd to nStart.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bAnnotations">
            <summary>
            If true (the default), annotations are printed.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PrintEventArgs.#ctor(System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Construct PrintEventArgs object
            </summary>
            <param name="bUI">If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.</param>
            <param name="nStart">A 0-based index that defines the start of an inclusive range of pages.</param>
            <param name="nEnd">A 0-based index that defines the end of an inclusive page range.</param>
            <param name="bSilent">If true, suppresses the cancel dialog box while the document is printing. The default is false.</param>
            <param name="bShrinkToFit">If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.</param>
            <param name="bPrintAsImage">If true, print pages as an image.</param>
            <param name="bReverse">If true, print from nEnd to nStart.</param>
            <param name="bAnnotations">If true (the default), annotations are printed.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfPage.ProgressiveRender"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.UserData">
            <summary>
            A user defined data, used by user's application. Can be NULL.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.NeedPause">
            <summary>
            Application must sets this property to true for pause now or false for continue.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.#ctor(System.Byte[])">
            <summary>
            Construct ProgressiveRenderEventArgs object
            </summary>
            <param name="userData">A user defined data, used by user's application. Can be NULL.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.ReadSegment"/> event. This event called by SDK to read some data from custom source.
            </summary>
            <remarks>SegmentOffset is specified by byte offset from beginning of the file. It may be possible for SDK to call this event multiple times for same position.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.UserData">
            <summary>
            Custom user data
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.SegmentOffset">
            <summary>
            Position is specified by byte offset from beginning of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.DstBuffer">
            <summary>
            Buffer for data allocated inside SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.SegmentSize">
            <summary>
            Buffer size
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.IsSuccess">
            <summary>
            Should be true if successful, false for error.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.#ctor(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs"/> object.
            </summary>
            <param name="userData">Custom user data</param>
            <param name="segmentOffset">Position is specified by byte offset from beginning of the file.</param>
            <param name="dstBuffer">Buffer for data allocated inside SDK</param>
            <param name="segmentSize">Buffer size</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SendMailEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SendMail"/> event
            </summary>
            <remarks>Application should mails the data buffer as an attachment to all recipients, with or without user interaction. </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Data">
            <summary>
            Pointer to the data buffer to be sent.Can be NULL.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.IsGUI">
            <summary>
            If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.To">
            <summary>
            A semicolon-delimited list of recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Subject">
            <summary>
            The subject of the message. The length limit is 64 KB.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Cc">
            <summary>
            A semicolon-delimited list of CC recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Bcc">
            <summary>
            A semicolon-delimited list of BCC recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Msg">
            <summary>
            The content of the message. The length limit is 64 KB.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Boolean)">
            <summary>
            Construct SendMailEventArgs object
            </summary>
            <param name="To">A semicolon-delimited list of recipients for the message.</param>
            <param name="Cc">A semicolon-delimited list of CC recipients for the message.</param>
            <param name="Bcc">A semicolon-delimited list of BCC recipients for the message.</param>
            <param name="Subject">Subject</param>
            <param name="Msg">The content of the message. The length limit is 64 KB.</param>
            <param name="Data">Pointer to the data buffer to be sent. Can be NULL.</param>
            <param name="IsGUI">If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SetCursor"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs.Cursor">
            <summary>
            Gets the cursor type
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs.#ctor(Patagames.Pdf.Enums.CursorTypes)">
            <summary>
            Construct SetCursorEventArgs object
            </summary>
            <param name="cursor">The cursor type</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SubmitForm"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.FormData">
            <summary>
            Gets the form data to be sent.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.Url">
            <summary>
            The URL to send to.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.#ctor(System.Byte[],System.String)">
            <summary>
            Construct SubmitFormEventArgs object
            </summary>
            <param name="formData">The form data to be sent.</param>
            <param name="url">The URL to send to.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs">
            <summary>
            Provides data for the <see cref="E:Patagames.Pdf.Net.PdfDocument.WriteBlock"/> event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.Buffer">
            <summary>
            Pointer to a buffer to output
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.ReturnValue">
            <summary>
            Should be True if successful, False for error
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.#ctor(System.Byte[]@)">
            <summary>
            Initialize a ne instance of WriteFileBlockEventArgs class
            </summary>
            <param name="buffer">Pointer to a buffer to output</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.BadFormatException">
            <summary>
            The exception that is thrown when the PDF file is invalid.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.BadFormatException.#ctor">
            <summary>
            Initializes a new instance of the BadFormatException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.FatalErrorException">
            <summary>
            Represents a fatal runtime error that occurs inside pdfium engine.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.FatalErrorException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">
            <summary>
            The exception that is thrown when an attempt to access a file that does not exist on disk fails.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the PdfFileNotFoundException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.FontNotFoundException">
            <summary>
             The exception that is thrown when the requested font was not found
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.FontNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the FontNotFoundException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.ImageObjectIsEmptyException">
            <summary>
            The exception that is thrown when the PdfImageObject don't contain PdfBitmap
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.ImageObjectIsEmptyException.#ctor">
            <summary>
            Initializes a new instance of the ImageObjectIsEmptyException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.InvalidLicenseKeyException">
            <summary>
            The exception that is thrown when the key provided to a initialization method is not valid.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.InvalidLicenseKeyException.#ctor">
            <summary>
            Initializes a new instance of the InvalidLicenseKeyException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.EntryNotFoundException">
            <summary>
             The exception that is thrown when the dictionary's entry was not found
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.EntryNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FontNotFoundException class.
            </summary>
            <param name="entryName">Entry name.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PdfParserException">
            <summary>
            This exception is commonly raised when the annotation cannot be parsed.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfParserException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidAnnotationException class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">
            <summary>
            This exception is commonly raised when the password for a PDF file does not match.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.InvalidPasswordException.#ctor">
            <summary>
            Initializes a new instance of the InvalidPasswordException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.LicenseKeyIsExpiredException">
            <summary>
            The exception that is thrown when the key provided to a initialization method is expired.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.LicenseKeyIsExpiredException.#ctor">
            <summary>
            Initializes a new instance of the LicenseKeyIsExpiredException class.
            </summary>
            <remarks>
            <para>This usually indicates that the trial key has expired. The regular license key never expires.</para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.LicenseKeyIsOutOfDateException">
            <summary>
            The exception that is thrown when the key provided to a initialization method is out of date.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.LicenseKeyIsOutOfDateException.#ctor">
            <summary>
            Initializes a new instance of the LicenseKeyIsOutOfDateException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.MemoryLeakException">
            <summary>
            The exception that is thrown when the undisposed instance of class was found.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.MemoryLeakException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MemoryLeakException class.
            </summary>
            <param name="className">A class name there memory leak was detected.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">
            <summary>
             The exception that is thrown only in trial mode
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.NoLicenseException.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NoLicenseException class.
            </summary>
            <param name="errorCode">Error code.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.NoLicenseException.#ctor(System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the NoLicenseException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="errorCode">Error code.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.NoLicenseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NoLicenseException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.NotAvailableException">
            <summary>
            The exception that is thrown when the element (document, page, forms and etc) is not yet available.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.NotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Exceptions.NotAvailableException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PageNotFoundException">
            <summary>
             The exception that is thrown when the requested page was not found in PDF document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PageNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the PageNotFoundException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PdfiumException">
            <summary>
            Represents errors that occur inside Pdfium SDK.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Exceptions.PdfiumException.ErrorCode">
            <summary>
            Gets a code that provide additional information about the exception.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfiumException.#ctor(System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the PdfiumException class.
            </summary>
            <param name="errorCode">Error code.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfiumException.#ctor(System.UInt32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PdfiumException class.
            </summary>
            <param name="errorCode">Error code</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfiumException.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the PdfiumException class.
            </summary>
            <param name="errorCode">Error code.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.RequiredDataIsAbsentException">
            <summary>
            The exception that is thrown when the required data is absent.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.RequiredDataIsAbsentException.#ctor">
            <summary>
            Initializes a new instance of the RequiredDataIsAbsentException class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.RequiredDataIsAbsentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RequiredDataIsAbsentException class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnexpectedTypeException">
            <summary>
            This exception is commonly raised when the annotation cannot be parsed.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnexpectedTypeException.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the InvalidAnnotationException class.
            </summary>
            <param name="expected">Expected type.</param>
            <param name="actual">Actual type.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">
            <summary>
            Represents a fatal runtime error that occurs inside Pdfium SDK.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnknownErrorException.#ctor">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnknownErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnsupportedImageFormatException">
            <summary>
            The exception that is thrown when the PDFBitmap  can't be converted into .Net GDI+ Image
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnsupportedImageFormatException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedImageFormatException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">
            <summary>
            Unsupported security scheme exception.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException.#ctor">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.FdfDocument">
            <summary>
            Represents a FDF (Forms Data Format) document. FDF is a file format for representing form data and annotations that are contained in a PDF form.
            </summary>
            <threadsafety>Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.</threadsafety>
        </member>
        <member name="P:Patagames.Pdf.Net.FdfDocument.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.FdfDocument.Handle">
            <summary>
            Gets the Pdfium SDK handle that the FDF document is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.FdfDocument.Content">
            <summary>
            Gets FDF content as a string
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.FdfDocument.PathToPdf">
            <summary>
            Gets a path to the PDF file spicified inside FDF document
            </summary>
            <returns>The source file or target file: the PDF document file that this FDF file was exported from or is intended to be imported into.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.FdfDocument.Root">
            <summary>
            Gets the root catalog of the FDF document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Dispose">
            <summary>
            Releases all resources used by the PdfDocument.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.FromHandle(System.IntPtr)">
            <summary>
            Crreate an instance of <see cref="T:Patagames.Pdf.Net.FdfDocument"/> class from handle.
            </summary>
            <param name="Handle">Handle to Fdf Document</param>
            <returns>Instance of FDFDocument class</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Load(System.String)">
            <summary>
            Loads a FDF document from a file.
            </summary>
            <param name="path">Path to the FDF file (including extension)</param>
            <returns>Instance of FDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in Pdfium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Load(System.Byte[])">
            <summary>
            Loads a fDF document from a memory.
            </summary>
            <param name="content">Pointer to a buffer containing the FDF document</param>
            <returns>Instance of FDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in Pdfium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.FdfDocument.Load(System.IO.Stream,System.Int32)">
            <summary>
            Loads the FDF document from the specified stream.
            </summary>
            <param name="stream">The stream containing the FDF document to load.</param>
            <param name="length">The length to read from stream. If not specified then entire stream will be readed.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfControl">
            <summary>
            Encapsulates a widget annotations to represent the appearance of fields and to manage user interactions. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Handle">
            <summary>
            Gets the Pdfium SDK handle that the control is bound to.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Type">
            <summary>
            Gets type of a field associated with specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Field">
            <summary>
            Gets a field associated with specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BoundRect">
            <summary>
            Get bounding rectanghle of specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.ExportValue">
            <summary>
            Get a string describing the check status of the Checkbox or Radiobutton.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.IsChecked">
            <summary>
            Gets whether the Checkbox or Radiobutton is checked.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.IsDefaultChecked">
            <summary>
            Get a default state of the checkbox or Radiobutton.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.HiglightingMode">
            <summary>
            Get the highlighting mode of control
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Rotation">
            <summary>
             Get the number of degrees by which the control is rotated counterclockwise relative to the page.
            </summary>
            <remarks>The value must be a multiple of 90.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BorderColorType">
            <summary>
            Get the color type of control's border
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BorderColor">
            <summary>
            Get the color of control's border in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.OriginalBorderColor">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BackgroundColorType">
            <summary>
            Get the color type of control's background in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BackgroundColor">
            <summary>
            Get the color of control's background in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.OriginalBackgroundColor">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.NormalCaption">
            <summary>
            The controls normal caption, displayed when it is not interacting with the user.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.RolloverCaption">
            <summary>
            The controls rollover caption, displayed when the user rolls the cursor into its active area without pressing the mouse button. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.DownCaption">
            <summary>
            The controls alternate (down) caption, displayed when the mouse button is pressed within its active area. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.TextPosition">
            <summary>
            Get a code indicating where to position the text of the widget annotation’s caption relative to its icon
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Aligment">
            <summary>
            Get a code specifying the form of justification to be used in displaying the text 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Dictionary">
            <summary>
            Gets the Widget Annotation's dictionary
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControl.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfControl class.
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="handle">Handle ti the control wich will be assigned</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControl.HasMKEntry(System.String)">
            <summary>
             Gets whether the control has MK entry.
            </summary>
            <param name="entry">MK entry</param>
            <returns>True if entry exists, False otherwise</returns>
            <remarks>
            <para>The MK entry can be used to provide an appearance characteristics dictionary containing additional information for constructing the annotation’s appearance
            stream.</para>
            <para>
            MK entry can be one of the following:  "R", "BC", "BG", "CA", "RC", "AC", "I", "RI", "IX", "IF", "TP".
            </para>
            <para>
            See detils in a table 8.40 at <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a>
            </para>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfControlCollections">
            <summary>
            Represents a collection of widget annotations
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControlCollections.Count">
            <summary>
            Gets total number of controls in a collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms)">
            <summary>
            Initializes a new instance of the control collections for specified form object
            </summary>
            <param name="forms">Interactive forms</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,Patagames.Pdf.Net.PdfField)">
            <summary>
            Initializes a new instance of the control collections for specified field
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="field">PDF Field object</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the control collections for specified page
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="page">PDF Page object</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.GetControlByDict(Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Search collection for the widget with the specified dictionary.
            </summary>
            <param name="dict">Widget annotaion's dictionary</param>
            <returns>Found widget or null if nothing found.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfField">
            <summary>
            Represents a field for gathering information interactively from the user.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.IsNotify">
            <summary>
            Gets or sets form's notification state
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Handle">
            <summary>
            Gets the Pdfium SDK handle that the field is bound to.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Controls">
            <summary>
            Gets collection of controls assigned to this field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.FullName">
            <summary>
            Gets field full name
            </summary>
            <remarks>
            <para> 
            The fully qualified field name is not explicitly defined but is constructed from the partial field names of the field and all of its
            ancestors. For a field with no parent, the partial and fully qualified names are the same. For a field that is the child of another field, the fully qualified name is
            formed by appending the child field’s partial name to the parent’s fully qualified name, separated by a period (.): parent’s_full_name.child’s_partial_name
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.AlternateName">
            <summary>
            Gets alternate field name.
            </summary>
            <remarks> An alternate field name to be used in place of the actual field name wherever the field must be identified in the user 
            interface (such as in error or status messages referring to the field). This text is also useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.MappingName">
            <summary>
            Gets mapping field name.
            </summary>
            <remarks>The mapping name to be used when exporting interactive form field data from the document. </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultStyle">
            <summary>
            Gets a default style string
            </summary>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.RichText">
            <summary>
            Gets a rich text string
            </summary>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Value">
            <summary>
            Gets or Sets field's value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultValue">
            <summary>
            Gets field's default value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.MaxLen">
            <summary>
            Gets the maximum length of the field’s text, in characters. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Type">
            <summary>
            Gets the type of field
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.FieldType">
            <summary>
             Gets the type of field
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Flags">
            <summary>
            Gets field flags
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.FlagsEx">
            <summary>
            Gets extended field's flags
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Options">
            <summary>
            Gets collection of options to be presented to the user in choise field. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.TopVisibleIndex">
            <summary>
            Gets the first visible index for scrollable list boxes
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Dictionary">
            <summary>
            Gets or sets the field's dictionary
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfField class.
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="handle">Handle ti the field wich will be assigned</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.ResetField">
            <summary>
            Resets field to it default values
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.GetControlIndex(Patagames.Pdf.Net.PdfControl)">
            <summary>
            Gets control's index in a field
            </summary>
            <param name="control">control object</param>
            <returns>Zero based index of a control in Controls collections. -1 if nothing found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.CheckControl(System.Int32,System.Boolean)">
            <summary>
            Toggle Checkbox or Radiobutton
            </summary>
            <param name="index">Zerobased index of field's control</param>
            <param name="check">True for check, False otherwise</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.SelectedItems">
            <summary>
            Gets selected items count
            </summary>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultSelectedItem">
            <summary>
            Get the Combobox's or Listbox's index of item selected by default.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.ClearSelection">
            <summary>
            Clear field's selection
            </summary>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.IsItemSelected(System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.IsItemDefaultSelected(System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected by Default
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Select or deselect Combobox or Listbox item
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <param name="select">True for select, False otherwise</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldCollections">
            <summary>
            Represents a collection of fields in document
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldCollections.Count">
            <summary>
            Gets total number of fields in a PDF document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms)">
            <summary>
            Initializes a new instance of the field collections for specified form object
            </summary>
            <param name="forms">Interactive forms</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldCollections.GetFieldByDict(Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Search collection for the field with the specified dictionary.
            </summary>
            <param name="dict">Field's dictionary</param>
            <returns>Found field or null if nothing found.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldOption">
            <summary>
            Represents a field's option. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOption.Label">
            <summary>
            Gets option's label 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOption.Value">
            <summary>
            Gets option's value
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOption.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PdfFieldOption class.
            </summary>
            <param name="label">Option's label </param>
            <param name="value">Option's value</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldOptionCollections">
            <summary>
            Represents a collection of options to be presented to the user in choise field. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOptionCollections.Count">
            <summary>
            Gets total number of options in a field
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.#ctor(Patagames.Pdf.Net.PdfField)">
            <summary>
            Initializes a new instance of the field collections for specified form field
            </summary>
            <param name="field">Field object</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOptionCollections.SelectedIndicies">
            <summary>
            Gets the indexes of the selected options in the field.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.IsSelected(System.Int32)">
            <summary>
            Determines that the option's item specified by index is selected
            </summary>
            <param name="index">Zero based index of item in option</param>
            <returns>True if selected, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.Select(System.Int32,System.Boolean)">
            <summary>
            Select or deselect option's item specified by index
            </summary>
            <param name="index">Zero based index of item in option</param>
            <param name="select">True for select, False otherwise</param>
            <returns>True for success, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.ClearSelected">
            <summary>
            Deselect field's options
            </summary>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfInteractiveForms">
            <summary>
            Encapsulates a fields for gathering information interactively from the user.
            </summary>
            <remarks>
            <para>
            A PDF document may contain any number of fields appearing on any combination of
            pages, all of which make up a single, global interactive form spanning the entire
            document.
            </para>
            <para>
            Each field in a document’s interactive form is defined by a <see cref="P:Patagames.Pdf.Net.PdfInteractiveForms.Fields"/> property. 
            A field may also include one or more widget annotations that define its appearance on the page. 
            </para>
            <note type="note">
            Interactive forms should not be confused with form XObjects.
            Despite the similarity of names, the two are different, unrelated types of objects. 
            </note>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.IsNotify">
            <summary>
            Gets or sets form's notification state
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Handle">
            <summary>
            Gets the Pdfium SDK handle that the interactive forms is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Fields">
            <summary>
            Gets collection of fields for gathering information interactively from the user. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Controls">
            <summary>
            Gets collection of controls.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.HasXFAForm">
            <summary>
            Determines that the document contains XFA Forms
            </summary>
            <remarks>
            PDF 1.5 introduces support for interactive forms based on the Adobe XML Forms Architecture (XFA). The XFA entry in the interactive forms dictionary specifies an XFA resource, which is an XML stream that contains the
            form information. The format of an XFA resource is described in the XML Data Package (XDP) Specification
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.DefaultFont">
            <summary>
            Gets the default font for Acro forms
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Dictionary">
            <summary>
            Gets AcroForm's dictionary
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.#ctor(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Initializes a new instance of the PdfInteractiveForms class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.IsValidField(Patagames.Pdf.Net.PdfField)">
            <summary>
            Determines that specified Field is a valid Field from the hierarchy of documents fields
            </summary>
            <param name="field">Field objects.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.IsValidControl(Patagames.Pdf.Net.PdfControl)">
            <summary>
            Determines that specified Control is a valid Control
            </summary>
            <param name="control">Control object.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.GetPageControls(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Gets collection of controls for specified page.
            </summary>
            <param name="page">PDF page object.</param>
            <returns>Collection of controls for specified page .</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm">
            <summary>
            Resets forms to their default values.
            </summary>
            <returns>True for successfull, false if action was canceled.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.FixPageFields(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Fix page fields
            </summary>
            <param name="page">PDF page object.</param>
            <remarks>
            This method method reload all widget annotations on a page. You may need this if  you are changing the widget annotation through its dictionary.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.ExportToFdf(System.String,System.Boolean)">
            <summary>
            Export fields into Forms Data Format (FDF) document
            </summary>
            <param name="pathToPdf">Path to the source file: the PDF document file that this FDF file was exported from.</param>
            <param name="isSimpleSpec">True for simple file specification, false otherwise</param>
            <returns>New FDF document</returns>
            <remarks>
            A PDF file can refer to the contents of another file by using a file specification (PDF 1.1), which can take either of two forms:
            <list type="bullet">
            <item>
            A simple file specification gives just the name of the target file in a standard format, independent of the naming conventions of any particular file system. It
            can take the form of either a string or a dictionary
            </item>
            <item>
            A full file specification includes information related to one or more specific file systems. It can only be represented as a dictionary. 
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)">
            <summary>
            Import fields from Forms Data Format (FDF) document
            </summary>
            <param name="fdfDocument">A FDF Doument to import from.</param>
            <returns>true for successful, false if action was canceled</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.GetControlByDict(Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Gets the widget with the specified dictionary.
            </summary>
            <param name="dict">Widget annotaion's dictionary</param>
            <returns>Found widget or null if nothing found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.GetFieldByDict(Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Gets the Field with the specified dictionary.
            </summary>
            <param name="dict">Field's dictionary</param>
            <returns>Found field or null if nothing found.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PathPointsCollection">
            <summary>
            Represent the collection of the path's points.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.CorrectionMatrix">
            <summary>
            The matrix applied to this path.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the object has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.Handle">
            <summary>
            Gets handle to PDF path object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.IsRectangle">
            <summary>
            Gets a value indicating whether the path is rectangle.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.BoundingBox">
            <summary>
            Gets a rectangle that bounds this Path.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.#ctor(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.PathPointsCollection"/> class.
            </summary>
            <param name="handle">Handle to PDF path object</param>
            <param name="correctionMatrix">A matrix which will be applied to path points</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.PathPointsCollection"/> class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Dispose">
            <summary>
            Releases all resources used by the Path.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Path.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.ToArray">
            <summary>
            Copies the points of the path to a new array.
            </summary>
            <returns>An array containing copies of the points of the path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.GetBoundingBox(System.Single,System.Single)">
            <summary>
            Get a rectangle that bounds this Path.
            </summary>
            <param name="lineWidth">Line width.</param>
            <param name="miterLimit">The maximum length of mitered line joins for stroked paths.</param>
            <returns>A rectangle that bounds this Path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.AppendPath(Patagames.Pdf.Net.PathPointsCollection)">
            <summary>
            Appends the specified Path to this path.
            </summary>
            <param name="addingPath">The Path to add.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.AppendPath(Patagames.Pdf.Net.PathPointsCollection,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Appends the specified Path to this path.
            </summary>
            <param name="addingPath">The Path to add.</param>
            <param name="matrix">The transformation matrix. The matrix will be applied to addingPath.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.AppendRect(Patagames.Pdf.FS_RECTF)">
            <summary>
            Adds a rectangle to this path.
            </summary>
            <param name="rect">A <see cref="T:Patagames.Pdf.FS_RECTF"/> that represents the rectangle to add.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.CopyPath(Patagames.Pdf.Net.PathPointsCollection)">
            <summary>
            Copy points from source Path to this Path.
            </summary>
            <param name="sourcePath">The source Path.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Transform(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) the path.
            </summary>
            <param name="matrix">Transformation matrix</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PathPointsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Contains(Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.IndexOf(Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.CopyTo(Patagames.Pdf.FS_PATHPOINTF[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Remove(Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Add(Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>  to add to the collection</param>
            <remarks>
            To append a cubic Bézier curve to the current path you should add three point with <see cref="F:Patagames.Pdf.Enums.PathPointFlags.BezierTo"/> flag. 
            The curve extends from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points. 
            The new current point will be (x3, y3).
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PathPointsCollection.Insert(System.Int32,Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> to insert into the collection.</param>
            <remarks>
            To append a cubic Bézier curve to the current path you should add three point with <see cref="F:Patagames.Pdf.Enums.PathPointFlags.BezierTo"/> flag. 
            The curve extends from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points. 
            The new current point will be (x3, y3).
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFormObject">
            <summary>
            Represents a form object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.PageObjects">
            <summary>
            Gets the collection of PDF page objects found in the current PdfFormObject.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.BackgroundAlphaNeeded">
            <summary>
            Check something
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.IsParsed">
            <summary>
            Check that whether the current PdfFormObject is parsed.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.Transparency">
            <summary>
            Gets transparency type for current PdfPageObject
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFormObject.Matrix">
            <summary>
            Gets or sets the matrix of a form object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.Create(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Create new instance of PdfFormObject class
            </summary>
            <param name="page">The PDF page in which the form object should be placed.</param>
            <returns>New instance of <see cref="T:Patagames.Pdf.Net.PdfFormObject"/></returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.Dispose">
            <summary>
            Releases all resources used by the PdfFormObject.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfFormObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.CalcBoundingBox">
            <summary>
            Calculate bounding box
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.TransformPageObjects(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) <see cref="P:Patagames.Pdf.Net.PdfFormObject.PageObjects"/> collection.
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.TransformPageObjects(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform <see cref="P:Patagames.Pdf.Net.PdfFormObject.PageObjects"/> collection with a specified matrix
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfImageObject">
            <summary>
            Represents a image object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfImageObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfImageObject.Bitmap">
            <summary>
            Get the copy of bitmap from an image object / Set the bitmap to an image object. You do not need to call Dispose methof for getted PdfBitmap.
            </summary>
            <value>PdfBitmap object or null if this ImageObject does not contain any bitmaps</value>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfImageObject.Matrix">
            <summary>
            Gets or sets transformation matrix of the image object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfImageObject.Stream">
            <summary>
            Get the stream contains image data.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Create(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Create a new instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class.
            </summary>
            <param name="document">Instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Create(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.Net.PdfBitmap,System.Single,System.Single)">
            <summary>
            Create a new instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class and initialize it with the specified bitmap and position.
            </summary>
            <param name="document">Instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class</param>
            <param name="bitmap">The <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> to initialize for.</param>
            <param name="x">The x coordinate of the image object in standard user space</param>
            <param name="y">The x coordinate of the image object in standard user space</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class.</returns>
            <remarks>PdfBitmap may be disposed after passing to this methos</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Dispose">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.CalcBoundingBox">
            <summary>
            Calculate bounding box
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.SetMatrix(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This property is obsolete. Please use <see cref="P:Patagames.Pdf.Net.PdfImageObject.Matrix"/> property instead.
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.LoadJpegFile(System.String)">
            <summary>
            Load Image from a JPEG image file and then set it to an image object.
            </summary>
            <param name="filePath">Path to the jpeg file</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.LoadJpegFile(System.Byte[])">
            <summary>
            Load Image from a byte array containing a JPEG image and then set it to an image object.
            </summary>
            <param name="data">An array containing a jpeg image.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.SetBitmap(Patagames.Pdf.Net.PdfBitmap)">
            <summary>
            Set the bitmap to an image object.
            </summary>
            <param name="bitmap">The PdfBitmap which you want to set it to the image object.</param>
            <returns>TRUE if successful, FALSE otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.GetBitmap">
            <summary>
            Get the copy of bitmap from an image object.
            </summary>
            <returns>PdfBitmap object.</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the GetBitmap method.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageObject">
            <summary>
            Represents the base class for page objects that contain common data, and provides common methods.
            </summary>
            <remarks>
            This class serves as the base class for all objects on the page. 
            For example, the <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class derives from PdfPageObject. 
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfPageObject.Handle">
            <summary>
            Gets the Pdfium SDK handle that the object is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.IsTransparency">
            <summary>
            ets a value that represents that whether the specified PDF page object contains transparency.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.ObjectType">
            <summary>
            Gets page object type
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.MarkedContent">
            <summary>
            Gets the list of <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> items associated with this object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.BoundingBox">
            <summary>
            Gets page object bounding box.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.FillColor">
            <summary>
            Gets or sets the fill color of a page object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.StrokeColor">
            <summary>
            Gets or sets the stroke color of a page object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="handle">The Pdfium SDK handle that the new object will be bound to</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Create(System.IntPtr)">
            <summary>
            Identifies the type of the specified object and creates an instance of this type.
            </summary>
            <param name="handle">A handle to the page object.</param>
            <returns>The instance of a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.CreateObject(Patagames.Pdf.Enums.PageObjectTypes)">
            <summary>
            Create new page object specified by type
            </summary>
            <param name="type">ypes of page object</param>
            <returns>Handle to a page object</returns>
            <remarks>
            Currently, It can be "PDFPAGE_TEXT", "PDFPAGE_IMAGE", "PDFPAGE_PATH",
            "PDFPAGE_SHADING", "PDFPAGE_FORM"
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Transform(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Transform(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.TransformClipPath(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) the clip path of an object.
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Copy(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Copy page object information from one to another
            </summary>
            <param name="srcObj">Handle to source page object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Clone">
            <summary>
            Create a new page object based on this page object.
            </summary>
            <returns>New page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.RemoveClipPath">
            <summary>
            Remove a clip from the page object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.CopyClipPath(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Copy clip path from one page object to another
            </summary>
            <param name="srcObj">Source page object</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPathObject">
            <summary>
            Represents a path object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPathObject.Path">
            <summary>
            Get the path associated with this PathObject.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPathObject.FillType">
            <summary>
            Gets or sets the fill type of the path object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPathObject.IsStroke">
            <summary>
            Gets or sets the stroke flag.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPathObject.Matrix">
            <summary>
            Gets or sets the transformation matrix.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.Create">
            <summary>
            Create new instance of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> class
            </summary>
            <returns>New instance of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.Create(Patagames.Pdf.Enums.FillModes,System.Boolean)">
            <summary>
            Create new instance of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> class
            </summary>
            <param name="fillMode">Sets the fill type of the path object.</param>
            <param name="isStroke">Indicates that the path should be stroked.</param>
            <returns>New instance of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/>.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.CalcBoundingBox">
            <summary>
            Calculate bounding box
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.TransformPath(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) <see cref="T:Patagames.Pdf.Net.PathPointsCollection"/> collection.
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.TransformPath(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform <see cref="T:Patagames.Pdf.Net.PathPointsCollection"/> collection with a specified matrix
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfShadingObject">
            <summary>
            Represents a shading object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfShadingObject.Create">
            <summary>
            Create new instance of PdfShadingObject class
            </summary>
            <returns>New instance of PdfShadingObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfTextObject">
            <summary>
            Represents a text object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.CharSpacing">
            <summary>
            Gets or sets character spacing.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.WordSpacing">
            <summary>
            Gets or sets word spacing.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.CharsCount">
            <summary>
            Gets the number of characters from a text object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetItemInfo(System.Int32,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Gets item information
            </summary>
            <param name="index">The index of the item to get the information.</param>
            <param name="charCode">Pointer to a int value receiving the item information.</param>
            <param name="originX">Pointer to a float value receiving the physical offset from the start to the specified item by horizontal</param>
            <param name="originY">Pointer to a float value receiving the physical offset from the start to the specified item by vertical</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetCharInfo(System.Int32,System.Int32@,System.Single@)">
            <summary>
            Gets the unicode of a special character in a text object and kerning.
            </summary>
            <param name="index">The index of the character to get the unicode.</param>
            <param name="charCode">Pointer to a int value receiving the unicode value.</param>
            <param name="kerning">Pointer to a float value receiving the kerning</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetCharInfo(System.Int32,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Gets the unicode of a special character in a text object and its placement.
            </summary>
            <param name="index">The index of the character to get the unicode.</param>
            <param name="charCode">Pointer to a int value receiving the unicode value.</param>
            <param name="originX">Pointer to a float value receiving the physical offset from the start to the specified character by horizontal</param>
            <param name="originY">Pointer to a float value receiving the physical offset from the start to the specified character by vertical</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetCharWidth(System.Int32)">
            <summary>
            Gets the width of specified character
            </summary>
            <param name="charCode">Character code the width of which is necessary to obtain.</param>
            <returns>The width of character from the font of the current text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetSpaceWidth">
            <summary>
            Gets the width of space character
            </summary>
            <returns>The width of space character from the font of the current text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetCharRect(System.Int32)">
            <summary>
            Gets character bounding box
            </summary>
            <param name="index">The index of the character to get the bbox.</param>
            <returns>Character bounding box.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.GetCharRect(System.Int32,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets character bounding box
            </summary>
            <param name="index">The index of the character to get the bbox.</param>
            <param name="matrix">The matrix that should be applied to the output rectangle. Typically it's <see cref="P:Patagames.Pdf.Net.PdfTextObject.TextMatrix"/> </param>
            <returns>Character bounding box.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.CalcCharPos">
            <summary>
            Calculate the offsets to start and end of each character in text object
            </summary>
            <returns>An array of character offsets.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.RecalcPositionData">
            <summary>
            Recalculate charactes positions
            </summary>Pointer to a float values receiving the offsets to start and end of each character in text object
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.Font">
            <summary>
            Gets or sets the Font of a text object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.FontSize">
            <summary>
            Gets or sets font size.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.RenderMode">
            <summary>
            Gets or sets the text rendering mode.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.Location">
            <summary>
            Gets or sets the coordinates of the bottom-left corner of the text object relative to the down-left corner of its page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.TextMatrix">
            <summary>
            This property is obsolete. Please use <see cref="P:Patagames.Pdf.Net.PdfTextObject.Matrix"/> property instead.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.Matrix">
            <summary>
            Gets or sets transformation matrix of the text object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.TextUnicode">
            <summary>
            Gets or sets unicode string from text object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.CodePage">
            <summary>
            Gets or sets the code page identifier of the current <see cref="P:Patagames.Pdf.Net.PdfTextObject.TextAscii"/> property. If 0 then <see cref="P:Patagames.Pdf.Net.PdfCommon.DefaultAnsiEncoding"/> is used.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.TextAnsi">
            <summary>
            Gets/sets ANSI string from/to text object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextObject.TextAscii">
            <summary>
            Gets/sets ANSI string from/to text object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.Create">
            <summary>
            Create new instance of PdfTextObject class
            </summary>
            <returns>New instance of PdfTextObject</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.Create(System.String,System.Single,System.Single,Patagames.Pdf.Net.PdfFont,System.Single)">
            <summary>
            Create new instance of PdfTextObject class
            </summary>
            <param name="text">Sets unicode string to text object</param>
            <param name="x">Sets the horizontal coordinate of the bottom-left corner of the text object relative to the down-left corner of its page.</param>
            <param name="y">Sets the vertical coordinate of the bottom-left corner of the text object relative to the down-left corner of its page.</param>
            <param name="font">Sets the Font of a text object.</param>
            <param name="fontsize">Sets font size.</param>
            <returns>New instance of PdfTextObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfUnknownObject">
            <summary>
            Represents a page object with unsupported type.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfUnknownObject.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfUnknownObject class.
            </summary>
            <param name="handle">The Pdfium SDK handle that the new object will be bound to</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBitmap">
            <summary>
            Encapsulates a Device-Independent bitmap, which consists of the pixel data for a graphics image and its attributes. A Bitmap is an object used to work with images defined by pixel data.
            <para>An PdfBitmap use 1, 3 or 4 byte per pixel depended on a pixel format.</para>
            <para>The byte order is BGRx (the last byte unused if no alpha channel) or BGRA.</para>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Image">
            <summary>
            Gets the image that represents the PdfBitmap
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FromFile(System.String)">
            <summary>
            Creates an <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> from the specified file.
            </summary>
            <param name="path">A string that contains the name of the file from which to create the <see cref="T:Patagames.Pdf.Net.PdfBitmap"/>.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> this method creates.</returns>
            <exception cref="T:System.OutOfMemoryException">The file does not have a valid image format. -or- GDI+ does not support the pixel format of the file.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
            <exception cref="T:System.ArgumentException">Filename is a System.Uri.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedImageFormatException">Can't convert System.Drawing.Bitmap to PdfBitmap</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(System.Drawing.Rectangle,Patagames.Pdf.FS_COLOR)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill.</param>
            <param name="color">A <see cref="T:Patagames.Pdf.FS_COLOR"/> structure that represents the color.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Handle">
            <summary>
            Gets the Pdfium SDK handle that the bitmap is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Buffer">
            <summary>
            Gets data buffer of an PdfBitmap
            </summary>
            <returns>The pointer to the first byte of the bitmap buffer.</returns>
            <remarks>Applications can use this function to get the bitmap buffer pointer, then manipulate any color and/or alpha values for any pixels in the bitmap.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Width">
            <summary>
            Gets the number of pixels in a horizontal line of the bitmap.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Height">
            <summary>
            Gets the number of pixels in a vertical line of the bitmap.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Stride">
            <summary>
            Gets number of bytes for each scan line in the bitmap buffer
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Format">
            <summary>
            Gets bitmap format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Pitch">
            <summary>
            Gets bitmap pitch
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.PaletteSize">
            <summary>
            Gets bitmap palette size
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Palette">
            <summary>
            Gets or sets bitmap palette
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.BPP">
            <summary>
            Gets bit per pixel
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsAlphaMask">
            <summary>
            Returns true if the bitmap has alpha mask 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.HasAlpha">
            <summary>
            Returns true if this bitmap has alpha channel
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsOpaque">
            <summary>
            Returns true if this bitmap is opaque
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsCmyk">
            <summary>
            Returns true if this bitmap is CMYK image
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="isUseAlpha">A flag indicating whether alpha channel is used.</param>
            <param name="forceAlphaChannel">Reserved.</param>
            <remarks>
            <para>An PdfBitmap created by this constructor always use 4 byte per pixel.</para>
            <para>The first byte of a pixel is always double word aligned. Each pixel contains red (R), green (G), blue (B) and optionally alpha (A) values.</para>
            <para>The byte order is BGRx (the last byte unused if no alpha channel) or BGRA. The pixels in a horizontal line
            (also called scan line) are stored side by side, with left most pixel stored first (with lower
            memory address)</para>.
            <para>Each scan line uses width*4 bytes. Scan lines are stored one after another,
            with top most scan line stored first. There is no gap between adjacent scan lines.</para>
            <para>This constructor allocates enough memory for holding all pixels in the bitmap, but it doesn't
            initialize the buffer. Applications can use <see cref="O:Patagames.Pdf.Net.PdfBitmap.FillRect"/> to fill the bitmap using any
            color.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,Patagames.Pdf.Enums.FXDIBFormats,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size, pixel format, and pixel data.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="format">The pixel format for the new PdfBitmap.</param>
            <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
            <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next.
            This is usually (but not necessarily) the number of bytes in the pixel format (for example, 2 for 16 bits per pixel) multiplied by the width of the bitmap.
            The value passed to this parameter must be a multiple of four. 
            <para>Used for external buffer only.</para></param>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean)"/> function, with more formats and external buffer supported.
            <para>Bitmap created by this function can be used in any place that a PdfBitmap is
            required.</para>
            <para>If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Net.PdfBitmap.Dispose"/> method will not destroy the buffer.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,Patagames.Pdf.Enums.BitmapFormats,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size, extended pixel format, and pixel data.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="format">The pixel format for the new PdfBitmap.</param>
            <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
            <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next.
            This is usually (but not necessarily) the number of bytes in the pixel format (for example, 2 for 16 bits per pixel) multiplied by the width of the bitmap.
            The value passed to this parameter must be a multiple of four. 
            <para>Used for external buffer only.</para></param>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean)"/> function, with more formats and external buffer supported.
            <para>Bitmap created by this function can be used in any place that a PdfBitmap is
            required.</para>
            <para>If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Net.PdfBitmap.Dispose"/> method will not destroy the buffer.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Dispose">
            <summary>
            Releases all resources used by the PdfBitmap.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.FS_COLOR)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="color">A <see cref="T:Patagames.Pdf.FS_COLOR"/> structure that represents the color.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.FS_COLOR,Patagames.Pdf.Enums.BlendTypes)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="color">A <see cref="T:Patagames.Pdf.FS_COLOR"/> structure that represents the color.</param>
            <param name="blendType">A <see cref="T:Patagames.Pdf.Enums.BlendTypes"/>.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRectEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="argb">Represents the color in ARGB format</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRectEx(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.BlendTypes)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="argb">Represents the color in ARGB format</param>
            <param name="blendType">A <see cref="T:Patagames.Pdf.Enums.BlendTypes"/>.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(Patagames.Pdf.FX_RECT,Patagames.Pdf.FS_COLOR)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a <see cref="T:Patagames.Pdf.FX_RECT"/> structure.
            </summary>
            <param name="rect">A <see cref="T:Patagames.Pdf.FX_RECT"/> structure that represents the rectangle to fill.</param>
            <param name="color">A <see cref="T:Patagames.Pdf.FS_COLOR"/> structure that represents the color.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.GetPaletteColorByIndex(System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.SetPaletteEntryByIndex(System.Int32,Patagames.Pdf.FS_COLOR)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="index">Palette index</param>
            <param name="color">Palette color</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Clone(Patagames.Pdf.FX_RECT)">
            <summary>
            Clone specified bitmap with specified clip
            </summary>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the Clone method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Convert(Patagames.Pdf.Enums.BitmapFormats)">
            <summary>
            Convert specified bitmap
            </summary>
            <param name="format">Format for new bitmap</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the Convert method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.StretchTo(System.Int32,System.Int32,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Stretch specified bitmap with specified clip
            </summary>
            <param name="width">With for new bitmap</param>
            <param name="height">Height for new bitmap</param>
            <param name="flags">Flags</param>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the StretchTo method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.SwapXY(System.Boolean,System.Boolean,Patagames.Pdf.FX_RECT)">
            <summary>
             Swap X and Y in specified bitmap
            </summary>
            <param name="swapX">True for swap by X</param>
            <param name="swapY">True for swap by Y</param>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the SwapXY method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FlipXY(System.Boolean,System.Boolean)">
            <summary>
             Flip X and Y in specified bitmap
            </summary>
            <param name="flipX">True for flip by X</param>
            <param name="flipY">True for flip by Y</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the FlipXY method.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFont">
            <summary>
            Represents the font object
            </summary>
            <summary>
            Represents the font object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.GetCharBBoxEx(System.Int32)">
            <summary>
            Get the special character bounding box of a font object.
            </summary>
            <param name="charCode">The character code.</param>
            <returns>Character bounding box of a font object</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Handle">
            <summary>
            Gets the Pdfium SDK handle that the font is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.FontType">
            <summary>
            Gets font type
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.FontTypeName">
            <summary>
            Gets font type name
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.BaseFontName">
            <summary>
            Gets base font name
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Flags">
            <summary>
            Gets font flags
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.IsVertWriting">
            <summary>
            Specifies whether the font is VertWriting
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.IsEmbedded">
            <summary>
            Specifies whether the font is ebedded
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.IsUnicodeCompatible">
            <summary>
            Specifies whether the font is unicode compatible
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.IsStandardFont">
            <summary>
            Specifies whether the font is a standard font.
            </summary>
            <remarks>See details in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/> article.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Ascent">
            <summary>
            Gets the ascent value in the font
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Descent">
            <summary>
            Get the descent value in the font
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.ItalicAngel">
            <summary>
            Get the italic angle value in the font
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.StemV">
            <summary>
            Get the StemV value in the font
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Weight">
            <summary>
            Get the Weight value in the font
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFont.Dictionary">
            <summary>
            Gets the font dictionary
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.GetStringWidth(System.String)">
            <summary>
            Get a special string width of a font object.
            </summary>
            <param name="text">Text the width of which is should be obtained.</param>
            <returns>String width of a font object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.GetCharFontWidth(System.Int32)">
            <summary>
            Get a special character width of a font object.
            </summary>
            <param name="charCode">The character code.</param>
            <returns>Character width of a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.GetCharTypeWidth(System.Int32,System.Boolean@)">
            <summary>
            Get a special character width of a font object.
            </summary>
            <param name="charCode">The character code.</param>
            <param name="isVert">Gets the flag indicating whether a given symbol is vertically inscribed.</param>
            <returns>Character width of a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.GetCharBBox(System.Int32)">
            <summary>
            Get the special character bounding box of a font object.
            </summary>
            <param name="charCode">The character code.</param>
            <returns>Character bounding box of a font object</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.ToUnicode(System.Int32)">
            <summary>
            Convert given char code to unicode
            </summary>
            <param name="charCode">Char code</param>
            <returns>Unicode</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.ToCharCode(System.Char)">
            <summary>
            Convert given unicode to char code
            </summary>
            <param name="unicode">Unicode</param>
            <returns>Char code </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateStock(Patagames.Pdf.Net.PdfDocument,System.String)">
            <summary>
            Creates a standard type font with the specified typeface name.
            </summary>
            <param name="doc">Document object.</param>
            <param name="fontName">A string that specifies the typeface name of the font.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
            <remarks>See detailed information about standard fonts in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateStock(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.Enums.FontStockNames)">
            <summary>
            Creates a standard type font with the specified typeface name.
            </summary>
            <param name="doc">Document object.</param>
            <param name="fontName">A value that specifies the typeface name of the font.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
            <remarks>See detailed information about standard fonts in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateStandardFont(Patagames.Pdf.Net.PdfDocument,System.String,System.Int32)">
            <summary>
            Creates a standard type font with the specified typeface name and encoding.
            </summary>
            <param name="doc">A document object.</param>
            <param name="fontName">A value that specifies the typeface name of the font.</param>
            <param name="encoding">Encoding</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateWindowsFont(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.LOGFONT,System.Boolean,System.Boolean)">
            <summary>
            Creates a font that has the specified characteristics.
            </summary>
            <param name="doc">A document object.</param>
            <param name="logfont">The <see cref="T:Patagames.Pdf.LOGFONT"/> structure defines the attributes of a font. Please refer <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd145037(v=vs.85).aspx">MSDN</a> for more details.</param>
            <param name="bVert">The font is vertical</param>
            <param name="bTranslateName">Translate names for CJK fonts</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateEmbeddedFont(Patagames.Pdf.Net.PdfDocument,System.Byte[],Patagames.Pdf.Enums.FontCharSet,System.Boolean)">
            <summary>
            Creates a built in font that has the specified characteristics.
            </summary>
            <param name="doc">PDF document object.</param>
            <param name="content">A byte array containing the font program that should be embedded.</param>
            <param name="charSet">The character set.</param>
            <param name="bVert">The font is vertical.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
            <remarks>
            <para>A font program can be embedded in a PDF file as data contained in a byte array.</para>
            <para>Font programs are subject to copyright, and the copyright owner may impose
            conditions under which a font program can be used.These permissions are recorded either in the font program or as part of a separate license.One of the conditions may be that the font program cannot be embedded, in which case it
            should not be incorporated into a PDF file.A font program may allow embedding for the sole purpose of viewing and printing the document but not for creating new or modified text that uses the font(in either the same document or other
            documents). The latter operation would require the user performing the operation to have a licensed copy of the font program, not a copy extracted from the
            PDF file.In the absence of explicit information to the contrary, a PDF consumer
            should assume that any embedded font programs are to be used only to view and
            print the document and not for any other purposes.</para>
            <para>
            The following TrueType tables are always required: “head,” “hhea,” “loca,” “maxp,” “cvt ,”
            “prep,” “glyf,” “hmtx,” and “fpgm.” 
            </para>
            <para>
            Beginning with PDF 1.6, font programs may be embedded using the OpenType
            format, which is an extension of the TrueType format that allows inclusion of font
            programs using the Compact Font Format(CFF). It also allows inclusion of data
            to describe glyph substitutions, kerning, and baseline adjustments.In addition to
            rendering glyphs, applications can use the data in OpenType fonts to do advanced
            line layout, automatically substitute ligatures, provide selections of alternate
            glyphs to users, and handle complicated writing scripts.
            </para>
            <para>
            Like TrueType, OpenType font programs contain a number of tables, as defined
            in the OpenType Font Specification. For OpenType fonts
            based on TrueType, the “glyf ” table contains the glyph descriptions.For OpenType fonts based on CFF, the “CFF” table is a complete font program containing
            the glyph descriptions. These tables, as well as the “cmap” table, are required to be
            present when embedding fonts.In addition, for OpenType fonts based on TrueType, the “head,” “hhea,” “loca,” “maxp,” “cvt ,” “prep,” “hmtx,” and “fpgm” tables
            are required.
            </para>
            <note type="note">
            Note: Other tables, such as those used for advanced line layout, need not be present;
            however, their absence may prevent editing of text containing the font.
            </note>
            <para>An embedded font program may contain only the subset of glyphs that are used in the PDF document.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateFont(Patagames.Pdf.Net.PdfDocument,System.String,System.Boolean,Patagames.Pdf.Enums.FontFlags,Patagames.Pdf.Enums.FontWeight,System.Int32,Patagames.Pdf.Enums.FontCharSet,System.Boolean)">
            <summary>
            Creates a font with the specified characteristics.
            </summary>
            <param name="doc">PDF document object.</param>
            <param name="faceName">A string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHAR values, including the terminating NULL.  If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes.</param>
            <param name="bTrueType"></param>
            <param name="flags">The value of the <see cref="T:Patagames.Pdf.Enums.FontFlags"/> entry.</param>
            <param name="weight">The weight of the font.</param>
            <param name="italicAngel">The angle, expressed in degrees counterclockwise from the vertical, of the dominant vertical strokes of the font. (For example, the 9-o’clock position is 90 degrees, and the 3-o’clock position is –90 degrees.) The value is negative for fonts that slope to the right, as almost all italic fonts do.</param>
            <param name="charSet">The character set.</param>
            <param name="bVert">The font is vertical.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
            <example>
            <code language="c#" source="..\PdfiumExamples\Examples.cs" region="Create font example"></code>
            </example>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateFont(Patagames.Pdf.Net.PdfDocument,System.String,Patagames.Pdf.Enums.FontCharSet,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a font with the specified characteristics.
            </summary>
            <param name="doc">PDF document object.</param>
            <param name="faceName">A string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHAR values, including the terminating NULL.  If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes.</param>
            <param name="charSet">Sets a value that specifies the character set.</param>
            <param name="isBold">Sets a value that indicates whether this font should be a bold.</param>
            <param name="isItalic">Sets a value that indicates whether this font should have italic style applied.</param>
            <param name="isVert">The font is vertical.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFont.CreateFont(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Creates a font with the specified characteristics.
            </summary>
            <param name="doc">PDF document object.</param>
            <param name="dict">A font dictionary.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.Net.PdfFont"/> class or null if any error occurs.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfMarkedContentCollection">
            <summary>
            Represents the collection of <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> objects.
            </summary>
            <remarks>
            This list is read only.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.#ctor(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.PdfMarkedContentCollection"/> class.
            </summary>
            <param name="pageObject"><see cref="T:Patagames.Pdf.Net.PdfPageObject"/></param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContentCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContentCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.Contains(Patagames.Pdf.Net.PdfMarkedContent)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.IndexOf(Patagames.Pdf.Net.PdfMarkedContent)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.CopyTo(Patagames.Pdf.Net.PdfMarkedContent[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.Add(Patagames.Pdf.Net.PdfMarkedContent)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.Remove(Patagames.Pdf.Net.PdfMarkedContent)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContentCollection.Insert(System.Int32,Patagames.Pdf.Net.PdfMarkedContent)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> to insert into the collection.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfMarkedContent">
            <summary>
            Represents the item of the <see cref="T:Patagames.Pdf.Net.PdfMarkedContentCollection"/> collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContent.Tag">
            <summary>
            Gets a tag operand of the marked content
            </summary>
            <remarks>
            All marked-content operators except EMC take a tag operand indicating the role
            or significance of the marked-content element to the processing application.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContent.Parameters">
            <summary>
            Gets a dictionary containing private information meaningful to the program(application or plugin extension) creating the marked content.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContent.ParamType">
            <summary>
            Gets the type of parameters
            </summary>
            <remarks>
            If any of the values are indirect references to objects outside the content stream, the Parameters
            dictionary must instead be defined as a named resource in the Properties subdictionary of the current resource dictionary.
            In this case the ParamType should be <see cref="F:Patagames.Pdf.Enums.PropertyListTypes.PropertiesDict"/>.
            <para>
            If all of the values in a property list dictionary are direct objects, the dictionary 
            may be written inline in the content stream as a direct object.
            In this case the ParamType should be <see cref="F:Patagames.Pdf.Enums.PropertyListTypes.DirectDict"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfMarkedContent.HasMCID">
            <summary>
            Gets a value indicating that the <see cref="P:Patagames.Pdf.Net.PdfMarkedContent.Parameters"/> dictionary contains the MCID (marked-content identifier) entry.
            </summary>
            <remarks>
            MCID entry it is an integer marked-content identifier that uniquely identifies the marked-content sequence within its content stream.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfMarkedContent.#ctor(System.String,System.Boolean,Patagames.Pdf.Enums.PropertyListTypes,Patagames.Pdf.Net.BasicTypes.PdfTypeDictionary)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.PdfMarkedContent"/> class
            </summary>
            <param name="tag">The tag operand of the marked content.</param>
            <param name="hasMCID">Indicate that the <see cref="P:Patagames.Pdf.Net.PdfMarkedContent.Parameters"/> dictionary contains the MCID (marked-content identifier) entry.</param>
            <param name="paramType">The type of the parameters dictionary</param>
            <param name="parameters">The parameters dictionary</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfAction">
            <summary>
            Represents the PDF action into a PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.Handle">
            <summary>
            Gets the Pdfium SDK handle that the action is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.Dictionary">
            <summary>
            Gets the action's dictionary.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.ActionType">
            <summary>
            Gets type of current action. See <see cref="T:Patagames.Pdf.Enums.ActionTypes"/> for details.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.ActionUrl">
            <summary>
            Gets URL assigned to the current action. Action must be a URI action <see cref="P:Patagames.Pdf.Net.PdfAction.ActionType"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.Destination">
            <summary>
            Gets the PdfDestination object associated with this action
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAction.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfAction class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="handle">Pdfium SDK handle that the action is bound to</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfAvailabilityProvider">
            <summary>
            Represents PDF document availability provider.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Handle">
            <summary>
            Gets the Pdfium SDK handle that the page is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Document">
            <summary>
            Gets the PDF document associated with the current availability provider.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsDocumentAvailable">
            <summary>
            Check whether the document is ready for loading, if not, fires AddSegment event.
            </summary>
            <remarks>
            The application should read this property whenever new data arrived, and process all the
            generated download hints if any, while the property is false. Then the application can call <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> to get a document.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.FirstAvailablePageIndex">
            <summary>
            Gets zero-based index for the first available page in a linearized PDF
            </summary>
            <remarks>For most linearized PDFs, the first available page would be just the first page, however,
            some PDFs might make other page to be the first available page.
            For non-linearized PDF, this property will always return zero.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsLinearized">
            <summary>
            To check whether a document is Linearized PDF file. <see cref="T:Patagames.Pdf.Enums.IsLinearizedResults"/> for more details.
            </summary>
            <remarks>
            return IsLinearized means the document is linearized PDF else not.
            It return IsLinearized/NotLinearized state as soon as we have first 1K data. If the file's size less than
            1K,we don't known whether the PDF is a linearized file.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsFormAvailable">
            <summary>
            Check whether Form data is ready for init, if not, get download hints. <see cref="T:Patagames.Pdf.Enums.IsFormAvailableResults"/> for details.
            </summary>
            <remarks>
            This property is valid only if <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> was called. 
            The application should read this property whenever new data arrived, and process all the
            generated download hints if any, until the function property sets to true. Then the 
            application can create an instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class, call <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.InitDocument(Patagames.Pdf.Net.PdfForms)"/> method and perform page loading
            after the property returns true.
            </remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.IsSegmentAvailable">
            <summary>
            Called by SDK to check whether the data section is ready.
            <note type="note">Required: Yes. </note>
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment">
            <summary>
            Called by SDK to report some downloading hints for download manager.
            <note type="note">Required: Yes.</note>
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.ReadSegment">
            <summary>
            Called by SDK to read some data from download manager.
            <note type="note">Required: Yes.</note>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.#ctor(System.Int32)">
            <summary>
            Construct instance of <see cref="T:Patagames.Pdf.Net.PdfAvailabilityProvider"/> class with specified file size
            </summary>
            <param name="PdfSize">The size in bytes of downloadable document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.Dispose">
            <summary>
            Release all resources allocated by PdfAvailabilityProvider
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.IsPageAvailable(System.Int32)">
            <summary>
            Check whether a page is ready for loading, if not, fires <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment"/> event.
            </summary>
            <param name="index">Index number of the page. 0 for the first page.</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> if called.
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns True. Then the 
            application can perform page loading.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)">
            <summary>
            Get document from the availability provider and store it in <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Document"/> property.
            </summary>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <remarks>
            After <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsDocumentAvailable"/> returns TRUE, the application should call this function to
            get the document instance.
            </remarks>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.InitDocument(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Initialize the created PDF document.
            </summary>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <remarks>After <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsFormAvailable"/> returns TRUE, the application should call this function to initialize the document instance.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBookmark">
            <summary>
            Represents the bookmark into a PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Handle">
            <summary>
            Gets the Pdfium SDK handle that the bookmark is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Dictionary">
            <summary>
            Gets the bookmark's dictionary
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Title">
            <summary>
            Gets the title of bookmark
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Parent">
            <summary>
            Gets the parent bookmark of the current bookmark.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Childs">
            <summary>
            Gets the collection of PdfBookmark objects assigned to the current bookmark.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Destination">
            <summary>
            Gets the PdfDestination object associated with this bookmark
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Action">
            <summary>
            Gets the PdfAction object associated with this bookmark or null if no action.
            In this case, the application should try <see cref="P:Patagames.Pdf.Net.PdfBookmark.Destination"/>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmark.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,Patagames.Pdf.Net.PdfBookmark)">
            <summary>
            Initializes a new instance of the PdfBookmark class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="handle">Pdfium SDK handle that the bookmark is bound to</param>
            <param name="parent">Parent bookmark or null for top-level bookmark</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBookmarkCollections">
            <summary>
            Represents the collection of bookmarks insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfBookmarkCollections._doc">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.#ctor(Patagames.Pdf.Net.PdfDocument,Patagames.Pdf.Net.PdfBookmark)">
            <summary>
            Initializes a new instance of the PdfBookmarkCollections class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="parent">Parent bookmark</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.FillPlainList(Patagames.Pdf.Net.PdfBookmarkCollections,Patagames.Pdf.Net.PdfBookmark)">
            <summary>
            Recursively builds a tree of bookmarks
            </summary>
            <param name="list">A list which will be filling by found bookmarks of the current level</param>
            <param name="bookmark">Parent bookmark. Can be null for root</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.Find(System.String)">
            <summary>
            Find a bookmark in the PDF document, using the bookmark title
            </summary>
            <param name="title">The string for the bookmark title to be searched. Can't be NULL or empty string.</param>
            <returns>The instance of PdfBookmark class represented a found bookmark item. Null if the title can't be found.</returns>
            <remarks>It always returns the first found bookmark if more than one bookmarks have the same title.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.InsertAt(System.Int32,System.String,Patagames.Pdf.Net.PdfPage)">
            <summary>
            Inserts a bookmark into the collection at the specified index.
            </summary>
            <param name="Index">The zero-based index at which bookmark should be inserted.</param>
            <param name="Title">The title of the bookmark.</param>
            <param name="Page">The page at which bookmark should be inserted.</param>
            <returns>The bookmark that was inserted.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.DeleteAt(System.Int32)">
            <summary>
            Removes the bookmark at the specified index of collection.
            </summary>
            <param name="Index">The zero-based index of the bookmark to remove.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfClipPath">
            <summary>
            Represents the clip path inside a page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfClipPath.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfClipPath.Handle">
            <summary>
            Gets the Pdfium SDK handle that the clip path is bound to
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a new instance of <see cref="T:Patagames.Pdf.Net.PdfClipPath"/> with a rectangle inserted.
            </summary>
            <param name="left">The left of the clip box.</param>
            <param name="bottom">The bottom of the clip box.</param>
            <param name="right">The right of the clip box.</param>
            <param name="top">The top of the clip box.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.Dispose">
            <summary>
            Destroy the clip path.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfCommon">
            <summary>
            Represents a class that contain a common methods.
            </summary>
            <threadsafety>Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.</threadsafety>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCommon.Initialize(System.String,System.String,System.String)">
            <summary>
            Initialize the SDK library
            </summary>
            <param name="licenseKey">Yours license key. Can be null for demo mode</param>
            <param name="specificPath">Path to the pdfium dynamic library (.dll/.dylib). See remarks sections for detail.</param>
            <param name="icuSpecificPath">Path to the icudt dynamic labrary (.dll/.dylib). See remarks sections for detail.</param>
            <remarks>
            <para>You have to call this function before you can call any PDF processing functions.</para>
            <para>In some cases, library initializer can not find pdfim/icudt dynamic library (.dll/.dylib) library to load.
            A typical example of this situation is a Web application.
            Web apps is running in a IIS working directory, unlike the classical apps. As a consequence, standard LoadLibrary function can not find the dll during loading process.
            </para>
            <para>In this case, you must explicitly specify the full path to the dll files through specificPath parameters in the initialization method.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCommon.Release">
            <summary>
            Release all resources allocated by the SDK library
            </summary>
            <remarks>You can call this function to release all memory blocks allocated by the library. After this function called, you should not call any PDF processing functions.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCommon.DefaultAnsiEncoding">
            <summary>
            Gets or sets the encoding that is used to encode/decode ANSI strings.
            </summary>
            <remarks>
            By default used the system's current ANSI code page.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCommon.IsInitialize">
            <summary>
            Determines whether the engine is initialized
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCommon.IsCheckForMemoryLeaks">
            <summary>
            Specifies whether to check a memory leak during object finalization.
            </summary>
            <value>True - Check for memory leaks.</value>
            <remarks>
            If it is found undisposed instance of the class then will be thrown <see cref="T:Patagames.Pdf.Net.Exceptions.MemoryLeakException"/> with specifying the class name in the message.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCommon.DesignTimeActivation">
            <summary>
            Activate Pdfium.NEt SDK at design time
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfCustomLoader">
            <summary>
            Represents a custom access descriptor for loading PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCustomLoader.FormFill">
            <summary>
            Gets or sets a form fill environment object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCustomLoader.Password">
            <summary>
            Gets or sets a string used as the password for PDF file. If no password needed, empty or NULL can be used.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfCustomLoader.LoadBlock">
            <summary>
             SDK fire this event when it need to receive the next data block of PDF document. 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.Load">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <remarks>The application should maintain the file resources being valid until the PDF document close.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.#ctor(System.Int32,System.Byte[])">
            <summary>
            Construct SetTimerEventArgs object
            </summary>
            <param name="fileLength">File length, in bytes.</param>
            <param name="userData">A custom object for all implementation specific data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.PdfCustomLoader"/>.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Patagames.Pdf.Net.PdfCustomLoader"/>.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDestination">
            <summary>
            Represents the explicit and named destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Handle">
            <summary>
            Gets the Pdfium SDK handle that the destination is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Name">
            <summary>
            Gets the name of the named destination. This value is null for explicit destination
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.PageIndex">
            <summary>
            Gets or sets the page index(zero based for current document) in current or remote document which indicates the named destination
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.DestinationType">
            <summary>
            Gets or sets type of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Left">
            <summary>
            Gets or sets Left parameter of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Top">
            <summary>
            Gets or sets Top parameter of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Right">
            <summary>
            Gets or sets Right parameter of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Bottom">
            <summary>
            Gets or sets Bottom parameter of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Zoom">
            <summary>
            Gets or sets Zoom parameter of destination.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.IsSameDocument">
            <summary>
            A flag indicating whether the destination is in the current document.
            </summary>
            <remarks>
            In the case, when destination associated with a remote goto action (<see cref="T:Patagames.Pdf.Net.PdfAction"/>), and the destination page is
            in a different PDF document, the <see cref="P:Patagames.Pdf.Net.PdfDestination.PageIndex"/> property specifies a page number 
            within the remote document instead of a page in the current document. 
            <para>In this case the IsSameDocument property should be false.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestination.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,System.String)">
            <summary>
            Initializes a new instance of the PdfDestination class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="destHandle">Pdfium SDK handle that the destination is bound to.</param>
            <param name="name">The name for the named Destination; null if the destination is not a named destination.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestination.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Creates new <see cref="T:Patagames.Pdf.Net.PdfDestination"/>
            </summary>
            <param name="document"></param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDestinationCollections">
            <summary>
            Represents the collection of named destination insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfDestinationCollections._doc">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.PdfDestinationCollections"/> class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.GetByName(System.String)">
            <summary>
            Get a special destination by the name.
            </summary>
            <param name="name">The name of a special named destination. Can't be NULL or empty string.</param>
            <returns>The instance of PdfDestination class.</returns>
            <remarks>This method have problem with non english national character encoding</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestinationCollections.Item(System.String)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.PdfDestination"/> by its name.
            </summary>
            <param name="name">The name of a special named destination. Can't be NULL or empty string.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfDestination"/> with the specified name.</returns>
            <remarks>This method have problem with non english national character encoding</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestinationCollections.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.PdfDestination"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfDestination"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestinationCollections.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.Net.PdfDestination"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestinationCollections.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.Add(Patagames.Pdf.Net.PdfDestination)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfDestination"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfDestination"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.PdfDestination"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.Contains(Patagames.Pdf.Net.PdfDestination)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.PdfDestination"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfDestination"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.PdfDestination"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.CopyTo(Patagames.Pdf.Net.PdfDestination[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.IndexOf(Patagames.Pdf.Net.PdfDestination)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.PdfDestination"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.PdfDestination"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.PdfDestination"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.Insert(System.Int32,Patagames.Pdf.Net.PdfDestination)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.PdfDestination"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.PdfDestination"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfDestination"/> to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.Remove(Patagames.Pdf.Net.PdfDestination)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.PdfDestination"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfDestination"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.PdfDestination"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.PdfDestination"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.PdfDestination"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.PdfDestination"/>  to remove.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDocument">
            <summary>
            Represents a PDF document.
            </summary>
            <threadsafety>Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.</threadsafety>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Create PDF in C#</seealso>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfDocument._bytePdf">
            <summary>
            For prevent GC collet
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfDocument._streamPdf">
            <summary>
            For prevent GC collect
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfDocument.DocumentLoaded">
            <summary>
            Occurs when the document is successfully loaded
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfDocument.WriteBlock">
            <summary>
            SDK fire this event for transmission of the next data block of PDF document from <see cref="M:Patagames.Pdf.Net.PdfDocument.Save(Patagames.Pdf.Enums.SaveFlags,System.Int32)"/> method. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Tag">
            <summary>
            Gets or sets the object that contains data about the document.
            </summary>
            <remarks>
            Any type derived from the Object class can be assigned to this property. 
            A common use for the Tag property is to store data that is closely associated with the document.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Root">
            <summary>
            Gets the root catalog of the PDF document
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Info">
            <summary>
            Gets the document’s information dictionary
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Trailer">
            <summary>
            Gets the trailer of the PDF file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.AvailabilityProvider">
            <summary>
            Gets <see cref="T:Patagames.Pdf.Net.PdfAvailabilityProvider"/> object if document was loaded from availability provider.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Handle">
            <summary>
            Gets the Pdfium SDK handle that the document is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.FormFill">
            <summary>
            Gets a form fill environment object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Pages">
            <summary>
            Gets the collection of Pages found in the PDF document.
            </summary>
            <remarks>Page loaded into memory when you first access to any method or a property of an object and unloaded from memory when calling the Dispose method</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Bookmarks">
            <summary>
            Gets the collection of bookmarks found in the PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.NamedDestinations">
            <summary>
            Gets the collection of named destinations found in the PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Title">
            <summary>
            The document’s title. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Author">
            <summary>
            The name of the person who created the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Subject">
            <summary>
            The subject of the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Keywords">
            <summary>
            Keywords associated with the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Creator">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Adobe FrameMaker®) that created the original document from which it was converted. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Producer">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Acrobat Distiller) that converted it to PDF. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.CreationDate">
            <summary>
            The date and time the document was created, in human-readable form (see Section 3.8.3, “Dates” in PDF Refernce 1.7). 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.ModificationDate">
            <summary>
            The date and time the document was most recently modified, in human-readable form (see Section 3.8.3, “Dates”  in PDF Refernce 1.7). 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Trapped">
            <summary>
            A name object indicating whether the document has been modified to include trapping information (see Section 10.10.5, “Trapping Support” in PDF Reference 1.7).
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Version">
            <summary>
            Gets the file version of the specific PDF document. 14 for 1.4, 15 for 1.5, ...
            </summary>
            <remarks>If the document is created by method <see cref="M:Patagames.Pdf.Net.PdfDocument.CreateNew(Patagames.Pdf.Net.PdfForms)"/>, then return value would always zero.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Permission">
            <summary>
            Gets permission flags. Please refer to <see cref="T:Patagames.Pdf.Enums.PdfUserAccessPermission"/> for detailed description.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.SecurityRevision">
            <summary>
            Gets the security handler revision number. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description.
            </summary>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.PagesMode">
            <summary>
             Gets the document's PageMode(How the document should be displayed when opened) 
            </summary>
            <returns>The flags for page mode.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.#ctor(System.IntPtr,Patagames.Pdf.Net.PdfAvailabilityProvider,Patagames.Pdf.Net.PdfCustomLoader)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Dispose">
            <summary>
            Releases all resources used by the PdfDocument.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.FromHandle(System.IntPtr,Patagames.Pdf.Net.PdfForms)">
            <summary>
            Crreate an instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class from handle.
            </summary>
            <param name="Handle">Handle to Pdf Document</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <returns>Instance of PDFDocument class</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.String,Patagames.Pdf.Net.PdfForms,System.String)">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <param name="path">Path to the PDF file (including extension)</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.
            </note> 
            </remarks>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Read PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.Byte[],Patagames.Pdf.Net.PdfForms,System.String)">
            <summary>
            Open and load a PDF document from a memory.
            </summary>
            <param name="content">Pointer to a buffer containing the PDF document</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">Unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">File not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">File not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">Password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in Pdfium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            <para>The application should maintain the byte array being valid until the PDF document close.</para>
            <para>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.</para>
            </note> 
            </remarks>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Read PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.IO.Stream,Patagames.Pdf.Net.PdfForms,System.String,System.Boolean)">
            <summary>
            Loads the PDF document from the specified stream.
            </summary>
            <param name="stream">The stream containing the PDF document to load. The stream must support seeking.</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <param name="leaveOpen">true if the application would like the stream to remain open after closing document.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            <para>The application should maintain the stream resources being valid until the PDF document close.</para>
            <para>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.</para>
            </note> 
            </remarks>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Read PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(Patagames.Pdf.Net.PdfCustomLoader)">
            <summary>
            Loads the PDF document from the specified custom descriptor.
            </summary>
            <param name="loader">Custom access descriptor for loading PDF document.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.NoLicenseException">This exception thrown only in trial mode if document cannot be opened due to a license restrictions"</exception>
            <remarks>
            <note type="note">
            <para>The application should maintain the instance of PdfCustomLoader class being valid until the PDF document close.</para>
            <para>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.</para>
            </note> 
            </remarks>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Read PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(System.String,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Saves a copy of PDF document to the specified file name
            </summary>
            <param name="path">Path to the new PDF file</param>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Generate PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(System.IO.Stream,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Saves a copy of PDF document to the stream
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Generate PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
             Saves the copy of PDF document in custom way.
            </summary>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <remarks>Before calling this method the application should be subscribed to the WriteBlock event.
            SDK will fire this event for transmission of the next data block of PDF document.</remarks>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Generate PDF Document in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.GetMetaText(System.String)">
            <summary>
            Get a text from metadata of the document.
            </summary>
            <param name="tag">The tag for the meta data. Currently, It can be "Title", "Author", "Subject",
            "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For
            detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf"> PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </param>
            <returns>The text from metadata of the document.</returns>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.CreateNew(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Create a new PDF document.
            </summary>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with document</param>
            <returns>A instance of PDFDocument class represented a new PDF document. If failed, null is returned</returns>
            <seealso href="https://pdfium.patagames.com/c-pdf-library/">Create PDF in C#</seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.CopyViewerPreferences(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Copy the viewer preferences from other PDF document to current.
            </summary>
            <param name="sourceDoc">PDF document with the viewer preferences.</param>
            <returns>True for success, False for failure.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.GetPageSizeByIndex(System.Int32)">
            <summary>
            Get the size of a page by index.
            </summary>
            <param name="pageIndex">Page index, zero for the first page.</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.DoDocumentAAction(Patagames.Pdf.Enums.DocumentActionTypes)">
            <summary>
            This method is required for performing the document's additional-action.
            </summary>
            <param name="aaType">The type of the additional-actions. See <see cref="T:Patagames.Pdf.Enums.DocumentActionTypes"/> for detail</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.SetPasswordProtection(System.String,System.String,Patagames.Pdf.Enums.PdfUserAccessPermission,System.Boolean,Patagames.Pdf.Enums.EncriptionAlgorithm)">
            <summary>
            Protect document with a password.
            </summary>
            <param name="openPassword">Set if require a password to open the document.</param>
            <param name="permissionsPassword">Set if require a password to change document restriction settings.</param>
            <param name="permissions">The permission flags.</param>
            <param name="encryptMetadata">Indicates whether the document-level metadata stream is to be encrypted.</param>
            <param name="algorithm">Defines data transformations that cannot be easily reversed by unauthorized users.</param>
            <remarks>
            <para>You can add a password to a PDF document to limit access and restrict certain features, such as printing, copying and editing.</para>
            <para>There are two kinds of passwords that could be applied to a PDF file: a Document Open password 
            and a Permissions password.When you set a Document Open password, anyone who tries to open
            the PDF file must type in the password that you specified. When you set a Permissions password,
            anyone who wants to change the restrictions must type the Permissions password. Please note
            that if a PDF is secured with both types of passwords, it can be opened with either password, but
            only the Permissions password allows you to change the restrictions.</para>
            <para>Security settings will not be applied to the document until you save the document. You will be able to continue change security settings until you close the document.</para>
            <note type="note">RC4 is a copyrighted, proprietary algorithm of RSA Security, Inc. Independent
            software vendors may be required to license RC4 to develop software that encrypts
            or decrypts PDF documents.</note>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFind">
            <summary>
            Represents a search context
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.FindedText">
            <summary>
            Gets found text information object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.FoundText">
            <summary>
            Gets found text information object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.CharIndex">
            <summary>
            Gets the starting character index of the search result.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.CharsCount">
            <summary>
            Gets the number of matched characters in the search result
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.FindNext">
            <summary>
            Search in the direction from page start to end.
            </summary>
            <returns>Whether a match is found</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.FindPrev">
            <summary>
            Search in the direction from page end to start.
            </summary>
            <returns>Whether a match is found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Find(System.String,Patagames.Pdf.Net.PdfText,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="findWhat">A string match pattern</param>
            <param name="text">PdfText object.</param>
            <param name="flags">Option flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details </param>
            <param name="startIndex">Start from this character. -1 for end of the page</param>
            <returns>A object fot represents the search context.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Dispose">
            <summary>
            Release a search context
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfForms">
            <summary>
            Represents the PDF forms in doucument
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.Handle">
            <summary>
            Gets the Pdfium SDK handle that the forms is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.InterForm">
            <summary>
            Gets Interactive Forms object for current PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.SynchronizationContext">
            <summary>
            Gets or sets the object used to marshal event-handler calls that are issued from JS engine.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.SynchronizingObject">
            <summary>
            Gets or sets the object used to marshal event-handler calls that are issued from JS engine.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Release">
            <summary>
            Give implementation a chance to release any data after the forms is no longer used
            </summary>
            <remarks>
            <para>Required: No.</para>
            <para>Called by SDK during the final cleanup process.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Invalidate">
            <summary>
            SDK will fire this event when the page need to be repainted.
            </summary>
            <remarks>
            <para>Required: Yes.</para>
            <para>All positions are measured in PDF "user space". Implementation should call <see cref="O:Patagames.Pdf.Net.PdfPage.Render"/> for repainting a specified page area.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.OutputSelectedRect">
            <summary>
            SDK fire this event when user is taking the mouse to select texts on a form field.
            </summary>
            <remarks>
            <para>Required: No.</para>
            <para>This event is useful for implementing special text selection effect. Implementation should
            first records the returned rectangles, then draw them one by one at the painting period, last,remove all 
            the recorded rectangles when finish painting.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SetCursor">
            <summary>
            Application shoud use this event for sets the specified cursor for the entire application.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.LocalTime">
            <summary>
            With this event SDK receives the current local time on the system. 
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.FieldChanged">
            <summary>
            This event will be invoked to notify implementation when the value of any FormField on the document had been changed.
            </summary>
            <remarks>Required: No.</remarks>		
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoURIAction">
            <summary>
            This action resolves to a uniform resource identifier. 
            </summary>
            <remarks>
            <para>required: No.</para>
            <para>See the URI actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.</para></remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoNamedAction">
            <summary>
            This event will execute an named action.
            </summary>
            <remarks>See the named actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.
            Required: Yes.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.FocusChanged">
            <summary>
            This event will be fired when a text field is getting or losing a focus.
            </summary>
            <remarks><para>Required: No.</para>
            <para>Currently,only support text field and combobox field.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoGotoAction">
            <summary>
            While processing this event pplication must be changes the view to a specified destination.
            </summary>
            <remarks><para>Required: No.</para>
            <para>See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</para></remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppAlert">
            <summary>
            pop up a dialog to show warning or hint.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppBeep">
            <summary>
            Causes the system to play a sound. 
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppResponse">
            <summary>
            Displays a dialog box containing a question and an entry field for the user to reply to the question.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.GetDocumentPath">
            <summary>
            Get the file path of the current document. 
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SendMail">
            <summary>
            Mails the data buffer as an attachment to all recipients, with or without user interaction. 
            </summary>
            <remarks><para>Required: Yes.</para>
            <para>If the parameter mailData is NULL, the current document will be mailed as an attachment to all recipients.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Print">
            <summary>
            Prints all or a specific number of pages of the document.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SubmitForm">
            <summary>
            Send the form data to a specified URL.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.GotoPage">
            <summary>
            Jump to a specified page.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BrowseFile">
            <summary>
            Show a file selection dialog, and return the selected file path.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BeforeValueChange">
            <summary>
            Alerts listeners when a text box or combo box value is about to change.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AfterValueChange">
            <summary>
            Occurs when the value of a text box or combo box is changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BeforeSelectionChange">
            <summary>
            Alerts listeners when a selected index for a list box is about to change.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AfterSelectionChange">
            <summary>
            Occurs when the selected index for list box is changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AfterCheckedStatusChange">
            <summary>
            Occurs when the checked statuses for check boxes or radion buttons are changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BeforeFormReset">
            <summary>
            Occurs when the <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/> is calling.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AfterFormReset">
            <summary>
            Occurs when the <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> or the <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/> is calling.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BeforeFormImportData">
            <summary>
            Occurs when the <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> or the <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/> is calling.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AfterFormImportData">
            <summary>
            Occurs when the <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> or the <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/> is calling.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetPageCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr,System.Int32)">
            <summary>
            This method receives the page pointer associated with a specified page index.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="nPageIndex">Index number of the page. 0 for the first page.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes. In some cases, the document-level JavaScript action may refer to a page which hadn't been loaded yet.
            To successfully run the javascript action, implementation need to load the page for SDK.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetCurrentPageCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr)">
            <summary>
            This method receives the current page pointer.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetRotationCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr)">
            <summary>
            This method receives currently rotation of the page view.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>The page rotation. Should be 0(0 degree),1(90 degree),2(180 degree),3(270 degree), in a clockwise direction.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnBeforeValueChangeCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr,System.String)">
            <summary>
            This method invoked by SDK before field is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>
            <para>Method is called by the text boxes and the combo boxes when they lose focus.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnAfterValueChangeCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK after field is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>
            <para>Method is called by the text boxes and the combo boxes when they lose focus.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnBeforeSelectionChangeCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr,System.String)">
            <summary>
            This method invoked by SDK before field's selection is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>
            <para>Method is called by the list boxes when it lose focus.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnAfterSelectionChangeCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK after field's selection is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>
            <para>Method is called by the list boxes when it lose focus.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnAfterCheckedStatusChangeCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK after checked statuses is changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="field">Handle to Field object</param>
            <remarks>
            <para>Method is called by the check boxes and radio buttons when they lose focus.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnBeforeFormResetCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK before forms is reseted.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>
            <para>Method is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnAfterFormResetCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK after forms is reseted.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <remarks>
            <para>Method is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnBeforeFormImportDataCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK before forms data is imported.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>0 to accept changes, -1 to cancel</returns>
            <remarks>
            <para>Method is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.OnAfterFormImportDataCallback(Patagames.Pdf.FPDF_FORMFILLNOTIFY,System.IntPtr)">
            <summary>
            This method invoked by SDK after forms data is imported.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="intForm">Handle to Interactive Forms object</param>
            <remarks>
            <para>Method is called by <see cref="M:Patagames.Pdf.Net.PdfInteractiveForms.ImportFromFdf(Patagames.Pdf.Net.FdfDocument)"/> and by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)"/></para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.#ctor">
            <summary>
            Initializes a new instance of the PdfForms class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Dispose">
            <summary>
            Release all resources used by PdfForms
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Init(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Init fillforms and execute javascript and OnOpen document's actions 
            </summary>
            <param name="document">Instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class that represents the current document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.SetHighlightColor(Patagames.Pdf.Enums.FormFieldTypes,Patagames.Pdf.FS_COLOR)">
            <summary>
            Set the highlight color of specified or all the form fields in the document.
            </summary>
            <param name="field">From field</param>
            <param name="color">color</param>
            <returns>Previouse color</returns>
            <remarks>
            <para>When the parameter fieldType is set to FPDF_FORMFIELD_UNKNOWN, the highlight color will be applied to all the form fields in the document.
            Please refresh the client window to show the highlight immediately if necessary.</para>
            <para><note type="note">Alpha channel is applied to all the form fields in the document even if field was specified.</note></para>
            </remarks>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.SetHighlightColorEx(Patagames.Pdf.Enums.FormFieldTypes,System.Int32)">
            <summary>
            Set the highlight color of specified or all the form fields in the document.
            </summary>
            <param name="field">From field</param>
            <param name="argb">Color in ARGB format</param>
            <returns>Previouse color</returns>
            <remarks>
            <para>When the parameter fieldType is set to FPDF_FORMFIELD_UNKNOWN, the highlight color will be applied to all the form fields in the document.
            Please refresh the client window to show the highlight immediately if necessary.</para>
            <para><note type="note">Alpha channel is applied to all the form fields in the document even if field was specified.</note></para>
            </remarks>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.RemoveHighlightColor">
            <summary>
            Remove the form field highlight color in the document.
            </summary>
            <remarks>Please refresh the client window to remove the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.ForceToKillFocus">
            <summary>
            You can call this member function to force to kill the focus of the form field which got focus.
            It would kill the focus on the form field, save the value of form field if it's changed by user.
            </summary>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfLink">
            <summary>
            Represents the link annotation on a PDF page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Handle">
            <summary>
            Gets the Pdfium SDK handle that the link is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Dictionary">
            <summary>
            Gets the link dictionary.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Destination">
            <summary>
            Gets or set the destination assigned to a link.
            </summary>
            <remarks>Return null if there is no destination associated with the link, 
            in this case the application should try <see cref="P:Patagames.Pdf.Net.PdfLink.Action"/> property</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Action">
            <summary>
            Gets the PDF action assigned to a link.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.AnnotationRect">
            <summary>
            Gets the annotation rectangle. (Specified by the entry of annotation dictionary).
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.QuadPoints">
            <summary>
            Get the collection of quadrilaterals of the link annotation
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLink.#ctor(Patagames.Pdf.Net.PdfPage,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfLink class.
            </summary>
            <param name="page">PDF page containig this link</param>
            <param name="handle">>Pdfium SDK handle that the link is bound to.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfLinkCollections">
            <summary>
            Represents the collection of named destination insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfLinkCollections._page">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfLinkCollections class.
            </summary>
            <param name="page">Page which contains this collection of links.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.GetLinkAtPoint(System.Single,System.Single)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represent the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.GetLinkAtPoint(Patagames.Pdf.FS_POINTF)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="point">The <see cref="T:Patagames.Pdf.FS_POINTF"/> structure that represents point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represents the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLinkCollections.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.PdfLink"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfLink"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLinkCollections.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.Net.PdfLink"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLinkCollections.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.Add(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfLink"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfLink"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.PdfLink"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.Contains(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.PdfLink"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfLink"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.PdfLink"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.CopyTo(Patagames.Pdf.Net.PdfLink[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.IndexOf(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.PdfLink"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.PdfLink"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.PdfLink"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.Insert(System.Int32,Patagames.Pdf.Net.PdfLink)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.PdfLink"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.PdfLink"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfLink"/> to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.Remove(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.PdfLink"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfLink"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.PdfLink"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.PdfLink"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.PdfLink"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.PdfLink"/>  to remove.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPage">
            <summary>
            Represents a PDF page inside document.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPage.ProgressiveRender">
            <summary>
            SDK fire this event during rendering process initiated by <see cref="O:Patagames.Pdf.Net.PdfPage.StartProgressiveRender"/> method. 
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPage.Loaded">
            <summary>
            This event is triggered when the page is loaded into memory. 
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPage.Disposed">
            <summary>
            This event is triggered when the page is unloaded from the memory. 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnProgressiveRender(Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPage.ProgressiveRender"/> event.
            </summary>
            <param name="e">An ProgressiveRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnLoaded">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPage.Loaded"/> event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnDisposed">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPage.Disposed"/> event.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsLoaded">
            <summary>
            Gets a value that represents that whether the page was loaded.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.PageIndex">
            <summary>
            Gets the index of the page in the document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Annots">
            <summary>
            Gets annotations associated with the page
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Tag">
            <summary>
            Gets or sets the object that contains data about the page.
            </summary>
            <remarks>
            Any type derived from the Object class can be assigned to this property. 
            A common use for the Tag property is to store data that is closely associated with the page.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Dictionary">
            <summary>
            Gets the page's dictionary
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the page has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Document">
            <summary>
            Gets the PDF document associated with the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Text">
            <summary>
            Getscurrent instance of <see cref="T:Patagames.Pdf.Net.PdfText"/> class that represents information about all characters in a page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.PageObjects">
            <summary>
            Gets the collection of PDF page objects found in the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Links">
            <summary>
            Gets the collection of PDF links found in the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Handle">
            <summary>
            Gets the Pdfium SDK handle that the page is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Width">
            <summary>
            Gets page width (excluding non-displayable area) measured in points.One point is 1/72 inch (around 0.3528 mm)
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Height">
            <summary>
            Gets page height (excluding non-displayable area) measured in points.One point is 1/72 inch (around 0.3528 mm)
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.MediaBox">
            <summary>
            Gets or sets MediaBox of the page.
            </summary>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7 SECTION 10.10 Prepress Support 963</a> for more details.
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7 SECTION 10.10 Prepress Support 963</seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.CropBox">
            <summary>
            Gets or sets CropBox of the page.
            </summary>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s <see cref="P:Patagames.Pdf.Net.PdfPage.MediaBox"/>. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.BleedBox">
            <summary>
            Gets or sets BleedBox of the page.
            </summary>
            <remarks> A rectangle, expressed in default user space units, defining the region to which the contents of the page should be clipped
            when output in a production environment. Default value: the value of <see cref="P:Patagames.Pdf.Net.PdfPage.CropBox"/>.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.TrimBox">
            <summary>
            Gets or sets TrimBox of the page.
            </summary>
            <remarks> A rectangle, expressed in default user space units, defining the intended dimensions of the finished page after trimming. 
            Default value: the value of <see cref="P:Patagames.Pdf.Net.PdfPage.CropBox"/>.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.ArtBox">
            <summary>
            Gets or sets ArtBox of the page.
            </summary>
            <remarks> A rectangle, expressed in default user space units, defining the extent of the page’s meaningful content(including potential white space) as intended by the page’s creator.
            Default value: the value of <see cref="P:Patagames.Pdf.Net.PdfPage.CropBox"/>.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.OriginalRotation">
            <summary>
            Gets the rotation angle of the page in a saved document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Rotation">
            <summary>
            Gets or sets the page rotation.
            </summary>
            <remarks>The PDF page rotates clockwise. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsTransparency">
            <summary>
            Gets a value that represents that whether the content of the current PDF page contains transparency.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsAvailable">
            <summary>
            Gets a value that represents that whether the content of the current PDF page is available.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.#ctor(Patagames.Pdf.Net.PdfDocument,System.Int32)">
            <summary>
            construct PdfPage object. Do not load actualy it.
            </summary>
            <param name="document">Document containing this page</param>
            <param name="page_index">Page index inside document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.FromHandle(Patagames.Pdf.Net.PdfDocument,System.IntPtr,System.Int32)">
            <summary>
            Creates new instance of PdfPage class from page's hadle.
            </summary>
            <param name="doc">PdfDocument what contains this page.</param>
            <param name="handle">Handle to page.</param>
            <param name="pageIndex">Page'ss index inside a given document.</param>
            <returns>New instance of PdfPage class</returns>
            <remarks>When the instance of PdfPage class created by this method will be disposed the page will not actually unloaded. 
            You should call the <see cref="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)"/> method to unload page from the memory.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Dispose">
            <summary>
            Dispose PDFPage object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="hdc">Device context</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="x">Left pixel position of the display area in the bitmap coordinate.</param>
            <param name="y">Top pixel position of the display area in the bitmap coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.ContinueProgressiveRender">
            <summary>
            Continue rendering a PDF page.
            </summary>
            <returns>The rendering status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.CancelProgressiveRender">
            <summary>
            Release the resource allocate during page rendering. Need to be called after finishing rendering or cancel the rendering.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.RenderEx(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.RenderForms(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render FormFeilds on a page to a device independent bitmap. 
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class (as the output buffer).</param>
            <param name="x">Left pixel position of the display area in the device coordinate.</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <remarks>
            This method is designed to only render annotations and FormFields on the page. 
            Without FPDF_ANNOT specified for flags, Rendering functions such as <see cref="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> or <see cref="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])"/> will only render page contents(without annotations) to a bitmap.
            In order to implement the FormFill functions,Implementation should call this method after rendering functions finish rendering the page contents.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.CreateAnnotations">
            <summary>
            Creates an annotation collection for the page.
            </summary>
            <remarks>
            <para>To access created annotatios the <see cref="P:Patagames.Pdf.Net.PdfPage.Annots"/> property is used.</para>
            <para>This method does nothing if the page already contains annotations.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.FlattenPage(Patagames.Pdf.Enums.FlattenFlags)">
            <summary>
            Flat a pdf page, annotations or form fields will become part of the page contents.
            </summary>
            <param name="flag">the flag for the use of flatten result. FlattenFlags.NormalDisplay for normal display, FlattenFlags.FlatPrint for print.</param>
            <returns>The result flag of the function, See flags <see cref="T:Patagames.Pdf.Enums.FlattenResults"/>.</returns>
            <remarks>Current Version on all fails return zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.TransformWithClip(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_RECTF)">
            <summary>
            Transform the whole page with a specified matrix, then clip the page content region.
            </summary>
            <param name="matrix">The transform matrix.</param>
            <param name="clipRect">A rectangle page area to be clipped.</param>
            <returns>True if success,else false.</returns>
            <remarks>This function will transform the whole page, and would take effect to all the objects in the page.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.InsertClipPath(Patagames.Pdf.Net.PdfClipPath)">
            <summary>
            Clip the page content, the page content that outside the clipping region become invisible.
            </summary>
            <param name="clipPath">A instance of <see cref="T:Patagames.Pdf.Net.PdfClipPath"/> class.</param>
            <remarks>A clip path will be inserted before the page content stream or content array. 
            In this way, the page content will be clipped by this clip path.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.GenerateContent(System.Boolean)">
            <summary>
            Generate PDF Page content. 
            </summary>
            <param name="imagesOnly">If true images only will be generated.</param>
            <returns>True if successful, false otherwise.</returns>
            <remarks>Before you save the page to a file, or reload the page, you must call the GenerateContent function. Or the changed information will be lost.
            <note type="note">This feature needs a full license. However, if you set the imagesOnly flag to true, then the LITE license will also be suitable.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.TransformAnnots(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) all annots in a page.
            </summary>
            <param name="matrix">The transform matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="deviceX">X value in device coordinate, for the point to be converted</param>
            <param name="deviceY">Y value in device coordinate, for the point to be converted</param>
            <returns><see cref="T:Patagames.Pdf.FS_POINTF"/> structure that represents the point in page coordinate</returns>
            <remarks>The page coordinate system has its origin at left-bottom corner of the page, with X axis goes
            along the bottom side to the right, and Y axis goes along the left side upward. NOTE: this
            coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on
            the page should always have the same coordinate values in the page coordinate system.
            The device coordinate system is device dependant. For screen device, its origin is at left-top
            corner of the window. However this origin can be altered by Windows coordinate
            transformation utilities. You must make sure the x, y, width, height and rotate
            parameters have exactlysame values as you used in <see cref="O:Patagames.Pdf.Net.PdfPage.Render"/> methods call.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="deviceX">X value in device coordinate, for the point to be converted</param>
            <param name="deviceY">Y value in device coordinate, for the point to be converted</param>
            <param name="pageX">The X value of the point in page coordinate</param>
            <param name="pageY">The Y value of the point in page coordinate</param>
            <remarks>The page coordinate system has its origin at left-bottom corner of the page, with X axis goes
            along the bottom side to the right, and Y axis goes along the left side upward. NOTE: this
            coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on
            the page should always have the same coordinate values in the page coordinate system.
            The device coordinate system is device dependant. For screen device, its origin is at left-top
            corner of the window. However this origin can be altered by Windows coordinate
            transformation utilities. You must make sure the x, y, width, height and rotate
            parameters have exactlysame values as you used in <see cref="O:Patagames.Pdf.Net.PdfPage.Render"/> methods call.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.PageToDevice(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Convert the page coordinate of a point to screen coordinate
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="pageX">X value in page coordinate, for the point to be converted</param>
            <param name="pageY">Y value in page coordinate, for the point to be converted</param>
            <param name="deviceX">The X value of the point in device coordinate</param>
            <param name="deviceY">The Y value of the point in device coordinate</param>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DoPageAAction(Patagames.Pdf.Enums.PageActionTypes)">
            <summary>
            This method is required for performing the page object's additional-action when opened or closed.
            </summary>
            <param name="aaType">The type of the page object's additional-actions. See <see cref="T:Patagames.Pdf.Enums.PageActionTypes"/> for details.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnMouseMove(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the mouse cursor moves.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnLButtonDown(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the user presses the left mouse button.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnLButtonUp(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the user releases the left mouse button.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnKeyDown(Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a key is pressed. 
            </summary>
            <param name="keyCode">Indicates whether various virtual keys are down. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnKeyUp(Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a key is released. 
            </summary>
            <param name="keyCode">Indicates whether various virtual keys are up. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.GetFormFieldAtPoint(System.Single,System.Single)">
            <summary>
            Check the form field position by point.
            </summary>
            <param name="x">X position in PDF "user space".</param>
            <param name="y">Y position in PDF "user space".</param>
            <returns>Return the type of the formfiled; -1 indicates no fields.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.GetControlAtPoint(System.Single,System.Single,System.Int32@)">
            <summary>
            Get the field's widget at specified position.
            </summary>
            <param name="x">X position in PDF "user space".</param>
            <param name="y">Y position in PDF "user space".</param>
            <param name="zOrder">The z order of found widget</param>
            <returns>Return <see cref="T:Patagames.Pdf.Net.PdfControl"/> object; null indicates no widget.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a location and size.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the device coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a location and size.
            </summary>
            <param name="hdc">Device context</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the device coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="hdc">Device context</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a location and size.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the bitmap coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a location and size.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the bitmap coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DeviceToPageEx(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="deviceX">X value in device coordinate, for the point to be converted</param>
            <param name="deviceY">Y value in device coordinate, for the point to be converted</param>
            <returns><see cref="T:System.Drawing.PointF"/> structure that represents the point in page coordinate</returns>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.PageToDeviceEx(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Single,System.Single)">
            <summary>
            Convert the page coordinate of a point to screen coordinate
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="pageX">X value in page coordinate, for the point to be converted</param>
            <param name="pageY">Y value in page coordinate, for the point to be converted</param>
            <returns><see cref="T:System.Drawing.Point"/> structure that represents the point in device coordinate</returns>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageCollection">
            <summary>
            Represents the collection of <see cref="T:Patagames.Pdf.Net.PdfPage"/> objects
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.CurrentPageChanged">
            <summary>
            Occurs when the CurrentPage has changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.PageInserted">
            <summary>
            Occurs when the new page was added into collection.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.PageDeleted">
            <summary>
            Occurs when the page was removed from collection.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.PageLoaded">
            <summary>
            Occurs when the page is loaded into memory.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.PageDisposed">
            <summary>
            Occurs when the page is disposed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPageCollection.ProgressiveRender">
            <summary>
            Occurs during page rendering via progressive rendering.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnCurrentPageChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.CurrentPageChanged"/> event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnPageInserted(Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageInserted"/> event.
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnPageDeleted(Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageDeleted"/> event.
            </summary>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.PageCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnPageLoaded(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageLoaded"/> event.
            </summary>
            <param name="page">The page which was loaded</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnPageDisposed(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.PageDisposed"/> event.
            </summary>
            <param name="page">The page which was disposed</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.OnProgressiveRender(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfPageCollection.ProgressiveRender"/> event.
            </summary>
            <param name="page">The page which was rendered</param>
            <param name="e">An <see cref="T:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.CurrentIndex">
            <summary>
            Gets or sets the current index of a page in PdfPageCollection
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.CurrentPage">
            <summary>
             Gets the current PdfPage item by <see cref="P:Patagames.Pdf.Net.PdfPageCollection.CurrentIndex"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.Count">
            <summary>
            Gets total number of pages in a PDF document
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.Item(System.Int32)">
            <summary>
             Gets the page at the specified index.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfPageCollection class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.Dispose">
            <summary>
            Releases all resources used by the PdfPageCollection.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.InsertPageAt(System.Int32,System.Single,System.Single)">
            <summary>
            Inserts a new page into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which page should be inserted.</param>
            <param name="width">The page width.</param>
            <param name="height">The page height.</param>
            <returns>A PdfPage that has been inserted into a document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.InsertPageAt(System.Int32,Patagames.Pdf.FS_SIZEF)">
            <summary>
            Inserts a new page into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which page should be inserted.</param>
            <param name="size">The page size</param>
            <returns>A PdfPage that has been inserted into a document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.ImportPages(Patagames.Pdf.Net.PdfDocument,System.String,System.Int32)">
            <summary>
            Import some pages to a PDF document.
            </summary>
            <param name="sourceDoc">A document to be imported.</param>
            <param name="pagerange">A page range string, Such as "1,3,5-7". If this parameter is NULL, it would import all pages in sourceDoc.</param>
            <param name="index">The page index wanted to insert from.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.DeleteAt(System.Int32)">
            <summary>
            Delete a PDF page.
            </summary>
            <param name="index">The index of a page.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.GetPageIndex(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Gets page index in PdfPageCollection
            </summary>
            <param name="page">PdfPage object</param>
            <returns>Page index in current collection or -1 if nothing found</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.GetByHandle(System.IntPtr)">
            <summary>
            Gets page by specified handle
            </summary>
            <param name="page">Handle to the page object</param>
            <returns>Page in current collection or null if nothing found</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageObjectsCollection">
            <summary>
            Represents the collection of objects on a page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.Handle">
            <summary>
            Gets the Pdfium SDK handle that the collection is bound to
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="page">Page which contains this collection of objects.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="formContent">HPointer to CPDF_Form.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="doc"></param>
            <param name="resDict"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Dispose">
            <summary>
            Releases all resources used by the PdfPageCollection.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Contains(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.IndexOf(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.CopyTo(Patagames.Pdf.Net.PdfPageObject[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Add(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Remove(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.Insert(System.Int32,Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.InsertObject(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfPageObject"/>  to the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.InsertObject(Patagames.Pdf.Net.PdfPageObject,System.Int32)">
            <summary>
            Insert an object to the collection. The page object is automatically freed.
            </summary>
            <param name="item">Instance of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> class. It can be <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> for example.</param>;
            <param name="insertAfter">After that index an object will be inserted. -1 for add at the collection's head</param>
            <remarks><note type="warning">If you insert the same objects multiple times, then an error will occur during disposing those objects.</note></remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfQuadPointsCollection">
            <summary>
            Represents a collection of the quadrilaterals
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.#ctor(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Initializes a new instance of the PdfQuadPointsCollection class.
            </summary>
            <param name="link">A Link from which the collection is builded.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.#ctor(Patagames.Pdf.Net.BasicTypes.PdfTypeArray)">
            <summary>
            Initialize a new instance of <see cref="T:Patagames.Pdf.Net.PdfQuadPointsCollection"/> with specified quad points array
            </summary>
            <param name="quadPoints">The array of 8 numbers specifying the coordinates of quadrilateral given in the order x1, y1, x2, y2, x3, y3, x4, y4. </param>
            <remarks>
            Quad points array may be modified to across the PDF internal rules.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.#ctor">
            <summary>
            Initializes a new instance of the PdfQuadPointsCollection class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfQuadPointsCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfQuadPointsCollection.Count">
            <summary>
            Gets the number of <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> contained in the collection.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfQuadPointsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.Contains(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.IndexOf(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.CopyTo(Patagames.Pdf.FS_QUADPOINTSF[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.Add(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.Remove(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/>  to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.Insert(System.Int32,Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.FS_QUADPOINTSF"/> to insert into the collection.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfSearch">
            <summary>
            Provides methods to search the entire document asynchronously.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfSearch.SearchCompleted">
            <summary>
            Occurs when the search operation has completed, has been canceled, or has raised an exception.
            </summary>
            <remarks>
            <para>If the operation completed successfully, you can access the result through the Result property which represents the array of <see cref="T:Patagames.Pdf.Net.PdfSearch.FoundText"/> objects</para>
            <para>The Error property of <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> indicates that an exception was thrown by the operation.</para>
            <para>The Cancelled property of <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> indicates whether a cancellation request was processed by the background operation.</para>
            </remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfSearch.SearchProgressChanged">
            <summary>
            Occurs when progress is changed.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfSearch.FoundTextAdded">
            <summary>
            Occurs when the found text added into search results
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfSearch.FoundText">
            <summary>
            Represents a result of the search operation 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfSearch.FoundText.PageIndex">
            <summary>
            The page index of the search result.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfSearch.FoundText.CharIndex">
            <summary>
            The starting character index of the search result.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfSearch.FoundText.CharsCount">
            <summary>
            The number of matched characters in the search result.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfSearch.IsBusy">
            <summary>
            Gets a value indicating whether the search operation is running.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfSearch.FoundResults">
            <summary>
            Gets a copy of search results.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfSearch.OnSearchCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:Patagames.Pdf.Net.PdfSearch.SearchCompleted"/> event.
            </summary>
            <param name="e">An RunWorkerCompletedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfSearch.OnSearchProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
             Raises the <see cref="E:Patagames.Pdf.Net.PdfSearch.SearchProgressChanged"/> event.
            </summary>
            <param name="e">An ProgressChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfSearch.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfSearch class.
            </summary>
            <param name="document">The instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfSearch.Start(System.String,Patagames.Pdf.Enums.FindFlags)">
            <summary>
            Starts asynchronous execution of a search operation.
            </summary>
            <param name="findWhat">A string match pattern</param>
            <param name="flags">Option flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details.</param>
            <remarks>This method breaks the previous search operation, clears its results and then executes a new search operation.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfSearch.End">
            <summary>
            Requests cancellation of a pending search operation.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfText">
            <summary>
            Represents the text information for the current page
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the control has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.Handle">
            <summary>
            Gets the Pdfium SDK handle that the PdfText is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.CountChars">
            <summary>
            <para>Gets number of characters in a page or -1 for error.</para>
            <para>Generated characters, like additional space characters, new line characters, are also counted.</para>
            </summary>
            <remarks><para>Characters in a page form a "stream", inside the stream, each character has an index.
            We will use the index parameters in many functions.</para>
            <para>The first character in the page has an index value of zero.</para></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.WebLinks">
            <summary>
            Gets the instance of PdfWebLinkCollection class that represents the web link on current page
            </summary>
            <remarks>See remarks section of <see cref="T:Patagames.Pdf.Net.PdfWebLinkCollection"/> class for more details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfText class.
            </summary>
            <param name="pdfPage">Instance of <see cref="T:Patagames.Pdf.Net.PdfPage"/> class</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Dispose">
            <summary>
            Releases all resources used by the PdfText.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharacter(System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="index">Zero-based index of the character</param>
            <returns>The the particular character. If a character is not encoded in Unicode and engine can't convert to Unicode,
            the return value will be zero character (\0).</returns>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetFontSize(System.Int32)">
            <summary>
            Get the font size of a particular character
            </summary>
            <param name="index">Zero-based index of the character.</param>
            <returns>The font size of the particular character, measured in points (about 1/72 inch). This is the typographic size of the font (so called "em size").</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharBox(System.Int32)">
            <summary>
            Get bounding box of a particular character.
            </summary>
            <param name="index">Zero-based index of the character.</param>
            <remarks>All positions are measured in PDF "user space"</remarks>
            <returns>Bounding box of a particular character.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharIndexAtPos(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Get the index of a character at or nearby a certain position on the page
            </summary>
            <param name="x">X position in PDF "user space"</param>
            <param name="y">Y position in PDF "user space"</param>
            <param name="xTolerance">An x-axis tolerance value for character hit detection, in point unit.</param>
            <param name="yTolerance">A y-axis tolerance value for character hit detection, in point unit</param>
            <returns>The zero-based index of the character at, or nearby the point (x,y).
            If there is no character at or nearby the point, return value will be -1.
            If an error occurs, -3 will be returned.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetText(System.Int32,System.Int32)">
            <summary>
            Extract text string from the page
            </summary>
            <param name="index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>Text string from the page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetTextInfo(System.Int32,System.Int32)">
            <summary>
            Extract text information structure from the page
            </summary>
            <param name="index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>The instane of <see cref="T:Patagames.Pdf.Net.PdfText"/> class that represent text information of the current page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetBoundedText(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Extract text within a rectangular boundary on the page specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary.</param>
            <returns>Text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetBoundedText(Patagames.Pdf.FS_RECTF)">
            <summary>
            Extract text within a rectangular boundary on the page specified by a <see cref="T:Patagames.Pdf.FS_RECTF"/> structure.
            </summary>
            <param name="rect">Rectangle boundary</param>
            <returns>Text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Find(System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="findWhat">A string match pattern</param>
            <param name="flags">ption flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details.</param>
            <param name="startIndex">Start from this character. -1 for end of the page.</param>
            <returns>A object fot represents the search context or null if nothing found.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfTextInfo">
            <summary>
            Represents a text information of specified text on the page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextInfo.Text">
            <summary>
            Gets a text string associated with this instance of <see cref="T:Patagames.Pdf.Net.PdfTextInfo"/> class.
            </summary>
            <remarks>This ignores characters without unicode information</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextInfo.Rects">
            <summary>
            Gets a collection of rectangular areas bounding specified text.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextInfo.#ctor(Patagames.Pdf.Net.PdfText,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
            <param name="textPage">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Index for the start characters.</param>
            <param name="count">Number of characters to be extracted.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfUrlInfo">
            <summary>
            Represents a url information of specified web link on the page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfUrlInfo.Url">
            <summary>
            Gets a url associated with this instance of <see cref="T:Patagames.Pdf.Net.PdfUrlInfo"/> class.
            </summary>
            <remarks>This ignores characters without unicode information</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfUrlInfo.Rects">
            <summary>
            Gets a collection of rectangular areas bounding specified url.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfUrlInfo.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
            <param name="webLinkHandle">Handle to the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/></param>
            <param name="index">Index for the web link.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfWebLink">
            <summary>
            Represents information about weblinks in a page
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLink.Url">
            <summary>
            Gets the URL information for a detected web link.
            </summary>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLink.UrlInfo">
            <summary>
            Gets the URL information (including bounding rects) for a detected web link.
            </summary>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLink.#ctor(Patagames.Pdf.Net.PdfWebLinkCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> class.
            </summary>
            <param name="links">Web links collection.</param>
            <param name="index">Zero-based index for the link in the specified collection</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfWebLinkCollection">
            <summary>
            Represents collection of <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> objects.
            </summary>
            <remarks>
            Weblinks are those links implicitly embedded in PDF pages. PDF also has a type of annotation
            called "link", FPDFTEXT doesn't deal with that kind of link. FPDFTEXT weblink feature is
            useful for automatically detecting links in the page contents. For example, things like
            "http://www.patagames.com" will be detected, so applications can allow user to click on those
            characters to activate the link, even the PDF doesn't come with link annotations.
            <see cref="M:Patagames.Pdf.Net.PdfWebLinkCollection.Dispose"/> must be called to release resources.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            <value>true if the collection has been disposed of; otherwise, false.</value>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.Handle">
            <summary>
            Gets the Pdfium SDK handle that the web links is bound to
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.GetWebLinkAtPoint(Patagames.Pdf.FS_POINTF)">
            <summary>
            Find a web link at specified point on a document page
            </summary>
            <param name="point">The point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represent the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.GetWebLinkAtPoint(System.Single,System.Single)">
            <summary>
            Find a web link at specified point on a document page
            </summary>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represent the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Dispose">
            <summary>
            Releases all resources used by the PdfDocument.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.Count">
            <summary>
            Gets the number of of detected web links actually contained in the collections.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Add(Patagames.Pdf.Net.PdfWebLink)">
            <summary>
            Adds a <see cref="T:Patagames.Pdf.Net.PdfWebLink"/>  to the collection
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfWebLink"/>  to add to the collection</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Clear">
            <summary>
            Removes all <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> from the collection
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Contains(Patagames.Pdf.Net.PdfWebLink)">
            <summary>
            Determines whether the collection contains a specific <see cref="T:Patagames.Pdf.Net.PdfWebLink"/>.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> to locate in the collection.</param>
            <returns>true if <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.CopyTo(Patagames.Pdf.Net.PdfWebLink[],System.Int32)">
            <summary>
            Copies the elements of the collections to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from collection. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.IndexOf(Patagames.Pdf.Net.PdfWebLink)">
            <summary>
            Determines the index of a specific  <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> in the collection.
            </summary>
            <param name="item">The  <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> to locate in the collection</param>
            <returns>The index of  <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Insert(System.Int32,Patagames.Pdf.Net.PdfWebLink)">
            <summary>
            Inserts a <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> should be inserted.</param>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> to insert into the collection.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Remove(Patagames.Pdf.Net.PdfWebLink)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> to remove from the collection.</param>
            <returns>
            true if <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> was successfully removed from the collection;
            otherwise, false. This method also returns false if <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> is not found in the
            original collection.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/>  at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/>  to remove.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.ReadOnlyList`1">
            <summary>
            Represents a strongly typed list of objects that can be accessed by index. 
            Provides methods to search, sort, and manipulate lists.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire System.Collections.Generic.List.
            </summary>
            <param name="item">The object to locate in the System.Collections.Generic.List. The value can be null for reference types.</param>
            <returns>he zero-based index of the first occurrence of item within the entire System.Collections.Generic.List, if found; otherwise, –1.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.Item(System.Int32)">
            <summary>
             Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the System.Collections.Generic.List.
            </summary>
            <param name="item">The object to locate in the System.Collections.Generic.List. The value can be null for reference types.</param>
            <returns>true if item is found in the System.Collections.Generic.List; otherwise, false</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire System.Collections.Generic.List to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements
            copied from System.Collections.Generic.List. The System.Array must have
            zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.Count">
            <summary>
            Gets the number of elements actually contained in the System.Collections.Generic.List.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.GetEnumerator">
            <summary>
             Returns an enumerator that iterates through the System.Collections.Generic.List.
            </summary>
            <returns>A System.Collections.Generic.List.Enumerator for the System.Collections.Generic.List.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
             Returns an enumerator that iterates through the System.Collections.Generic.List.
            </summary>
            <returns>A System.Collections.Generic.List.Enumerator for the System.Collections.Generic.List.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified
             predicate, and returns the first occurrence within the entire System.Collections.Generic.List.
            </summary>
            <param name="match">The System.Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.
            </returns>
        </member>
        <member name="T:Patagames.Pdf.Pdfium">
            <summary>
            Represents low level API to get access to Pdfium engine.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_TestCompare(System.Int32)">
            <summary>
            Reserved for internal usage.
            </summary>
            <param name="level">Must be zero.</param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.SetWorldTransform(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            The SetWorldTransform function sets a two-dimensional linear transformation between world space and page space for the specified device context. This transformation can be used to scale, rotate, shear, or translate graphics output.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="pMatrix">A pointer to an FS_MATRIX structure that contains the transformation data.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_IsCompact">
            <summary>
            Check if compact version of pdfium dynamic library (.dll/.dylib) is used.
            </summary>
            <returns>true if compact version is used.</returns>
        </member>
        <member name="P:Patagames.Pdf.Pdfium.CurrentPlatform">
            <summary>
            Gets or sets the platform in that current application is running.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding">
            <summary>
            Gets or sets the encoding that is used to encode/decode ANSI strings.
            </summary>
            <remarks>
            By default used the system's current ANSI code page.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Pdfium.IsInitialize">
            <summary>
            Determines whether the engine is initialized
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Pdfium.IsFullAPI">
            <summary>
            Determines whether the engine is initialized in full API mode.
            </summary>
            <remarks>
            true if all features are available; false - if LITE features are available only.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Pdfium.LicensedAssembly">
            <summary>
            Gets or sets the assembly in which the license file is saved. Default is null
            </summary>
            <remarks>If this property is null, then the engine will search the license in the following order:
             EntryAssembly, CallingAssembly, ExecutingAssembly
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_InitLibrary(System.String,System.String)">
            <summary>
            Initialize the Pdfium SDK library
            </summary>
            <param name="licenseKey">Your license kuy oe null for trial</param>
            <param name="specificPath">Path to the pdfium dynamic library (.dll/.dylib). See remarks sections for detail.</param>
            <remarks>
            <para>You have to call this function before you can call any PDF processing functions.</para>
            <para>In some cases, library initializer can not find pdfim.dll library to download.
            A typical example of this situation is a Web application.
            Web apps is running in a IIS working directory, unlike the classical apps. As a consequence, standard LoadLibrary function can not find the dll during loading process.
            </para>
            <para>In this case, you must explicitly specify the full path to the pdfium(.dll/.dylib) file through specificPath parameter in the initialization method.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_InitICU(System.String)">
            <summary>
            Initialize the ICU data file. Should be called before <see cref="M:Patagames.Pdf.Pdfium.FPDF_InitLibrary(System.String,System.String)"/>
            </summary>
            <param name="specificPath">Path to the icudt dynamic library (.dll/.dylib)</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DestroyLibrary">
            <summary>
            Release all resources allocated by the Pdfium library
            </summary>
            <remarks>You can call this function to release all memory blocks allocated by the library. After this function called, you should not call any PDF processing functions.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.UnloadDllFromProcess">
            <summary>
            Unload pdfium dynamic library (.dll/.dylib) from the process.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetLastError">
            <summary>
            Get last error code when an SDK function failed.
            </summary>
            <returns>A 32-bit integer indicating error codes (defined below).
            0 no error; 
            1 unknown error; 
            2 file not found or could not be opened; 
            3 file not in PDF format or corrupted; 
            4 password required or incorrect password; 
            5 unsupported security scheme; 
            6 page not found or content error; 
            1001 the requested operation cannot be completed due to a license restrictions; 
            </returns>
            <remarks>If the previous SDK call succeeded, the return value of this function is not defined. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetFilePath(System.IntPtr)">
            <summary>
            Get file path of an remote goto action
            </summary>
            <param name="action">Handle to the action. Must be a RMEOTEGOTO or LAUNCH action.
            Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetAction(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)"/> function.</param>
            <returns>Return file path of an remote goto action </returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetFont(System.IntPtr,System.Int32)">
            <summary>
            Get font of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>A handle to the font used by the particular character. This handle can be used in 
            FPDFFont_xxx functions for more information about the font</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj">
            <summary>
            Create a new Text Object.
            </summary>
            <returns>Handle to text object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)">
            <summary>
            Create a new Text Object.
            </summary>
            <param name="text">Pointer to a string. The text you want to add in a text object.</param>
            <param name="size">The length of the string</param>
            <param name="font">Handle to the font. It could be FPDFTextObj_GetFont, FPDFFont_AddTrueType 
            and FPDFFont_AddStandardFont".</param>
            <returns>Handle to text object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj">
            <summary>
            Create a new path Object.
            </summary>
            <returns>Handle to path object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AllocMemory(System.UInt32)">
            <summary>
            Allocated memory block in FPDFSDK. This memory can be freed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)"/> function.
            </summary>
            <param name="size">Byte size of requested memory block. Can not be zero.</param>
            <returns>The allocated pointer. IntPtr.Zero if memory not available.</returns>
            <remarks>
            <para>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</para>
            Some FPDFSDK interface may require application to allocate memory for internal use of
            FPDFSDK. In this case application must call this function to allocate memory, don't use
            malloc() or other memory allocator. If an error handler installed and exception/long jump is
            used in the out of memory handling, this function might never return if no memory available.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)">
            <summary>
            Free a memory area allocated by Pdfium SDK.
            </summary>
            <param name="handle">The pointer. Should not be IntPtr.Zero.</param>
            <returns>The allocated pointer. IntPtr.Zero if memory not available.</returns>
            <remarks>
            <para>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</para>
            In case FPDFSDK allocated some memory for user application, the user application must free
            it to avoid memory leakage. And the application must call FPDF_FreeMemory function to do
            that. Do NOT use c/c++ memory free() function or other similar functions.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetStockFont(System.IntPtr,System.String)">
            <summary>
            This method is obsolete. Please use FPDF_GetStockFont instead
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontName">A string that specifies the typeface name of the font.</param>
            <returns>Handle to the new font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetStockFont(System.IntPtr,Patagames.Pdf.Enums.FontStockNames)">
            <summary>
            This method is obsolete. Please use FPDF_GetStockFont instead
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontName">A value that specifies the typeface name of the font.</param>
            <returns>Handle to the new font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_Transform(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="pMatrix">The transform matrix</param>
            <remarks>This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_Transform(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead.
            </summary>
            <param name="image_obj">Handle to the image object</param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix. (x position)</param>
            <param name="f">The coefficient "f" of the matrix. (y position)</param>
            <remarks>This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_Transform(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>		
            <remarks>This method is obsolete. Please use <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/> instead.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Copy(System.IntPtr,System.IntPtr)">
            <summary>
            Copy page object information from one to another
            </summary>
            <param name="dstPage_obj">Handle to destination page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="srcPage_obj">Handle to source page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_InsertObject(System.IntPtr,System.IntPtr)">
            <summary>
             Insert an object to the page. The page object is automatically freed.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDoc_GetPageMode(System.IntPtr)">
            <summary>
             Get the document's PageMode(How the document should be displayed when opened) 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>The flags for page mode.</returns>
            <example><code>
            public void FPDFDoc_GetPageMode()
            {
            	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
            	var mode = Pdfium.FPDFDoc_GetPageMode(doc);
            	Pdfium.FPDF_CloseDocument(doc);		
            }
            </code>
            </example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FSDK_SetUnSpObjProcessHandler(Patagames.Pdf.UNSUPPORT_INFO)">
            <summary>
            Setup A UnSupport Object process handler for Pdfium sdk. 
            </summary>
            <param name="unsp_info">Pointer to a UNSUPPORT_INFO structure.</param>
            <returns>True for success or False if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)">
             <summary>
             Flat a pdf page, annotations or form fields will become part of the page contents.
             </summary>
             <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
             <param name="flag">the flag for the use of flatten result. Zero for normal display, 1 for print.</param>
             <returns>The result flag of the function, See flags above ( FLATTEN_FAIL, FLATTEN_SUCCESS, FLATTEN_NOTHINGTODO ).</returns>
             <remarks>Current Version on all fails return zero.</remarks>
             <example><code>
             public void FPDFPage_Flatten()
             {
             	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
             	IntPtr page = Pdfium.FPDF_LoadPage(doc, 0);
            
             	var ret = Pdfium.FPDFPage_Flatten(page, FlattenFlags.FlatPrint);
             	if (ret != FlattenResults.Success)
            			throw new Exception();
            
             	ret = Pdfium.FPDFPage_Flatten(page, FlattenFlags.NormalDisplay);
             	if (ret != FlattenResults.NothingTodo)
             		throw new Exception();
             
             	Pdfium.FPDF_ClosePage(page);
             	Pdfium.FPDF_CloseDocument(doc);
             }
             </code></example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap_Start(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,Patagames.Pdf.IFSDK_PAUSE)">
             <summary>
             Start to render page contents to a device independent bitmap progressively.
             </summary>
             <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
             <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
             <param name="start_x">Left pixel position of the display area in the bitmap coordinate.</param>
             <param name="start_y">Top pixel position of the display area in the bitmap coordinate.</param>
             <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
             <param name="size_y">Vertical size (in pixels) for displaying the page.</param>
             <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
             <param name="flag">0 for normal display, or combination of flags defined above.</param>
             <param name="pause">The <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> interface.A callback mechanism allowing the page rendering process</param>
             <returns>Rendering Status. See flags for progressive process status for the details.</returns>
             <example><code>
             public void ProgressiveRenderPage()
             {
             	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
             	IntPtr page = Pdfium.FPDF_LoadPage(doc, 0);
             
             	double width, height;
             	Pdfium.FPDF_GetPageSizeByIndex(doc, 0, out width, out height);
             	IntPtr bitmap = Pdfium.FPDFBitmap_Create((int)width, (int)height, true);
             
             	bool needPause = true;
            
             	IFSDK_PAUSE pause = new IFSDK_PAUSE();
             	pause.needToPauseNowCallback = (pthis) =>
             	{
             		return needPause;
             	};
             
             	var ret = Pdfium.FPDF_RenderPageBitmap_Start(bitmap, page, 0, 0, (int)width, (int)height, PageRotate.Normal, RenderFlags.None, pause);
             	if (ret == ProgressiveRenderingStatuses.RenderFailed)
             		throw new Exception();
             	else if (ret == ProgressiveRenderingStatuses.RenderTobeContinued)
             	{
             		needPause = false;
             		ret = Pdfium.FPDF_RenderPage_Continue(page, pause);
             	}
             
             	if (ret == ProgressiveRenderingStatuses.RenderDone)
             		Pdfium.FPDF_RenderPage_Close(page);
             	else
             		throw new Exception();
             		
             	IntPtr buffer = Pdfium.FPDFBitmap_GetBuffer(bitmap);
             	int stride = Pdfium.FPDFBitmap_GetStride(bitmap);
             	using (System.Drawing.Bitmap bmp = new System.Drawing.Bitmap((int)width, (int)height, stride, System.Drawing.Imaging.PixelFormat.Format32bppArgb, buffer))
             	{
             		bmp.Save("FPDF_RenderPage_Continue.png", System.Drawing.Imaging.ImageFormat.Png);
             	}
              
             	Pdfium.FPDFBitmap_Destroy(bitmap);
             	Pdfium.FPDF_ClosePage(page);
             	Pdfium.FPDF_CloseDocument(doc);
             }
             </code></example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage_Continue(System.IntPtr,Patagames.Pdf.IFSDK_PAUSE)">
            <summary>
            Continue rendering a PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="pause">The <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> interface.A callback mechanism allowing the page rendering 
            process to be paused before it's finished. This can be NULL if you don't want to pause.</param>
            <returns>The rendering status. See flags for progressive process status for the details.</returns>
            <remarks>
            In Version 2236 of Pdfium this method is always returns RenderFailed if pause is NULL
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage_Close(System.IntPtr)">
            <summary>
            Release the resource allocate during page rendering. Need to be called after finishing rendering or cancel the rendering.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharIndexFromTextIndex(System.IntPtr,System.Int32)">
            <summary>
            Get the actually char index in text_page's internal char list.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">The index of the text in the string get from <see cref="M:Patagames.Pdf.Pdfium.FPDFText_GetText(System.IntPtr,System.Int32,System.Int32)"/></param>
            <returns>The index of the character in internal charlist. -1 for error</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetMediaBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "MediaBox" entry to the page dictionary.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> SECTION 10.10 Prepress Support 963
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetCropBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "CropBox" entry to the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s media box. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetBleedBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "BleedBox" entry to the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>A rectangle, expressed in default user space units, defining the region to which the contents of the page should be clipped
            when output in a production environment. Default value: the value of CropBox.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetTrimBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "TrimBox" entry to the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks> A rectangle, expressed in default user space units, defining the intended dimensions of the finished page after trimming. Default value: the value of CropBox.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetArtBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "ArtBox" entry to the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>A rectangle, expressed in default user space units, defining the extent of the page’s meaningful content(including potential 
            white space) as intended by the page’s creator. Default value: the value of CropBox.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetMediaBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "MediaBox" entry from the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success, else False</returns>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.</remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7 SECTION 10.10 Prepress Support 963</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetCropBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "CropBox" entry from the page dictionary.		
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success,else False</returns>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s media box. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetBleedBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "BleedBox" entry from the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success, else False</returns>
            <remarks>A rectangle, expressed in default user space units, defining the region to which the contents of the page should be clipped
            when output in a production environment. Default value: the value of CropBox.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetTrimBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "TrimBox" entry from the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success, else False</returns>
            <remarks> A rectangle, expressed in default user space units, defining the intended dimensions of the finished page after trimming. Default value: the value of CropBox.
            </remarks> 
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetArtBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "ArtBox" entry from the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success, else False</returns>
            <remarks>A rectangle, expressed in default user space units, defining the extent of the page’s meaningful content(including potential 
            white space) as intended by the page’s creator. Default value: the value of CropBox.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_TransFormWithClip(System.IntPtr,Patagames.Pdf.FS_MATRIX@,Patagames.Pdf.FS_RECTF@)">
            <summary>
            Transform the whole page with a specified matrix, then clip the page content region.
            </summary>
            <param name="page">A page handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="matrix">The transform matrix</param>
            <param name="clip_rect">A rectangle page area to be clipped</param>
            <returns>True if success,else false</returns>
            <remarks>This function will transform the whole page, and would take effect to all the objects in the page.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_TransformClipPath(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) the clip path of page object.
            </summary>
            <param name="page_object">page_object - Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/> function.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a new clip path, with a rectangle inserted.
            </summary>
            <param name="left">The left of the clip box.</param>
            <param name="bottom">The bottom of the clip box.</param>
            <param name="right">The right of the clip box.</param>
            <param name="top">The top of the clip box.</param>
            <returns>a handle to the clip path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DestroyClipPath(System.IntPtr)">
            <summary>
            Destroy the clip path.
            </summary>
            <param name="clip_path">A handle to the clip path. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_InsertClipPath(System.IntPtr,System.IntPtr)">
            <summary>
            Clip the page content, the page content that outside the clipping region become invisible.
            </summary>
            <param name="page">A page handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="clip_path">A handle to the clip path.  Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)"/> function.</param>
            <remarks>A clip path will be inserted before the page content stream or content array. 
            In this way, the page content will be clipped by this clip path.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetFirstChild(System.IntPtr,System.IntPtr)">
            <summary>
            Get first child of a bookmark item, or first top level bookmark item.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="bookmark">Handle to the current bookmark. Can be IntPtr.Zero if you want to get the first top level item.</param>
            <returns>Handle to the first child or top level bookmark item. IntPtr.Zero if no child or top level bookmark found</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetNextSibling(System.IntPtr,System.IntPtr)">
            <summary>
            Get next bookmark item on the same level.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="bookmark">Handle to the current bookmark. Cannot be IntPtr.Zero</param>
            <returns>Handle to the next bookmark item on the same level. IntPtr.Zero if this is the last bookmark on this level.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_Find(System.IntPtr,System.String)">
            <summary>
            Find a bookmark in the document, using the bookmark title
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions</param>
            <param name="title">The string for the bookmark title to be searched. Can't be NULL.</param>
            <returns>Handle to the found bookmark item. IntPtr.Zero if the title can't be found.</returns>
            <remarks>It always returns the first found bookmark if more than one bookmarks have the same title. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetTitle(System.IntPtr)">
            <summary>
            Get title of a bookmark
            </summary>
            <param name="bookmark">Handle to the bookmark.</param>
            <returns> return title of a bookmark</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetAction(System.IntPtr)">
            <summary>
            Get the action associated with a bookmark item
            </summary>
            <param name="bookmark">Handle to the bookmark</param>
            <returns>Handle to the action data. IntPtr.Zero if no action is associated with this bookmark.
            In this case, the application should try <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)"/></returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get the destination associated with a bookmark item
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/></param>
            <param name="bookmark">Handle to the bookmark</param>
            <returns>Handle to the destination data. IntPtr.Zero if no destination is associated with this bookmark</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetType(System.IntPtr)">
            <summary>
            Get type of an action
            </summary>
            <param name="action">Handle to the action </param>
            <returns>
            A type number as defined below
            0 - Unsupported action type. 
            1 - Go to a destination within current document. 
            2 - Go to a destination within another document.
            3 - Universal Resource Identifier, including web pages and other Internet based resources. 
            4 - Launch an application or open a file. 
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get destination of an action
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="action">Handle to the action. It must be a GOTO or REMOTEGOTO action</param>
            <returns>Handle to the destination data</returns>
            <remarks>In case of remote goto action, the application should first use <see cref="M:Patagames.Pdf.Pdfium.FPDFAction_GetFilePath(System.IntPtr)"/> 
            to get file path, then load that particular document, and use its document handle to call this function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetURIPath(System.IntPtr,System.IntPtr)">
            <summary>
            Get URI path of a URI action 
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="action">Handle to the action. Must be a URI action </param>
            <returns>URI path of a URI action</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDest_GetPageIndex(System.IntPtr,System.IntPtr)">
            <summary>
            Get page index of a destination 
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="destination">Handle to the destination. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAction_GetDest(System.IntPtr,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetDest(System.IntPtr,System.IntPtr)"/> functions.</param>
            <returns>The page index. Starting from 0 for the first page</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="page">Handle to the document page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <returns>Handle to the link. IntPtr.Zero if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get destination info of a link.
            </summary>
            <param name="document">Handle to the document.</param>
            <param name="link">Handle to the link. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)"/> function</param>
            <returns>Handle to the destination. IntPtr.Zero if there is no destination associated with the link, 
            in this case the application should try <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)"/> </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)">
            <summary>
            Get action info of a link
            </summary>
            <param name="link">Handle to the link. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)"/></param>
            <returns>Handle to the action. IntPtr.Zero if there is no action associated with the link.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)">
            <summary>
            This function would enumerate all the link annotations in a single PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="start_pos">The start position to enumerate the link annotations, which should be specified to start 
            from -	0 for the first call, and would receive the next position for enumerating to start from.</param>
            <param name="link_annot">Receive the link handle</param>
            <returns>TRUE if succceed, else False;</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetAnnotRect(System.IntPtr,Patagames.Pdf.FS_RECTF@)">
            <summary>
            Get the annotation rectangle. (Specified by the Ў°RectЎ± entry of annotation dictionary).
            </summary>
            <param name="link_annot">Handle to the link annotation.</param>
            <param name="rect">The annotation rect.</param>
            <returns>TRUE if succceed, else False;</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountQuadPoints(System.IntPtr)">
            <summary>
            Get the count of quadrilaterals fo the link annotation
            </summary>
            <param name="link_annot">Handle to the link annotation received by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)"/> function.</param>
            <returns>The count of quadrilaterals.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetQuadPoints(System.IntPtr,System.Int32,Patagames.Pdf.FS_QUADPOINTSF@)">
            <summary>
            Get the quadrilateral from link annotation  at the specified index.
            </summary>
            <param name="link_annot">Handle to the link annotation received by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)"/> function.</param>
            <param name="quadIndex">The index of the quadrilateral.</param>
            <param name="quadPoints">Receive the quadrilateral.</param>
            <returns>True if succeed, else False</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetMetaText(System.IntPtr,Patagames.Pdf.Enums.DocumentTags)">
            <summary>
            Get meta-data tag content from document.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag to retrieve.</param>
            <returns>The meta-data tag content.</returns>
            <overloads>Get meta-data tag content from document.</overloads>
            <remarks>
             Currently, The tag can be one of "Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For detailed explanation of these tags and their respective values, please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetMetaText(System.IntPtr,System.String)">
            <summary>
            Get meta-data tag content from document.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag to retrieve.</param>
            <returns>The meta-data tag content.</returns>
            <overloads>Get meta-data tag content from document.</overloads>
            <remarks>
             Currently, The tag can be one of "Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For detailed explanation of these tags and their respective values, please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetMetaText(System.IntPtr,Patagames.Pdf.Enums.DocumentTags,System.String)">
            <summary>
            Set the specified text to document meta-data under the specified tag.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag to which text should be set.</param>
            <param name="text">The text to be set.</param>
            <returns>
            Returns TRUE if successful, FALSE otherwise. Returns FALSE if Info dictionary does not exists.
            </returns>
            <overloads>Set the specified text to document meta-data under the specified tag.</overloads>
            <remarks>
             Currently, The tag can be one of "Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For detailed explanation of these tags and their respective values, please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </remarks>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetMetaText(System.IntPtr,System.String,System.String)">
            <summary>
            Set specidied text to document meta-data under specified tag.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag to be set.</param>
            <param name="text">The text to be set</param>
            <returns>
            Returns TRUE if successful, FALSE otherwise. Returns FALSE if Info dictionary does not exists.
            </returns>
            <remarks>
             Currently, The tag can be one of "Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For detailed explanation of these tags and their respective values, please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument">
            <summary>
            Create a new PDF document.
            </summary>
            <returns>A handle to a document. If failed, IntPtr.Zero is returned</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            Construct an empty page
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="page_index">The index of a page</param>
            <param name="width">The page width</param>
            <param name="height">The page height.</param>
            <returns>The handle to a page. IntPtr.Zero if any error occurs.</returns>
            <remarks>Loaded page can be deleted by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Delete(System.IntPtr,System.Int32)"/> functions</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_Delete(System.IntPtr,System.Int32)">
            <summary>
            Delete a PDF page.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/>.</param>
            <param name="page_index">The index of a page.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetRotation(System.IntPtr)">
            <summary>
            Get the page rotation. One of following values will be returned：0(0), 1(90), 2(180), 3(270).
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <returns>The PDF page rotation</returns>
            <remarks>The PDF page rotates clockwise.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetRotation(System.IntPtr,Patagames.Pdf.Enums.PageRotate)">
            <summary>
            Set page rotation. One of following values will be set: 0(0), 1(90), 2(180), 3(270).
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="rotate">The value of the PDF page rotation</param>
            <remarks>The PDF page rotates clockwise. When it’s done, the content in this pagewill be changed. 
            You must call the <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> to reload the page</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_AddObject(System.IntPtr,System.IntPtr)">
            <summary>
            Add an object to the page. The page object is automatically freed.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_InsertObject(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Add an object to the objects coolection after specified index. The page object is automatically freed.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/>.</param>
            <param name="index">>The zero-based index at which object should be inserted.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_RemoveObject(System.IntPtr,System.Int32)">
            <summary>
            Remove object from the collection at specified index.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_CountObject(System.IntPtr)">
            <summary>
            Get number of page objects inside the page
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <returns>The number of the page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)">
            <summary>
            Get page object by index
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="index">The index of a page object.</param>
            <returns>The Handle to the page object. IntPtr.Zero for failed</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_HasTransparency(System.IntPtr)">
            <summary>
            Check whether the content of specified PDF page contains transparency or not.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>.</param>
            <returns>TRUE means that the PDF page does contains transparency. Otherwise, returns FALSE</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContent(System.IntPtr)">
            <summary>
            Generate PDF Page content. 
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <returns>True if successful, false otherwise.</returns>
            <remarks>Before you save the page to a file, or reload the page, you must call the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContent(System.IntPtr)"/> function  or any changes to <paramref name="page"/> will be lost.
            <note type="note">Only images may be generated by this method.</note>
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Pdfium.GenerateContentCallback">
            <summary>
            Delegate that reperesents an application-defined callback function used with the 
            <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx(System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)"/> and  
            <see cref="M:Patagames.Pdf.Pdfium.FPDF_GenerateContentToStream(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)"/> methods.
            </summary>
            <param name="userData">The application-defined value given in the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx(System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_GenerateContentToStream(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)"/> methods.</param>
            <param name="current">The sequence number of the object being processed.</param>
            <param name="total">The total number of page objects.</param>
            <returns>To continue generation, the callback function must return <strong>True</strong>; to stop generation, it must return <strong>False</strong>.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx(System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)">
            <summary>
            Generate PDF Page content from the specified list of page objects.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <param name="objList">Handle to a list of objects, returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromPage(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromForm(System.IntPtr)"/>. Can be IntPtr.Zero</param>
            <param name="callback">A delegate that represents an application-defined callback function. For more information, see <see cref="T:Patagames.Pdf.Pdfium.GenerateContentCallback"/></param>
            <param name="userData">An application-defined data to be passed to the callback function.</param>
            <returns>True if successful, false otherwise. If user cancel generation, return value is TRUE.</returns>
            <remarks>
            If handle to the list object is IntPtr.Zero then the page content will be generated, otherwise the content of the specified list.
            You should generate page content before you save or reload it or any changes to <paramref name="page"/> will be lost.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx(System.IntPtr,System.IntPtr)">
            <summary>
            Generate PDF Page content from the specified list of page objects.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <param name="objList">Handle to a list of objects, returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromPage(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromForm(System.IntPtr)"/>. Can be IntPtr.Zero</param>
            <returns>True if successful, false otherwise.</returns>
            <remarks>
            If handle to the list object is IntPtr.Zero then the page content will be generated, otherwise the content of the specified list.
            You should generate page content before you save or reload it or any changes to <paramref name="page"/> will be lost.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx(System.IntPtr)">
            <summary>
            Generate PDF Page content. 
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <returns>True if successful, false otherwise.</returns>
            <remarks>
            Before you save the page to a file, or reload the page, you must call the <see cref="O:Patagames.Pdf.Pdfium.FPDFPage_GenerateContentEx"/> function  or any changes to <paramref name="page"/> will be lost.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GenerateContentToStream(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,Patagames.Pdf.Pdfium.GenerateContentCallback,System.IntPtr)">
            <summary>
            Generate stream content from the specified  list of object and write it to the stream. 
            </summary>
            <param name="doc">Handle to a document.</param>
            <param name="objList">Handle to a list of objects, returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromPage(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromForm(System.IntPtr)"/></param>
            <param name="stream">Handle to the Stream object.</param>
            <param name="resDict">Handle to dictionary, where the rosurces will be generated. If IntPtr.Zero, then resources will be generated to the stream dictionary.</param>
            <param name="callback">A delegate that represents an application-defined callback function. For more information, see <see cref="T:Patagames.Pdf.Pdfium.GenerateContentCallback"/></param>
            <param name="userData">An application-defined data to be passed to the callback function.</param>
            <returns>True if successful, false otherwise. If user cancel generation, return value is TRUE.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GenerateContentToStream(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Generate stream content from the specified  list of object and write it to the stream. 
            </summary>
            <param name="doc">Handle to a document.</param>
            <param name="objList">Handle to a list of objects, returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromPage(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromForm(System.IntPtr)"/></param>
            <param name="stream">Handle to the Stream object.</param>
            <param name="resDict">Handle to dictionary, where the rosurces will be generated. If IntPtr.Zero, then resources will be generated to the stream dictionary.</param>
            <returns>False if any error is occured, otherwise true.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromPage(System.IntPtr)">
            <summary>
            Get handle to the page objects list from page. 
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <returns>Handle to the list.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetListFromForm(System.IntPtr)">
            <summary>
            Get handle to the page objects list from form object. 
            </summary>
            <param name="formContent">Handle to content of form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns>Handle to the list.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_HasTransparency(System.IntPtr)">
            <summary>
            Check whether the specified PDF page object contains transparency or not.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/> and etc.</param>
            <returns>TRUE means that the PDF page object does contains transparency. Otherwise, returns FALSE.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/> and etc.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_TransformAnnots(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) all annots in a page.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/> and others</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_ImportPages(System.IntPtr,System.IntPtr,System.String,System.Int32)">
            <summary>
            Import some pages to a PDF document.
            </summary>
            <param name="dest_doc">The destination document which add the pages.</param>
            <param name="src_doc">A document to be imported.</param>
            <param name="pagerange">A page range string, Such as "1,3,5-7". If this parameter is NULL, it would import all pages in src_doc.</param>
            <param name="index">The page index wanted to insert from.</param>
            <returns>TRUE for succeed, FALSE for Failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CopyViewerPreferences(System.IntPtr,System.IntPtr)">
            <summary>
            Copy the viewer preferences from one PDF document to another
            </summary>
            <param name="dest_doc">Handle to document to write the viewer preferences to.</param>
            <param name="src_doc">Handle to document with the viewer preferences.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)">
            <summary>
            Saves the copy of specified document in custom way.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="saveData">A pointer to a custom file write structure</param>
            <param name="flag">The creating flags.</param>
            <returns>TRUE for succeed, FALSE for failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Same as function <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/>, except the file Version of the saved document could be specified by user.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="saveData">A pointer to a custom file write structure</param>
            <param name="flag">The creating flags.</param>
            <param name="fileVersion">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)">
            <summary>
            Prepare information about all characters in a page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <returns>A handle to the text page information structure. IntPtr.Zero if something goes wrong.</returns>
            <remarks>Application must call <see cref="M:Patagames.Pdf.Pdfium.FPDFText_ClosePage(System.IntPtr)"/> to release the text page information. 
            If you didn’t purchase Text Module , this function will return IntPtr.Zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_ClosePage(System.IntPtr)">
            <summary>
            Release all resources allocated for a text page information structure
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_CountChars(System.IntPtr)">
            <summary>
            Get number of characters in a page
            </summary>
            <param name="text_page">Handle to a text page information structure returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <returns>Number of characters in the page. Return -1 for error.
            Generated characters, like additional space characters, new line characters, are also
            counted.</returns>
            <remarks>Characters in a page form a "stream", inside the stream, each character has an index.
            We will use the index parameters in many of FPDFTEXT functions. The first character in the
            page has an index value of zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetUnicode(System.IntPtr,System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>The Unicode of the particular character.
            If a character is not encoded in Unicode and Pdfium engine can't convert to Unicode,
            the return value will be zero.</returns>
            <overloads>Get Unicode of a character in a page</overloads>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetUnicodeEx(System.IntPtr,System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>The Unicode of the particular character.
            If a character is not encoded in Unicode and Pdfium engine can't convert to Unicode,
            the return value will be zero character (\0).</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetFontSize(System.IntPtr,System.Int32)">
            <summary>
            Get the font size of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="index">Zero-based index of the character.</param>
            <returns>The font size of the particular character, measured in points (about 1/72 inch). This is the typographic size of the font (so called "em size").</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharBox(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get bounding box of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="index">Zero-based index of the character.</param>
            <param name="left">Pointer to a double number receiving left position of the character box</param>
            <param name="right">Pointer to a double number receiving right position of the character box.</param>
            <param name="bottom">Pointer to a double number receiving bottom position of the character box</param>
            <param name="top">Pointer to a double number receiving top position of the character box.</param>
            <remarks>All positions are measured in PDF "user space"</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharIndexAtPos(System.IntPtr,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Get the index of a character at or nearby a certain position on the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="x">X position in PDF "user space"</param>
            <param name="y">Y position in PDF "user space"</param>
            <param name="xTolerance">An x-axis tolerance value for character hit detection, in point unit.</param>
            <param name="yTolerance">A y-axis tolerance value for character hit detection, in point unit</param>
            <returns>The zero-based index of the character at, or nearby the point (x,y).
            If there is no character at or nearby the point, return value will be -1.
            If an error occurs, -3 will be returned.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetText(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Extract unicode text string from the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="start_index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>Unicode text string from the page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_CountRects(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Count number of rectangular areas occupied by a segment of texts.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="start_index">Index for the start characters</param>
            <param name="count">Number of characters</param>
            <returns>Number of rectangles. Zero for error</returns>
            <remarks>This function, along with <see cref="M:Patagames.Pdf.Pdfium.FPDFText_GetRect(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)"/> can be used by applications to detect the position
            on the page for a text segment, so proper areas can be highlighted or something. FPDFTEXT
            will automatically merge small character boxes into bigger one if those characters are on the
            same line and use same font settings.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetRect(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get a rectangular area from the result generated by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_CountRects(System.IntPtr,System.Int32,System.Int32)"/>.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="rect_index">Zero-based index for the rectangle</param>
            <param name="left">Pointer to a double value receiving the rectangle left boundary.</param>
            <param name="top">Pointer to a double value receiving the rectangle top boundary</param>
            <param name="right">Pointer to a double value receiving the rectangle right boundary.</param>
            <param name="bottom">Pointer to a double value receiving the rectangle bottom boundary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetBoundedText(System.IntPtr,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Extract unicode text within a rectangular boundary on the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary.</param>
            <returns>Unicode text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="findwhat">A unicode match pattern</param>
            <param name="flags">Option flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details </param>
            <param name="start_index">Start from this character. -1 for end of the page</param>
            <returns>A handle for the search context. <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindClose(System.IntPtr)"/> must be called to release this handle</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindNext(System.IntPtr)">
            <summary>
            Search in the direction from page start to end.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
            <returns>Whether a match is found</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindPrev(System.IntPtr)">
            <summary>
            Search in the direction from page end to start.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
            <returns>Whether a match is found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetSchResultIndex(System.IntPtr)">
            <summary>
            Get the starting character index of the search result.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/>.</param>
            <returns>Index for the starting character</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetSchCount(System.IntPtr)">
            <summary>
            Get the number of matched characters in the search result
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/>.</param>
            <returns>Number of matched characters</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindClose(System.IntPtr)">
            <summary>
            Release a search context
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)">
            <summary>
            Prepare information about weblinks in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <returns>A handle to the page's links information structure. IntPtr.Zero if something goes wrong</returns>
            <remarks>
            Weblinks are those links implicitly embedded in PDF pages. PDF also has a type of annotation
            called "link", FPDFTEXT doesn't deal with that kind of link. FPDFTEXT weblink feature is
            useful for automatically detecting links in the page contents. For example, things like
            "http://www.patagames.com" will be detected, so applications can allow user to click on those
            characters to activate the link, even the PDF doesn't come with link annotations.
            <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_CloseWebLinks(System.IntPtr)"/> must be called to release resources.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountWebLinks(System.IntPtr)">
            <summary>
            Count number of detected web links.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <returns>Number of detected web links.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetURL(System.IntPtr,System.Int32)">
            <summary>
            Fetch the URL information for a detected web link.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link</param>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountRects(System.IntPtr,System.Int32)">
            <summary>
            Count number of rectangular areas for the link.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link.</param>
            <returns>Number of rectangular areas for the link.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetRect(System.IntPtr,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Fetch the boundaries of a rectangle for a link
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link</param>
            <param name="rect_index">Zero-based index for a rectangle</param>
            <param name="left">Pointer to a double value receiving the rectangle left boundary</param>
            <param name="top">Pointer to a double value receiving the rectangle top boundar</param>
            <param name="right">Pointer to a double value receiving the rectangle right boundary</param>
            <param name="bottom">Pointer to a double value receiving the rectangle bottom boundary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CloseWebLinks(System.IntPtr)">
            <summary>
            Release resources used by weblink feature.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)">
            <summary>
            Open and load a PDF document.
            </summary>
            <param name="file_path">Path to the PDF file (including extension)</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned</returns>
            <remarks>Loaded document can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>.
            If this function fails, you can use <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/> to retrieve the reason why it fails.
            <note type="note">
            With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)">
            <summary>
            Open and load a PDF document from memory.
            </summary>
            <param name="file_content">Pointer to a buffer containing the PDF document.</param>
            <param name="content_size">Number of bytes in the PDF document.</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned.</returns>
            <remarks>
            The memory buffer must remain valid when the document is open. Loaded document can be
            closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>. 
            If this function fails, you can use <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/> to retrieve the reason why it fails.
            <note type="note">
            With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)">
            <summary>
            Load PDF document from a custom access descriptor.
            </summary>
            <param name="pFileAccess">A structure for access the file.</param>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned.</returns>
            <remarks>The application should maintain the file resources being valid until the PDF document close.
            Loaded document can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>.
            If this function fails, you can use <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/> to retrieve the reason why it fails.
            <note type="note">
            With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb; 4.5 - 5 Mb and so on.
            </note> 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetFileVersion(System.IntPtr,System.Int32@)">
            <summary>
            Get the file Version of the specific PDF document.
            </summary>
            <param name="doc">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/></param>
            <param name="fileVersion">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <returns>TRUE if this call succeed, If failed, FALSE is returned.</returns>
            <remarks>If the document is created by function <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>, then this function would always fail.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetDocPermissions(System.IntPtr)">
            <summary>
            Get file permission flags of the document.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>A 32-bit integer indicating permission flags. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description. If the document is not protected, 0xffffffff will be returned.</returns>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetSecurityHandlerRevision(System.IntPtr)">
            <summary>
            Get the revision for security handler.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>The security handler revision number. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description. If the document is not protected, -1 will be returned.</returns>
            <seealso href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)">
            <summary>
            Close a loaded PDF document.
            </summary>
            <param name="document">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageCount(System.IntPtr)">
            <summary>
            Get total number of pages in a document
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Total number of pages in the document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)">
            <summary>
            Load a page inside a document.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Index number of the page. 0 for the first page.</param>
            <returns>A handle to the loaded page. If failed, IntPtr.Zero is returned.</returns>
            <remarks>Loaded page can be rendered to devices using <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function. 
            Loaded page can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)"/>.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageWidth(System.IntPtr)">
            <summary>
            Get page width
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>Page width (excluding non-displayable area) measured in points. One point is 1/72 inch (around 0.3528 mm)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageHeight(System.IntPtr)">
            <summary>
            Get page height
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>Page height (excluding non-displayable area) measured in points. One point is 1/72 inch (around 0.3528 mm)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageSizeByIndex(System.IntPtr,System.Int32,System.Double@,System.Double@)">
            <summary>
            Get the size of a page by index.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Page index, zero for the first page.</param>
            <param name="width">Pointer to a double value receiving the page width (in points).</param>
            <param name="height">Pointer to a double value receiving the page height (in points).</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageSizes(System.IntPtr,System.Single[])">
            <summary>
            Get the sizes of all pages in document
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="buffer">Pointer to a buffer of pairs of float values receiving the pages size.</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageRotationByIndex(System.IntPtr,System.Int32,Patagames.Pdf.Enums.PageRotate@)">
            <summary>
            Get the page rotation. 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Page index, zero for the first page.</param>
            <param name="rotation">Pointer to an integer value receiving the page rotation. One of following values will be returned：0(0), 1(90), 2(180), 3(270).</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device (screen, bitmap, or printer). This function is only supported on Windows system.
            </summary>
            <param name="hdc">Handle to device context</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise)</param>
            <param name="flags">0 for normal display, or combination of flags defined below
            0x01 Set if annotations are to be rendered
            0x02 Set if using text rendering optimized for LCD display
            0x04 Set if you don't want to use GDI+
            Applicable to desktop Windows systems only.
            0x08 Grayscale output
            0x80 Set if you want to get some debug info.
            0x100 Set if you don't want to catch exception
            </param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap
            </summary>
            <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise)</param>
            <param name="flags">0 for normal display, or combination of flags defined below
            0x01 Set if annotations are to be rendered
            0x02 Set if using text rendering optimized for LCD display
            0x04 Set if you don't want to use GDI+
            Applicable to desktop Windows systems only.
            0x08 Grayscale output
            0x80 Set if you want to get some debug info.
            0x100 Set if you don't want to catch exception
            </param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)">
            <summary>
            Close a loaded PDF page.
            </summary>
            <param name="page">Handle to the loaded page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="device_x">X value in device coordinate, for the point to be converted</param>
            <param name="device_y">Y value in device coordinate, for the point to be converted</param>
            <param name="page_x">A pointer to a double value receiving the converted X value in page coordinate</param>
            <param name="page_y">A pointer to a double value receiving the converted Y value in page coordinate</param>
            <remarks>The page coordinate system has its origin at left-bottom corner of the page, with X axis goes
            along the bottom side to the right, and Y axis goes along the left side upward. NOTE: this
            coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on
            the page should always have the same coordinate values in the page coordinate system.
            The device coordinate system is device dependant. For screen device, its origin is at left-top
            corner of the window. However this origin can be altered by Windows coordinate
            transformation utilities. You must make sure the start_x, start_y, size_x, size_y and rotate
            parameters have exactlysame values as you used in <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function call.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_PageToDevice(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Convert the page coordinate of a point to screen coordinate
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="page_x">X value in page coordinate, for the point to be converted</param>
            <param name="page_y">Y value in page coordinate, for the point to be converted</param>
            <param name="device_x">A pointer to an integer value receiving the result X value in device coordinate</param>
            <param name="device_y">A pointer to an integer value receiving the result Y value in device coordinate</param>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB)
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0.</param>
            <param name="isUseAlpha">A flag indicating whether alpha channel is used.</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory.</returns>
            <remarks>An FXDIB always use 4 byte per pixel. The first byte of a pixel is always double word aligned.
            Each pixel contains red (R), green (G), blue (B) and optionally alpha (A) values. The byte order
            is BGRx (the last byte unused if no alpha channel) or BGRA. The pixels in a horizontal line
            (also called scan line) are stored side by side, with left most pixel stored first (with lower
            memory address). Each scan line uses width*4 bytes. Scan lines are stored one after another,
            with top most scan line stored first. There is no gap between adjacent scan lines.
            This function allocates enough memory for holding all pixels in the bitmap, but it doesn't
            initialize the buffer. Applications can use <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_FillRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/> to fill the bitmap using any
            color.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CreateEx(System.Int32,System.Int32,Patagames.Pdf.Enums.FXDIBFormats,System.IntPtr,System.Int32)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB)
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0</param>
            <param name="format">A number indicating for bitmap format, as defined below
            1 Gray scale bitmap, one byte per pixel
            2 3 bytes per pixel, byte order: blue, green, red
            3 4 bytes per pixel, byte order: blue, green, red, unused
            4 4 bytes per pixel, byte order: blue, green, red, alpha</param>
            <param name="first_scan">A pointer to the first byte of first scan line, for external buffer only. If this parameter is IntPtr.Zero, then the SDK will create its own buffer.</param>
            <param name="stride">Number of bytes for each scan line, for external buffer only</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory</returns>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            Bitmap created by this function can be used in any place that a FPDF_BITMAP handle is
            required. If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)"/> function will not destroy the buffer.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CreateEx(System.Int32,System.Int32,Patagames.Pdf.Enums.BitmapFormats,System.IntPtr,System.Int32)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB) with extended formats
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0</param>
            <param name="format">A number indicating for bitmap format, as defined in <see cref="T:Patagames.Pdf.Enums.BitmapFormats"/> enumeration</param>
            <param name="first_scan">A pointer to the first byte of first scan line, for external buffer only. If this parameter is IntPtr.Zero, then the SDK will create its own buffer.</param>
            <param name="stride">Number of bytes for each scan line, for external buffer only</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory</returns>
            <remarks>
            Similar to <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            Bitmap created by this function can be used in any place that a FPDF_BITMAP handle is
            required. If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)"/> function will not destroy the buffer.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_FillRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fill a rectangle area in an FXDIB
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="color">A 32-bit value specifing the color, in 8888 ARGB format</param>
            <remarks>This function set the color and (optionally) alpha value in specified region of the bitmap. NOTE:
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha. If alpha channel
            is not used, the "alpha" parameter is ignored.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetBuffer(System.IntPtr)">
            <summary>
            Get data buffer of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The pointer to the first byte of the bitmap buffer.</returns>
            <remarks>Applications can use this function to get the bitmap buffer pointer, then manipulate any color and/or alpha values for any pixels in the bitmap.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetWidth(System.IntPtr)">
            <summary>
            Get width of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of pixels in a horizontal line of the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetHeight(System.IntPtr)">
            <summary>
            Get height of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of pixels in a vertical line of the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetStride(System.IntPtr)">
            <summary>
            Get number of bytes for each scan line in the bitmap buffer
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of bytes for each scan line in the bitmap buffer.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)">
            <summary>
            Destroy an FXDIB and release all related buffers 
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <remarks>This function will not destroy any external buffer.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetPrintScaling(System.IntPtr)">
            <summary>
            Whether the PDF document prefers to be scaled or not.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>True if PDF document prefers to be scaled</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetNumCopies(System.IntPtr)">
            <summary>
            Returns the number of copies to be printed.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The number of copies to be printed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetPrintPageRange(System.IntPtr)">
            <summary>
            Page numbers to initialize print dialog box when file is printed.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The print page range to be used for printing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetDuplex(System.IntPtr)">
            <summary>
            Returns the paper handling option to be used when printing from print dialog.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The paper handling option to be used when printing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CountNamedDests(System.IntPtr)">
            <summary>
            Get the count of named destinations in the PDF document.
            </summary>
            <param name="document">Handle to a document</param>
            <returns>The count of named destinations.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetNamedDestByName(System.IntPtr,System.String)">
            <summary>
            Get a special dest handle by the name.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <param name="name">The name of a special named dest.</param>
            <returns>The Handle to the dest.</returns>
            <remarks>This method have problem with non english national character encoding</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetNamedDest(System.IntPtr,System.Int32,System.String@)">
            <summary>
            Get the specified named destinations of the PDF document by index.
            </summary>
            <param name="document">Handle to a document</param>
            <param name="index">The index of named destination.</param>
            <param name="name">Retrieve the name of named destinations</param>
            <returns>The destination Handle to a named destination, or IntPtr.Zero if no named destination corresponding to |index|.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetSandBoxPolicy(Patagames.Pdf.Enums.SandboxPolicies,System.Boolean)">
            <summary>
            Set the policy for the sandbox environment.
            </summary>
            <param name="policy">The specified policy for setting, for example:FPDF_POLICY_MACHINETIME_ACCESS.</param>
            <param name="enable">True for enable, False for disable the policy.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)">
            <summary>
            Create a document availability provider.
            </summary>
            <param name="file_avail">Pointer to file availability interface to check availability of file data.</param>
            <param name="file">Pointer to a file access interface for reading data from file.</param>
            <returns>A handle to the document availability provider. IntPtr.Zero for error.</returns>
            <remarks>Application must call <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Destroy(System.IntPtr)"/> when done with the availability provider.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_Destroy(System.IntPtr)">
            <summary>
            Destroy a document availibity provider.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsDocAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether the document is ready for loading, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the application can call <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> to get a document handle.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)">
            <summary>
            Get document from the availability provider.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <returns>Handle to the document.</returns>
            <remarks>
            After <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_IsDocAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)"/> returns TRUE, the application should call this function to
            get the document handle. To close the document, use <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/> function.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_GetFirstPageNum(System.IntPtr)">
            <summary>
            Get page number for the first available page in a linearized PDF
            </summary>
            <param name="document">A document handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/></param>
            <returns>Zero-based index for the first available page.</returns>
            <remarks>For most linearized PDFs, the first available page would be just the first page, however,
            some PDFs might make other page to be the first available page.
            For non-linearized PDF, this function will always return zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsPageAvail(System.IntPtr,System.Int32,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether a page is ready for loading, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="page_index">Index number of the page. 0 for the first page.</param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> if called.
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the 
            application can perform page loading.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsFormAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether Form data is ready for init, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>
            Non-zero for Form data is fully available, 0 for Form data not yet available.
            Details: -1 - error, the input parameter not correct, such as hints is null.
            0 - data not available
            1 - data available
            2 - no form data.	
            </returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> is called. 
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the 
            application can perform page loading. It is recommend to call <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>
            after the function returns non-zero value.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsLinearized(System.IntPtr)">
            <summary>
            To check whether a document is Linearized PDF file.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <returns>
            IsLinearized is a linearize file.
            NotLinearized is not a linearize file.
            UnknownLinearized don't know whether the file is a linearize file.
            </returns>
            <remarks>
            return IsLinearized means the document is linearized PDF else not.
            It return IsLinearized/NotLinearized state as soon as we have first 1K data. If the file's size less than
            1K,we don't known whether the PDF is a linearized file.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)">
            <summary>
            Init form fill environment. 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="formInfo">Pointer to a <see cref="T:Patagames.Pdf.FPDF_FORMFILLINFO"/> structure.</param>
            <param name="jsPlatform">Pointer to a <see cref="T:Patagames.Pdf.IPDF_JSPLATFORM"/> structure.</param>
            <returns>Return handle to the form fill module. IntPtr.Zero means fails. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Init form fill environment. 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="formInfo">Pointer to a <see cref="T:Patagames.Pdf.FPDF_FORMFILLINFO"/> structure located in the unmanaged memory.</param>
            <param name="jsPlatform">Pointer to a <see cref="T:Patagames.Pdf.IPDF_JSPLATFORM"/> structure located in the unmanaged memory.</param>
            <returns>Return handle to the form fill module. IntPtr.Zero means fails. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDOC_ExitFormFillEnvironment(System.IntPtr)">
            <summary>
            Exit form fill environment. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnAfterLoadPage(System.IntPtr,System.IntPtr)">
            <summary>
            This method is required for implementing all the form related functions. Should be invoked after user 
            successfully loaded a PDF page, and method <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/> had been invoked.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnBeforeClosePage(System.IntPtr,System.IntPtr)">
            <summary>
            This method is required for implementing all the form related functions. Should be invoked before user close the PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentJSAction(System.IntPtr)">
            <summary>
            This method is required for performing Document-level JavaScript action. It should be invoked after the PDF document had been loaded.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <remarks>If there is Document-level JavaScript action embedded in the document, this method will execute the javascript action;
            otherwise, the method will do nothing.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentOpenAction(System.IntPtr)">
            <summary>
            This method is required for performing open-action when the document is opened.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <remarks>This method will do nothing if there is no open-actions embedded in the document. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentAAction(System.IntPtr,Patagames.Pdf.Enums.DocumentActionTypes)">
            <summary>
            This method is required for performing the document's additional-action.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="aatype"> The type of the additional-actions. See <see cref="T:Patagames.Pdf.Enums.DocumentActionTypes"/> for detail</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoPageAAction(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.PageActionTypes)">
            <summary>
            This method is required for performing the page object's additional-action when opened or closed.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="aatype">The type of the page object's additional-actions. See <see cref="T:Patagames.Pdf.Enums.PageActionTypes"/> for details.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnMouseMove(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the mouse cursor moves.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnLButtonDown(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the user presses the left mouse button.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnLButtonUp(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the user releases the left mouse button.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnKeyDown(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="keyCode">Indicates whether various virtual keys are down. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnKeyUp(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a nonsystem key is released. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="keyCode">Indicates whether various virtual keys are released. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
            <remarks>In Version 2236 of Pdfium this method is not implemented and always returns False</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnChar(System.IntPtr,System.IntPtr,System.Int32,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a keystroke translates to a nonsystem character.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="nChar">The character code value of the key.</param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_ForceToKillFocus(System.IntPtr)">
            <summary>
            You can call this member function to force to kill the focus of the form field which got focus.
            It would kill the focus on the form field, save the value of form field if it's changed by user.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDPage_HasFormFieldAtPoint(System.IntPtr,System.IntPtr,System.Double,System.Double)">
            <summary>
            Check the form field position by point.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="page_x">X position in PDF "user space".</param>
            <param name="page_y">Y position in PDF "user space".</param>
            <returns>Return the type of the formfiled; -1 indicates no fields.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetFormFieldHighlightColor(System.IntPtr,Patagames.Pdf.Enums.FormFieldTypes,System.Int32)">
            <summary>
            Set the highlight color of specified or all the form fields in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="field_type">A 32-bit integer indicating the type of a form field.</param>
            <param name="color">The highlight color of the form field.Constructed by 0xxxrrggbb.</param>
            <remarks>When the parameter fieldType is set to zero, the highlight color will be applied to all the form fields in the document.
            Please refresh the client window to show the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetFormFieldHighlightAlpha(System.IntPtr,System.Byte)">
            <summary>
            Set the transparency of the form field highlight color in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="alpha">The transparency of the form field highlight color. between 0-255.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RemoveFormFieldHighlight(System.IntPtr)">
            <summary>
            Remove the form field highlight color in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <remarks>Please refresh the client window to remove the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_FFLDraw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render FormFeilds on a page to a device independent bitmap. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate.</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate.</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <remarks>
            This method is designed to only render annotations and FormFields on the page. 
            Without FPDF_ANNOT specified for flags, Rendering functions such as <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap_Start(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,Patagames.Pdf.IFSDK_PAUSE)"/> will only render page contents(without annotations) to a bitmap.
            In order to implement the FormFill functions,Implementation should call this method after rendering functions finish rendering the page contents.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)">
            <summary>
            Add a system font to the list in Pdfium SDK.
            </summary>
            <param name="mapper">Opaque pointer to Pdfium font mapper</param>
            <param name="face">The font face name</param>
            <param name="charset">Font character set. See <see cref="T:Patagames.Pdf.Enums.CharacterSetTypes"/>.</param>
            <remarks>This function is only called during the system font list building process.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetSystemFontInfo(Patagames.Pdf.FPDF_SYSFONTINFO)">
            <summary>
            Set the system font info interface into Pdfium SDK
            </summary>
            <param name="pFontInfo">Pointer to a <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> structure</param>
            <remarks>Platform support implementation should implement required methods of <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> interface,
            then call this function during SDK initialization process.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetDefaultSystemFontInfo">
            <summary>
            Get default system font info interface for current platform
            </summary>
            <returns>Pointer to a <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> structure describing the default interface.
            Or NULL if the platform doesn't have a default interface.
            Application should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)"/> to free the returned pointer.</returns>
            <remarks>For some platforms Pdfium SDK implement a default Version of system font info interface.
            The default implementation can be used in <see cref="M:Patagames.Pdf.Pdfium.FPDF_SetSystemFontInfo(Patagames.Pdf.FPDF_SYSFONTINFO)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPRINT_Open(System.IntPtr,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PrintScallingMode)">
            <summary>
            Prepares given document for direct printing
            </summary>
            <param name="document">A document handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="pageRange">A page range string, Such as "1,3,5-7". If this parameter is NULL, it would import all pages in src_doc.</param>
            <param name="paperWidth">A paper width in points.</param>
            <param name="paperHeight">A paper height in points.</param>
            <param name="printableAreaLeft">A Page printable area values in points.</param>
            <param name="printableAreaTop">A Page printable area values in points.</param>
            <param name="printableAreaRight">A Page printable area values in points.</param>
            <param name="printableAreaBottom">A Page printable area values in points.</param>
            <param name="ScallingMode">The scalling mode.</param>
            <returns>
            If the function succeeds, the return value is an open handle to the direct print object.
            If the function fails, the return value is IntPtr.Zero.
            To get extended error information, call <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/>.
            </returns>
            <remarks>
            When an application is finished using the object handle returned by FPDFPRINT_Open, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFPRINT_Close(System.IntPtr)"/> function to close the handle. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPRINT_GetData(System.IntPtr)">
            <summary>
            Gets the content of prepared document
            </summary>
            <param name="printHandle">A valid handle to an open direct printing object.</param>
            <returns>Content of prepared document or null if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPRINT_GetDocument(System.IntPtr)">
            <summary>
            Gets the handle to the prepared document
            </summary>
            <param name="printHandle">A valid handle to an open direct printing object.</param>
            <returns>Prepared document or IntPtr.Zero if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPRINT_Close(System.IntPtr)">
            <summary>
            Closes an open object handle.
            </summary>
            <param name="printHandle">A valid handle to an open direct printing object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_CreateNew">
            <summary>
            Create new FDF document
            </summary>
            <returns>The return value is a handle to the FDF document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)">
            <summary>
            Load FDF document from file
            </summary>
            <param name="path">Path to FDF document</param>
            <returns>Handle to the loaded FDF document</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])">
            <summary>
            Load FDF document from file
            </summary>
            <param name="buffer">Byte array with FDF document</param>
            <returns>Handle to the loaded FDF document</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_CloseDocument(System.IntPtr)">
            <summary>
            Close a loaded FDF document.
            </summary>
            <param name="fdfDoc">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_GetDocumentContent(System.IntPtr)">
            <summary>
            Gets FDF content as an operating system's current ANSI encoded string
            </summary>
            <param name="fdfDoc">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])"/> function.</param>
            <returns>Return document content or null if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_GetDocumentContentEx(System.IntPtr)">
            <summary>
            Gets FDF content as a byte array
            </summary>
            <param name="fdfDoc">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])"/> function.</param>
            <returns>Return document content or null if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_GetRoot(System.IntPtr)">
            <summary>
            Gets dictionary from FDF document
            </summary>
            <param name="fdfDoc">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])"/> function.</param>
            <returns>Handle to the FDF dictionary, IntPtr.Zero otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFDF_GetPath(System.IntPtr)">
            <summary>
            Gets a path to the PDF file from the spicified FDF document
            </summary>
            <param name="fdfDoc">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadDocument(System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FFDF_LoadMemDocument(System.Byte[])"/> function.</param>
            <returns>The source file or target file: the PDF document file that this FDF file was exported from or is intended to be imported into.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_OpenFile(System.String)">
            <summary>
            Opens a file on the specified path.
            </summary>
            <param name="path">The file to open.</param>
            <returns>Handle to file opened in the specified path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CloseFile(System.IntPtr)">
            <summary>
            Closes the file opened by <see cref="M:Patagames.Pdf.Pdfium.FPDF_OpenFile(System.String)"/> and releases all resources.
            </summary>
            <param name="handle">Handle to opened file.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_SetIdentity(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the identity matrix to destination matrix
            </summary>
            <param name="dst">Destination matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_SetReverse(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Inverts the source matrix, if it is invertible and set it to destination matrix.
            </summary>
            <param name="dst">Destination matrix</param>
            <param name="src">Source matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Concat(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_MATRIX,System.Boolean)">
            <summary>
            Multiplies the matrices in the order specified in the bPrepended parameter.
            </summary>
            <param name="dst">The destination matrix</param>
            <param name="src">The source matrix.</param>
            <param name="bPrepended">Represents the order of the multiplication.</param>
            <remarks>
            <para>
            if the specified order is Prepend (the prepend parameter is True), 
            The Matrices are multiplied in a prepended order. 
            Otherwise in an appended order.
            </para>
            <para>
            <list type="bullet">
            <item>Prepended order: [dst] = [src] x [dst]</item>
            <item>Appended  order: [dst] = [dst] x [src]</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_ConcatInverse(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_MATRIX,System.Boolean)">
            <summary>
            Inverts the matrix specified in the src parameter and than multiplies the dst matrix by the inverted matrix, and in the order specified in the prepended parameter.
            </summary>
            <param name="dst">The destination matrix</param>
            <param name="src">The source matrix.</param>
            <param name="bPrepended">Represents the order of the multiplication.</param>
            <remarks>
            <para>
            if the specified order is Prepend (the prepend parameter is True), 
            The Matrices are multiplied in a prepended order. 
            Otherwise in an appended order.
            </para>
            <para>
            <list type="bullet">
            <item>Prepended order: [dst] = [src] x [dst]</item>
            <item>Appended  order: [dst] = [dst] x [src]</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Rotate(Patagames.Pdf.FS_MATRIX,System.Single,System.Boolean)">
            <summary>
            Applies a clockwise rotation of an amount specified in the angle parameter, around the origin (zero x and y coordinates) for the specified Matrix.
            </summary>
            <param name="dst">The matrix</param>
            <param name="angle">The angle of the rotation, in radians.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the rotation is applied to the Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_RotateAt(Patagames.Pdf.FS_MATRIX,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Applies a clockwise rotation about the specified point to the specified Matrix in the specified order.
            </summary>
            <param name="dst">The matrix</param>
            <param name="angle">The angle of the rotation, in radians.</param>
            <param name="x">The x-coordinate of the point that represents the center of the rotation.</param>
            <param name="y">The y-coordinate of the point that represents the center of the rotation.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the rotation is applied to the Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Scale(Patagames.Pdf.FS_MATRIX,System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified scale vector (sx and sy) to the specified Matrix using the specified order.
            </summary>
            <param name="dst">The matrix</param>
            <param name="sx">The value by which to scale this Matrix in the x-axis direction.</param>
            <param name="sy">The value by which to scale this Matrix in the y-axis direction.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the scale vector is applied to the Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Translate(Patagames.Pdf.FS_MATRIX,System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified translation vector to the Matrix in the specified order.
            </summary>
            <param name="dst">The matrix</param>
            <param name="x">The x value by which to translate this Matrix.</param>
            <param name="y">The y value by which to translate this Matrix.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the translation is applied to the Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Translate(Patagames.Pdf.FS_MATRIX,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Applies the specified translation vector to the Matrix in the specified order.
            </summary>
            <param name="dst">The matrix</param>
            <param name="x">The x value by which to translate this Matrix.</param>
            <param name="y">The y value by which to translate this Matrix.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the translation is applied to the Matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Shear(Patagames.Pdf.FS_MATRIX,System.Single,System.Single,System.Boolean)">
            <summary>
            Applies the specified shear vector to the Matrix in the specified order.
            </summary>
            <param name="dst">The matrix</param>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
            <param name="bPrepended">Specifies the order (append or prepend) in which the shear is applied.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformPoint(Patagames.Pdf.FS_MATRIX,System.Single@,System.Single@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a specified point.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="x">The x-coordinate of the point</param>
            <param name="y">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformPoint(Patagames.Pdf.FS_MATRIX,System.Int32@,System.Int32@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a specified point.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="x">The x-coordinate of the point</param>
            <param name="y">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformDistance(Patagames.Pdf.FS_MATRIX,System.Single,System.Single)">
            <summary>
            Applies the geometric transform represented by the Matrix to a distance.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dx">The x-coordinate of the distance vector</param>
            <param name="dy">The Y-coordinate of the distance vector</param>
            <returns>The length of hte distance vector</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformDistance(Patagames.Pdf.FS_MATRIX,System.Int32,System.Int32)">
            <summary>
            Applies the geometric transform represented by the Matrix to a distance.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dx">The x-coordinate of the distance vector</param>
            <param name="dy">The Y-coordinate of the distance vector</param>
            <returns>The length of hte distance vector</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformDistance(Patagames.Pdf.FS_MATRIX,System.Single@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a distance.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="distance">The distance vector</param>
            <returns>The length of hte distance vector</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformRect(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_RECTF@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a specified rectangle.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="rect">The rectangle to transform</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformVector(Patagames.Pdf.FS_MATRIX,System.Single@,System.Single@)">
            <summary>
            Applies only the scale and rotate components of the Matrix to the specified point.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="vx">The x-coordinate of the point</param>
            <param name="vy">The y-coordinate of the point</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformXDistance(Patagames.Pdf.FS_MATRIX,System.Single@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a x-coordinate of the distance vector.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dx">The x-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformYDistance(Patagames.Pdf.FS_MATRIX,System.Single@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a y-coordinate of the distance vector.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dy">The y-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformXDistance(Patagames.Pdf.FS_MATRIX,System.Int32@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a x-coordinate of the distance vector.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dx">The x-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_TransformYDistance(Patagames.Pdf.FS_MATRIX,System.Int32@)">
            <summary>
            Applies the geometric transform represented by the Matrix to a y-coordinate of the distance vector.
            </summary>
            <param name="matrix">The matrix</param>
            <param name="dy">The y-coordinate of the distance vector</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_GetUnitArea(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Get unit area
            </summary>
            <param name="matrix">The matrix</param>
            <returns>Unit area</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_GetXUnit(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Get x unit
            </summary>
            <param name="matrix">The matrix</param>
            <returns>x unit</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_GetYUnit(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Get y unit
            </summary>
            <param name="matrix">The matrix</param>
            <returns>y unit</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_Is90Rotated(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets a value indicating whether the Matrix is rotated.
            </summary>
            <param name="matrix">The matrix</param>
            <returns>true if the Matrix is rotated; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_IsIdentity(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets a value indicating whether the specified Matrix is the identity matrix.
            </summary>
            <param name="matrix">The matrix</param>
            <returns>true if the Matrix is identity; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_IsInvertible(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets a value indicating whether the specified Matrix is invertible.
            </summary>
            <param name="matrix">The matrix</param>
            <returns>true if the Matrix is invertible; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFMatrix_IsScaled(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets a value indicating whether the Matrix is scaled.
            </summary>
            <param name="matrix">Matrix to check.</param>
            <returns>true if the Matrix is scaled; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_StartLoadPage(System.IntPtr,System.Int32)">
            <summary>
            Start to load a page inside a document.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Index number of the page. 0 for the first page.</param>
            <returns>A handle to the loaded page. If failed, IntPtr.Zero is returned.</returns>
            <remarks>The page must be continue load using <see cref="M:Patagames.Pdf.Pdfium.FPDF_ContinueLoadPage(System.IntPtr,Patagames.Pdf.IFSDK_PAUSE)"/> function. 
            Loaded page can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)"/>.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_ContinueLoadPage(System.IntPtr,Patagames.Pdf.IFSDK_PAUSE)">
            <summary>
            Continue loading a PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_StartLoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="pause">The <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> interface. A callback mechanism allowing the page loading 
            process to be paused before it's finished. This can be NULL if you don't want to pause.</param>
            <returns>The loading status.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)">
            <summary>
            Create sampled function.
            </summary>
            <param name="numOfInputs">The number of input values of a function.</param>
            <param name="numOfOutputs">The number of output values of a function.</param>
            <param name="domain">The domain of definition of a function.</param>
            <param name="range">The range of image of a function.</param>
            <param name="numOfSamples">The number of samples in each input dimension of the sample table.</param>
            <param name="bitsPerSample">The number of bits used to represent each sample.</param>
            <param name="sampleTable">A sequence of sample values which are organized as an numOfInputs-dimensional table.</param>
            <param name="encode">The linear mapping of input values into the domain of the function’s sample table.</param>
            <param name="decode">The linear mapping of sample values into the range appropriate for the function’s output values.</param>
            <param name="order">The order of interpolation between samples.</param>
            <returns>The handle to the created function.</returns>
            <remarks>
            <list type="table">
            <item><term><strong>Domain</strong></term><term>Required</term><description>An array of 2 × <italic>numOfInputs</italic> numbers. Input values outside the declared domain are clipped to the nearest boundary value.</description></item>
            <item><term><strong>Range</strong></term><term>Required</term><description>An array of 2 × <italic>numOfOutputs</italic> numbers. Output values outside the declared range are clipped to the nearest boundary value. If absent, no clipping is done.</description></item>
            <item><term><strong>numOfSamples</strong></term><term>Required</term><description>An array of <italic>numOfInputs</italic> positive integers specifying the number of samples in each input dimension of the sample table.</description></item>
            <item><term><strong>bitsPerSample</strong></term><term>Required</term><description>A number of bits used to represent each sample. (If the function has multiple output values, each one occupies BitsPerSample bits.) Valid values are 1, 2, 4, 8, 12, 16, 24, and 32.</description></item>
            <item><term><strong>encode</strong></term><term>Optional</term><description>An array of 2 × <italic>numOfInputs</italic> numbers specifying the linear mapping of input values into the domain of the function’s sample table.</description></item>
            <item><term><strong>decode</strong></term><term>Optional</term><description>An array of 2 × <italic>numOfOutputs</italic> numbers specifying the linear mapping of sample values into the range appropriate for the function’s output values.</description></item>
            <item><term><strong>order</strong></term><term>Optional</term><description>The order of interpolation between samples. Valid values are 1 and 3, specifying linear and cubic spline interpolation, respectively.</description></item>
            </list>
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])">
            <summary>
            Create exponential interpolation function.
            </summary>
            <param name="numOfInputs">The number of input values of a function.</param>
            <param name="numOfOutputs">The number of output values of a function.</param>
            <param name="exponent">The interpolation exponent.</param>
            <param name="domain">The domain of definition of a function.</param>
            <param name="range">The range of image of a function.</param>
            <param name="valuesAt0">An array of numbers defining the function result when x = 0.0.</param>
            <param name="valuesAt1">An array of numbers defining the function result when x = 1.0.</param>
            <returns>The handle to the created function.</returns>
            <remarks>
            <list type="table">
            <item><term><strong>Domain</strong></term><term>Required</term><description>An array of 2 × <italic>numOfInputs</italic> numbers. Input values outside the declared domain are clipped to the nearest boundary value.</description></item>
            <item><term><strong>Range</strong></term><term>Optional</term><description>An array of 2 × <italic>numOfOutputs</italic> numbers. Output values outside the declared range are clipped to the nearest boundary value. If absent, no clipping is done.</description></item>
            <item><term><strong>valueAt0</strong></term><term>Optional</term><description>An array of <italic>numOfOutputs</italic> numbers defining the function result when <italic>x</italic> = 0.0. Default value: [0.0]</description></item>
            <item><term><strong>valueAt1</strong></term><term>Optional</term><description>An array of <italic>numOfOutputs</italic> numbers defining the function result when <italic>x</italic> = 1.0. Default value: [1.0]</description></item>
            <item><term><strong>exponent</strong></term><term>Required</term><description>An interpolation exponent. Each input value <italic>x</italic> will return numOfOutputs values, given by
            <para><img src="../../../Pdfium.Docs/Media/Functions/func_exp01.png" />,</para>
            <para>for 0 ≤ j ≤ <italic>numOfOutputs</italic>.</para></description></item>
            </list>
            <para>
            Values of <strong>Domain</strong> must constrain x in such a way that if <strong>N</strong> is not an integer, all 
            values of x must be non-negative, and if <strong>N</strong> is negative, no value of x may be zero.
            Typically, Domain is declared as [0.0 1.0], and <strong>N</strong> is a positive number.
            The <strong>Range</strong> attribute is optional and can be used to clip the output to a specified range.
            </para>
            <note type="note">
            Note that when <strong>N</strong> is 1, the function performs a linear interpolation between <strong>valuesAt0</strong> and <strong>valuesAt1</strong>;
            therefore, the function can also be expressed as a sampled function.</note>
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])">
            <summary>
            Create a stitching of the subdomains of several 1-input functions to produce a single new 1-input function.
            </summary>
            <param name="document">The handle to the PDF document.</param>
            <param name="numOfOutputs">The number of output values of a function.</param>
            <param name="functions">An array of k 1-input functions making up the stitching function.</param>
            <param name="encode">An array of 2 × k numbers that, taken in pairs, map each subset of the domain defined by Domain and the Bounds array to the domain of the corresponding function.</param>
            <param name="bounds">An array of k − 1 numbers that, in combination with Domain, define the intervals to which each function from the Functions array applies.</param>
            <param name="domain">The domain of definition of a function.</param>
            <param name="range">The range of image of a function.</param>
            <returns>The handle to the created function.</returns>
            <remarks>
            <list type="table">
            <item><term><strong>Domain</strong></term><term>Required</term><description>Since the resulting stitching function is a 1-input function, the domain is given by a two-element array.</description></item>
            <item><term><strong>Range</strong></term><term>Optional</term><description>An array of 2 × <italic>numOfOutputs</italic> numbers. Output values outside the declared range are clipped to the nearest boundary value. If absent, no clipping is done.</description></item>
            <item><term><strong>functions</strong></term><term>Required</term><description>An array of k-1 handles to functions. The output dimensionality of all functions must be the same, and compatible with the value of <strong>Range</strong> if <strong>Range</strong> is present.</description></item>
            <item><term><strong>bounds</strong></term><term>Required</term><description>An array of k − 1 numbers that, in combination with <strong>Domain</strong>, define the intervals to which each function from the <strong>Functions</strong> array applies. <strong>Bounds</strong> elements must be in order of increasing value, and each value must be within the domain defined by <strong>Domain</strong>.</description></item>
            <item><term><strong>encode</strong></term><term>Required</term><description>An array of 2 × k numbers that, taken in pairs, map each subset of the domain defined by <strong>Domain</strong> and the <strong>Bounds</strong> array to the domain of the corresponding function.</description></item>
            </list>
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>        
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])">
            <summary>
            Create a PostScript calculator function.
            </summary>
            <param name="numOfInputs">The number of input values of a function.</param>
            <param name="numOfOutputs">The number of output values of a function.</param>
            <param name="domain">The domain of definition of a function.</param>
            <param name="range">The range of image of a function.</param>
            <param name="psProg">A PostScript program represented by byte array.</param>
            <returns>The handle to the created function.</returns>
            <remarks>
            <list type="table">
            <item><term><strong>Domain</strong></term><term>Required</term><description>An array of 2 × <italic>numOfInputs</italic> numbers. Input values outside the declared domain are clipped to the nearest boundary value.</description></item>
            <item><term><strong>Range</strong></term><term>Required</term><description>An array of 2 × <italic>numOfOutputs</italic> numbers. Output values outside the declared range are clipped to the nearest boundary value. If absent, no clipping is done.</description></item>
            <item><term><strong>psProg</strong></term><term>Required</term><description>A PostScript code written in a small subset of the PostScript language.</description></item>
            </list>
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)">
            <summary>
            Create a function from the Dictionary or Stream object.
            </summary>
            <param name="obj">The handle to the Dictionary or Stream object that represents the function.</param>
            <returns>The handle to the created function.</returns>
            <remarks>
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)">
            <summary>
            Get an underlying Dictionary or Stream object.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The handle to the underlying Dictionary or Stream object.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>  and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>        
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)">
            <summary>
            Closes an open function handle.
            </summary>
            <param name="function">The handle to the function.</param>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>  and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)">
            <summary>
            Get the number of input values of a function.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The number of input values or -1 if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)">
            <summary>
            Get the number of output values of a function.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The number of output values or -1 if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)">
            <summary>
            The function type.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The function type or <see cref="F:Patagames.Pdf.Enums.FunctionTypes.Unknown"/> if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)">
            <summary>
            Get the domain of definition of a function.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of 2 × m numbers, where m is the number of input values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)">
            <summary>
            Get the range of image of a function.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of 2 × n numbers, where n is the number of output values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)">
            <summary>
            Get the interpolation exponent of an exponential function.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The interpolation exponent.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_INVALID_PARAMETER(87): the input paramenter is wrong.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= INVALID_FUNCTION_TYPE(536871424): unsupported function type.</exception>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)">
            <summary>
            Get an array of numbers defining the function result when x = 0.0.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of n numbers, where n is the number of output values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray1(System.IntPtr)">
            <summary>
            Get an array of numbers defining the function result when x = 1.0.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of n numbers, where n is the number of output values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetExponent(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionExp_GetValuesArray0(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)">
            <summary>
            Get an array of number of samples in the sample table.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of m numbers, where m is the number of input values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)">
            <summary>
            Get the linear mapping of input values into the domain of the function’s sample table.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of 2 × m numbers, where m is the number of input values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>  and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)">
            <summary>
            Get the linear mapping of sample values into the range appropriate for the function’s output values.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of 2 × n numbers, where n is the number of output values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)">
            <summary>
            Get the number of bits used to represent each sample.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>The number of bits per sample or -1 if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)">
            <summary>
            Get the order of interpolation between samples.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>1 - linear interpolation, 3 - cubic spline interpolation, -1 if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/></remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetSamplesTable(System.IntPtr)">
            <summary>
            Get a sequence of sample values.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of sample values which are organized as an m-dimensional table, where m is the number of input values; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetNumOfSamlesArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetDecodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetBitsPerSample(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionSampled_GetOrder(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)">
            <summary>
            Get the Bounds array.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of k − 1 numbers, where k is the number of functions; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)">
            <summary>
            Get the Encode array.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array of 2 × k numbers, where k is the number of functions; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)">
            <summary>
            Get the number of functions.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>Number of functionsl; or -1 if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>  and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)">
            <summary>
            Get the function at a given position.
            </summary>
            <param name="function">The handle to the type 3 (Stitching) function.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than or equal to the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>.</param>
            <returns>The handle to the function at the specified index in the type 3 (Stitching) function.</returns>
            <remarks>
            The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>  and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.
            <note type="note">When an application is finished using the function handle returned by method, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function to close the handle.</note>
            </remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetBoundsArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetEncodeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionsCount(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)">
            <summary>
            Get a PostScript program represented by byte array.
            </summary>
            <param name="function">The handle to the function.</param>
            <returns>An array that contain PS program; or null if any error has occurred.</returns>
            <remarks>The <strong>function</strong> is a handle returned by these methods: <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDFFunctionStitch_GetFunctionAt(System.IntPtr,System.Int32)"/>.</remarks>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateSampled(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32[],System.Int32,System.Byte[],System.Single[],System.Single[],System.Int32)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateExp(System.Int32,System.Int32,System.Single,System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreateStitch(System.IntPtr,System.Int32,System.IntPtr[],System.Single[],System.Single[],System.Single[],System.Single[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CreatePS(System.Int32,System.Int32,System.Single[],System.Single[],System.Byte[])"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_OpenHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetObject(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountInput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetCountOutput(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetType(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetDomainArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunction_GetRangeArray(System.IntPtr)"/>
            <seealso cref="M:Patagames.Pdf.Pdfium.FPDFFunctionPs_GetProg(System.IntPtr)"/>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetType(System.IntPtr)">
            <summary>
            Gets page object type.
            </summary>
            <param name="page_object">Handle to a page object.</param>
            <returns>Returns one of the FPDF_PAGEOBJ_xxxx constants defined following.
            <para>FPDF_PAGEOBJ_TEXT 1</para>
            <para>FPDF_PAGEOBJ_PATH 2</para>
            <para>FPDF_PAGEOBJ_IMAGE 3</para>
            <para>FPDF_PAGEOBJ_SHADING 4</para>
            <para>FPDF_PAGEOBJ_FORM 5</para>
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)">
            <summary>
            Create new page object specified by type
            </summary>
            <param name="type">Types of page object</param>
            <returns>Handle to a page object</returns>
            <remarks>
            Currently, It can be "PDFPAGE_TEXT", "PDFPAGE_IMAGE", "PDFPAGE_PATH",
            "PDFPAGE_SHADING", "PDFPAGE_FORM"
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Release(System.IntPtr)">
            <summary>
            Release page object
            </summary>
            <param name="handle">Handle to page object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/>.</param>
            <remarks>
            The application should not call this method if object was inserted into page. In this case it would be called automatically.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Clone(System.IntPtr)">
            <summary>
            Create a new page object based on this page object.
            </summary>
            <param name="srcPage_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Handle to a page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_RemoveClipPath(System.IntPtr)">
            <summary>
            Remove a clip from the page object.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_AppendClipPath(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FillModes,System.Boolean)">
            <summary>
            Append a path to the current clip
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="path">Handle to a path.</param>
            <param name="type">The fill mode types defined following. FPDF_FILL_NULL= 0, FPDF_FILL_ALTERNATE = 1, FPDF_FILL_WINDING = 2</param>
            <param name="bAutoMerge">True for auto merge</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_CopyClipPath(System.IntPtr,System.IntPtr)">
            <summary>
            Copy clip path from one page object to another
            </summary>
            <param name="dstPageObject">Handle to a destination page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="srcPageObject">Handle to a source page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetBBox(System.IntPtr,Patagames.Pdf.FS_MATRIX,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Get page object bounding box.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="pMatrix">Modify box before return. Can be null</param>
            <param name="left">Pointer to a value receiving the left of a rectangle (in points).</param>
            <param name="top">Pointer to a value receiving the bottom of a rectangle (in points).</param>
            <param name="right">Pointer to a value receiving the right of a rectangle (in points).</param>
            <param name="bottom">Pointer to a value receiving the top of a rectangle (in points).</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetBBox(System.IntPtr,Patagames.Pdf.FS_MATRIX,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get page object bounding box.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="pMatrix">Modify box before return. Can be null</param>
            <param name="left">Pointer to a value receiving the left of a rectangle (in points).</param>
            <param name="top">Pointer to a value receiving the bottom of a rectangle (in points).</param>
            <param name="right">Pointer to a value receiving the right of a rectangle (in points).</param>
            <param name="bottom">Pointer to a value receiving the top of a rectangle (in points).</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetFillColor(System.IntPtr)">
            <summary>
            Get the fill color of a page object.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The fill color of a page object. Constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeColor(System.IntPtr)">
            <summary>
            Get the stroke color of a page object.
            </summary>
            <param name="page_obj">Handle to page object, could be text_object, path_object and uncolored images.</param>
            <returns>The stroke color of a page object. Constructed by 0xaarrggbb</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetFillColor(System.IntPtr,System.Int32)">
            <summary>
            Set the fill color of a page object.
            </summary>
            <param name="page_obj">Handle to page object, could be text_object, path_object and uncolored images.</param>
            <param name="argb">The fill color of a page object. Constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetStrokeColor(System.IntPtr,System.Int32)">
            <summary>
            Set the stroke color of a page object.
            </summary>
            <param name="page_obj">Handle to page object, could be text_object, path_object and uncolored images.</param>
            <param name="argb">The stroke color of a page object. Constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_CountMarks(System.IntPtr)">
            <summary>
            Gets the number of elements in marked content of the object
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Number of elements in marked content.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_AddMark(System.IntPtr,System.String,System.IntPtr,System.Boolean)">
            <summary>
            Adds new element at the end of marked content
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="tag">A tag operand of the marked content operator</param>
            <param name="dictionary">Handle to the dictionary</param>
            <param name="bDirect">The type of the dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_DeleteLastMark(System.IntPtr)">
            <summary>
            Remove the last element of the marked content
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetMarkName(System.IntPtr,System.Int32)">
            <summary>
            Get a tag operand of the marked content operator.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <returns>A tag operand of the marked content operator.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetMarkParamType(System.IntPtr,System.Int32)">
            <summary>
            Get a type of the associated property list
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <returns>Type of the associated property list.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetMarkParam(System.IntPtr,System.Int32)">
            <summary>
            Get the property list associated with marked contetent.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <returns>The property list associated with marked contetent.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_MarkHasMCID(System.IntPtr,System.Int32)">
            <summary>
            Gets a value indicating whether the parameters dictionary contains a marked-content 
            identifier that uniquely identifies the marked-content sequence within its content stream.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <returns>True if the parameters dictionary contains MCID entry; false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetMarkName(System.IntPtr,System.Int32,System.String)">
            <summary>
            Set tag operand of the marked content operator
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <param name="tag">A tag operand of the marked content operator</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetMarkParam(System.IntPtr,System.Int32,Patagames.Pdf.Enums.PropertyListTypes,System.IntPtr)">
            <summary>
            Set property list at the specified index
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <param name="paramType">A type of the associated property list</param>
            <param name="dictionary">Handle to the dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetMark(System.IntPtr,System.Int32,System.String,Patagames.Pdf.Enums.PropertyListTypes,System.IntPtr)">
            <summary>
            Set marked content at the specified index
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="index">Zero-based index of the element in the marked content</param>
            <param name="tag">A tag operand of the marked content operator</param>
            <param name="paramType">A type of the associated property list</param>
            <param name="dictionary">Handle to the dictionary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)">
            <summary>
            Create a new Image Object.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/> function.</param>
            <returns>Handle to image object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetMatrix(System.IntPtr,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the matrix of an image object
            </summary>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/></param>
            <param name="a">Pointer to a float value receiving the coefficient "a" of the matrix.</param>
            <param name="b">Pointer to a float value receiving the coefficient "b" of the matrix.</param>
            <param name="c">Pointer to a float value receiving the coefficient "c" of the matrix.</param>
            <param name="d">Pointer to a float value receiving the coefficient "d" of the matrix.</param>
            <param name="e">Pointer to a float value receiving the coefficient "e" of the matrix.</param>
            <param name="f">Pointer to a float value receiving the coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetMatrix(System.IntPtr)">
            <summary>
            Get the matrix of an image object
            </summary>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/></param>
            <returns>Transformation matrix.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetMatrix(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the matrix of an image object
            </summary>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the matrix of an image object
            </summary>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="matrix">The matrix to set.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)">
            <summary>
            Load Image from a JPEG image file and then set it to an image object.
            </summary>
            <param name="pages">Pointers to the start of all loaded pages, could be IntPtr.Zero.</param>
            <param name="nCount">Number of pages, could be 0.</param>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="fileAccess">The custom file access handler, which specifies the JPEG image file.</param>
            <returns>Jpeg file handle if successful, IntPtr.Zero otherwise.</returns>
            <remarks>The image object might already has an associated image, which is shared and cached by the loaded pages, In this case, we need to clear the cache of image for all the loaded pages. 
            Pass pages and count to this API to clear the image cache. The image must be destroyed by calling <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_DestroyJpegFile(System.IntPtr)"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_DestroyJpegFile(System.IntPtr)">
            <summary>
            Destroy an jpeg image object and release all related buffers 
            </summary>
            <param name="jpegHandle">Handle to the jpeg. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetBitmap(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Set the bitmap to an image object.
            </summary>
            <param name="pages">Pointer's to the start of all loaded pages.</param>
            <param name="nCount">Number of pages.</param>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="bitmap">The Handle to the bitmap which you want to set it to the image object.</param>
            <returns>TRUE if successful, FALSE otherwise.</returns>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)"/> function for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetCloneBitmap(System.IntPtr)">
            <summary>
            Get the copy of bitmap from an image object.
            </summary>
            <param name="image_object">Handle to image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/>.</param>
            <returns>The Handle to the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_CalcBoundingBox(System.IntPtr)">
            <summary>
            Calculate bounding box
            </summary>
            <param name="image_obj">Image object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GenerateStream(System.IntPtr,System.IntPtr)">
            <summary>
            Generate content stream of an image object
            </summary>
            <param name="image_obj">The handle to image object</param>
            <param name="page">The handle to page</param>
            <returns>The handle to the Stream in unmanaged memory</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetStream(System.IntPtr)">
            <summary>
            Get the stream contains image data from the specified image object.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <returns>The handle to the Stream.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetOC(System.IntPtr)">
            <summary>
            Get an optional content from the specified image object.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <returns>The handle to the dictionary contains optional content.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetInlineDict(System.IntPtr)">
            <summary>
            Get the dictionary of the inline image object.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <returns>The handle to the dictionary.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_IsInline(System.IntPtr)">
            <summary>
            Get a flag indicating whether the specified image object is inline image.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <returns>TRUE if the specified image object is inline, otherwise FALSE.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadFromStream(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Load image from specified image stream to the specified image object
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <param name="stream">The handle to an image.</param>
            <param name="bInline">Flag indicating whether the image should be inline.</param>
            <returns>TRUE if successful; otherwise FALSE.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetJpegImage(System.IntPtr,System.Byte[])">
            <summary>
            Load Image from an array containing JPEG image and then set it to an image object.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <param name="imageData">An array that contains jpeg encoded image</param>
            <returns>Returns TRUE on success; FALSE otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetPixelSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Get size of the image in pixels.
            </summary>
            <param name="image_obj">The handle to an image object.</param>
            <param name="width">The width in pixels of the specified image object.</param>
            <param name="height">The height in pixels of the specified image object.</param>
            <returns>Returns TRUE on success; FALSE otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetFormat(System.IntPtr)">
            <summary>
            Gets bitmap format
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetPitch(System.IntPtr)">
            <summary>
            Gets bitmap pitch
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap pitch</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteSize(System.IntPtr)">
            <summary>
            Gets bitmap palette size
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap palette size</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPalette(System.IntPtr)">
            <summary>
            Gets bitmap palette
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap palette</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetBPP(System.IntPtr)">
            <summary>
            Gets bit per pixel
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Number of bits per pixel</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsAlphaMask(System.IntPtr)">
            <summary>
            Returns true if the bitmap has alpha mask 
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this image has alpha mask and False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_HasAlpha(System.IntPtr)">
            <summary>
            Returns true if this bitmap has alpha channel
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this image has alpha channel and False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsOpaqueImage(System.IntPtr)">
            <summary>
            Returns true if this bitmap is opaque
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this bitmap has is opaque</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsCmykImage(System.IntPtr)">
            <summary>
            Returns true if this bitmap is cmyk image
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this bitmap is cmyk image</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteEntry(System.IntPtr,System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SetPaletteEntry(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <param name="entry">Palette color constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteArgb(System.IntPtr,System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SetPaletteArgb(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <param name="argb">Palette color constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CopyPalette(System.IntPtr,System.Int32[])">
            <summary>
            Copy specified palette to the bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="srcPal">Palette array</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_Clone(System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Clone specified bitmap with specified clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="clip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CloneConvert(System.IntPtr,Patagames.Pdf.Enums.BitmapFormats)">
            <summary>
            Convert and clone specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="format">Format for new bitmap</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_StretchTo(System.IntPtr,System.Int32,System.Int32,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Stretch specified bitmap with specified clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="dest_width">With for destination bitmap</param>
            <param name="dest_height">Height for destination bitmap</param>
            <param name="flags">Flags</param>
            <param name="clip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_TransformTo(System.IntPtr,Patagames.Pdf.FS_MATRIX,System.Int32@,System.Int32@,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Transform specified bitmap with specified matrix and clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="pMatrix">With for destination bitmap</param>
            <param name="left">Left</param>
            <param name="top">Top</param>
            <param name="flags">Flags</param>
            <param name="pClip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetAlphaMask(System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Gets alpha mask for specified bitmap
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="pClip">clipping recangle</param>
            <returns>Handle to the bitmap contained alpha mask</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SwapXY(System.IntPtr,System.Boolean,System.Boolean,Patagames.Pdf.FX_RECT)">
            <summary>
            Swap X and Y in specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="bXFlip">True for flip by X</param>
            <param name="bYFlip"> True for flip by Y</param>
            <param name="pClip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_FlipImage(System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Flip X and Y in specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="bXFlip">True for flip by X</param>
            <param name="bYFlip"> True for flip by Y</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CopyAlphaMask(System.IntPtr,System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Copy alpha mask from one bitmap to another
            </summary>
            <param name="bitmap">Handle to the destination bitmap</param>
            <param name="alphaMask">Handle too the bitmap that cobtains alpha mask</param>
            <param name="pClip">Clippig rectangle</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_ConvertFormat(System.IntPtr,Patagames.Pdf.Enums.BitmapFormats)">
            <summary>
            Convert specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="format">Format for new bitmap</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_Clear(System.IntPtr,System.UInt32)">
            <summary>
            Clears the entire bitmap and fills it with the specified color.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="color">A 32-bit value specifing the color, in 8888 ARGB format</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetPixel(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Gets the color of the specified pixel in the specified bitmap.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="x">The x-coordinate of the pixel to retrieve.</param>
            <param name="y">The y-coordinate of the pixel to retrieve.</param>
            <returns>An uint value that represents the color of the specified pixel.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_SetPixel(System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sets the color of the specified pixel in the specified bitmap.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="x">The x-coordinate of the pixel to set.</param>
            <param name="y">The y-coordinate of the pixel to set.</param>
            <param name="color">An uint value that represents the color to assign to the specified pixel.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_LoadChannel(System.IntPtr,Patagames.Pdf.Enums.BitmapChannels,System.IntPtr,Patagames.Pdf.Enums.BitmapChannels)">
            <summary>
            Copy specified channel from one bitmap to another
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="dstChannel">The destination channel</param>
            <param name="srcBitmap">The source bitmap</param>
            <param name="srcChannel">The source channel</param>
            <returns>TTRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_LoadChannel(System.IntPtr,Patagames.Pdf.Enums.BitmapChannels,System.Int32)">
            <summary>
            Fills the specified channel of the bitmap by the value.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="dstChannel">The destination channel</param>
            <param name="value">The value by which the channel must be filled</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_MultiplyAlpha(System.IntPtr,System.Int32)">
            <summary>
            Multiply alpha channel of the specified bitmap and specified alpha value.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="alpha">Alpha value</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_MultiplyAlpha(System.IntPtr,System.IntPtr)">
            <summary>
            Multiply alpha channel of the specified bitmap and specified alpha mask.
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="alphaMask">Handle to the bitmapp with alpha mask</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_TransferBitmap(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Transfer buffer from one Bitmap to another.
            </summary>
            <param name="bitmap">The handle to the destination bitmap.</param>
            <param name="dest_left">The left point in the destination bitmap</param>
            <param name="dest_top">The top point in the destination bitmap</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pSrcBitmap">Handle to the source bitmap</param>
            <param name="src_left">The left point in the source bitmap</param>
            <param name="src_top">The top point in the source bitmap</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_TransferMask(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Transfer mask from one Bitmap to another.
            </summary>
            <param name="bitmap">The handle to the destination bitmap.</param>
            <param name="dest_left">The left point in the destination bitmap</param>
            <param name="dest_top">The top point in the destination bitmap</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pBitmapMask">The Handle to the source bitmap</param>
            <param name="color">The color</param>
            <param name="src_left">The left point in the source bitmap</param>
            <param name="src_top">The top point in the source bitmap</param>
            <param name="alpha_flag">alpha flag</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CompositeBitmap(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,Patagames.Pdf.Enums.BlendTypes,Patagames.Pdf.FX_RECT,System.Boolean)">
            <summary>
            Composites bitmaps that have transparent or semitransparent pixels.
            </summary>
            <param name="bitmap">The handle to the destination bitmap.</param>
            <param name="dest_left">The left point in the destination bitmap</param>
            <param name="dest_top">The top point in the destination bitmap</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pSrcBitmap">Handle to the source bitmap</param>
            <param name="src_left">The left point in the source bitmap</param>
            <param name="src_top">The top point in the source bitmap</param>
            <param name="blend_type">The <see cref="T:Patagames.Pdf.Enums.BlendTypes"/> controls blending by specifying the blending type for source and destination bitmaps.</param>
            <param name="pClipRgn">Clipping region</param>
            <param name="bRgbByteOrder">Byte order</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CompositeMask(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.UInt32,System.Int32,System.Int32,Patagames.Pdf.Enums.BlendTypes,Patagames.Pdf.FX_RECT,System.Boolean,System.Int32)">
            <summary>
            Composites specified bitmap and mask.
            </summary>
            <param name="bitmap">The handle to the destination bitmap.</param>
            <param name="dest_left">The left point in the destination bitmap</param>
            <param name="dest_top">The top point in the destination bitmap</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pMaskBitmap">Handle to the mask</param>
            <param name="color">Mask color</param>
            <param name="src_left">The left point in the source bitmap</param>
            <param name="src_top">The top point in the source bitmap</param>
            <param name="blend_type">The <see cref="T:Patagames.Pdf.Enums.BlendTypes"/> controls blending by specifying the blending type for source and destination bitmaps.</param>
            <param name="pClipRgn">Clipping region</param>
            <param name="bRgbByteOrder">Byte order</param>
            <param name="alpha_flag">alpha flag</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CompositeRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.Int32)">
            <summary>
            Composites specified bitmap and color.
            </summary>
            <param name="bitmap">The handle to the destination bitmap.</param>
            <param name="dest_left">The left point in the destination bitmap</param>
            <param name="dest_top">The top point in the destination bitmap</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="color">The color</param>
            <param name="alpha_flag">alpha flag</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_ConvertColorScale(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Convert color scale
            </summary>
            <param name="bitmap">The handle to the bitmap.</param>
            <param name="forecolor">Foreground color</param>
            <param name="backcolor">Background color</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_DitherFS(System.IntPtr,System.UInt32[],Patagames.Pdf.FX_RECT)">
            <summary>
            DitherFS
            </summary>
            <param name="bitmap">The handle to the bitmap.</param>
            <param name="pPalette">Palette</param>
            <param name="pRect">Rectangle</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetText(System.IntPtr,System.String,System.Text.Encoding)">
            <summary>
            Stores a string on the text object.
            </summary>
            <param name="textObject">A handle to the text object.</param>
            <param name="text">The string to be set in the text object.</param>
            <param name="enc">The encoding applied to the text to be set in the text object.</param>
            <remarks>If no encoding is specified, the <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> is used.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetText(System.IntPtr,System.Text.Encoding)">
            <summary>
            Retrieves non-unicode text from the text object.
            </summary>
            <param name="textObject">A handle to the text object.</param>
            <param name="enc">The encoding applied to the contents of the text object.</param>
            <returns>The text that corresponds to a text object.</returns>
            <remarks>If no encoding is specified, the <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> is used.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetTextUnicode(System.IntPtr,System.String)">
            <summary>
            Stores a string on the text object.
            </summary>
            <param name="textObject">A handle to the text object.</param>
            <param name="text">The string to be set in the text object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetTextUnicode(System.IntPtr)">
            <summary>
            Retrieves unicode text from the text object.
            </summary>
            <param name="textObject">A handle to the text object.</param>
            <returns>The text that corresponds to a text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_CountItems(System.IntPtr)">
            <summary>
            Get the number of items from a text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>A number of items in the text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_CountChars(System.IntPtr)">
            <summary>
            Get the number of characters from a text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>A number of characters in the text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetItemInfo(System.IntPtr,System.Int32,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Get item information
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="index">The index of the item to get the information.</param>
            <param name="charCode">Pointer to a int value receiving the item information.</param>
            <param name="originX">Pointer to a float value receiving the physical offset from the start to the specified item by horizontal</param>
            <param name="originY">Pointer to a float value receiving the physical offset from the start to the specified item by vertical</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetCharInfo(System.IntPtr,System.Int32,System.Int32@,System.Single@)">
            <summary>
            Get the unicode of a special character in a text object and kerning.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="index">The index of the character to get the unicode.</param>
            <param name="charCode">Pointer to a int value receiving the unicode value.</param>
            <param name="kerning">Pointer to a float value receiving the kerning</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetCharInfo(System.IntPtr,System.Int32,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Get the unicode of a special character in a text object and its placement.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="index">The index of the character to get the unicode.</param>
            <param name="charCode">Pointer to a int value receiving the unicode value.</param>
            <param name="originX">Pointer to a float value receiving the physical offset from the start to the specified character by horizontal</param>
            <param name="originY">Pointer to a float value receiving the physical offset from the start to the specified character by vertical</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetTextMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the text object matrix.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="a">Pointer to a float value receiving the coefficient "a" of the matrix.</param>
            <param name="b">Pointer to a float value receiving the coefficient "b" of the matrix.</param>
            <param name="c">Pointer to a float value receiving the coefficient "c" of the matrix.</param>
            <param name="d">Pointer to a float value receiving the coefficient "d" of the matrix.</param>
            <param name="e">Pointer to a float value receiving the coefficient "e" of the matrix.</param>
            <param name="f">Pointer to a float value receiving the coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetTextMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX@)">
            <summary>
            Get the text object matrix.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="matrix">Transformation matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetTextMatrix(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the text object matrix.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix.</param>
            <param name="f">The coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetTextMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the text object matrix.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="matrix">The matrix to set</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetText(System.IntPtr,System.String)">
            <summary>
            Insert non-unicode string into text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="text">The text to be inserted into an text object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetText(System.IntPtr,System.Int32,System.Int32[],System.Single[])">
            <summary>
            Insert unicode string into text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="countChars">The number of characters in the text to insert.</param>
            <param name="chars">A four-byte array containing the unicode characters to insert into text object.</param>
            <param name="kernings">Array containing the kernings</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetText(System.IntPtr,System.String,System.Single[])">
            <summary>
            Insert unicode string into text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="text">String to insert.</param>
            <param name="kernings">Array containing the kernings</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetEmpty(System.IntPtr)">
            <summary>
            Set empty string in a text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetTextFromItems(System.IntPtr,System.Int32)">
            <summary>
            Get non-unicode text containing in text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="codePage">The code page identifier of the preferred encoding. If 0 then <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> is used.</param>
            <returns>Text from text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetTextFromItems(System.IntPtr)">
            <summary>
            Get unicod text containing in text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>Text from text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetText(System.IntPtr,System.Int32,System.Single[]@)">
            <summary>
            Get non-unicode text containing in text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="codePage">The code page identifier of the preferred encoding. If 0 then <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> is used.</param>
            <param name="kernings">Pointer to a float values receiving the kernings.</param>
            <returns>Text from text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetText(System.IntPtr,System.Single[]@)">
            <summary>
            Get unicod text containing in text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="kernings">Pointer to a float values receiving the kernings.</param>
            <returns>Text from text object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetCharWidth(System.IntPtr,System.Int32,System.Single@)">
            <summary>
            Get the width of specified character
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="charcode">Character code the width of which is necessary to obtain.</param>
            <param name="width">Pointer to a float value receiving the width.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetSpaceCharWidth(System.IntPtr,System.Single@)">
            <summary>
            Get the width of space character
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="width">Pointer to a float value receiving the width.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetCharRect(System.IntPtr,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Get character bounding box
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="index">The index of the character to get the bbox.</param>
            <param name="left">Pointer to a float value receiving the left of a rectangle.</param>
            <param name="bottom">Pointer to a float value receiving the bottom of a rectangle.</param>
            <param name="right">Pointer to a float value receiving the right of a rectangle.</param>
            <param name="top">Pointer to a float value receiving the top of a rectangle.</param>
            <param name="matrix">The matrix that shoud be appliend to the outpet rectangle. Typically it's the textObject's matrix </param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_RecalcPositionData(System.IntPtr)">
            <summary>
            Recalculate charactes positions
            </summary>Pointer to a float values receiving the offsets to start and end of each character in text object
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_CalcCharPos(System.IntPtr,System.Single[])">
            <summary>
            Calculate the offsets to start and end of each character in text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="pPosArray">Pointer to a float values receiving the offsets to start and end of each character in text object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetPosX(System.IntPtr,System.Single@)">
            <summary>
            Get X position of the specified text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="x">Pointer to a float value receiving the X coordinate of the text object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetPosY(System.IntPtr,System.Single@)">
            <summary>
            Get Y position of the specified text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="y">Pointer to a float value receiving the Y coordinate of the text object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetPos(System.IntPtr,System.Single@,System.Single@)">
            <summary>
            Get location of the specified text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="x">Pointer to a float value receiving the X coordinate of the text object.</param>
            <param name="y">Pointer to a float value receiving the Y coordinate of the text object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetPosition(System.IntPtr,System.Single,System.Single)">
            <summary>
            Move text object into specified location
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="x">The X coordinate of the text object.</param>
            <param name="y">The Y coordinate of the text object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)">
            <summary>
            Get the font Handle to a text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>Handle to the font.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetFont(System.IntPtr,System.IntPtr)">
            <summary>
            Set the font into a text object
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="font">Handle to FPDF_FONT. It could be returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/> or <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFontSize(System.IntPtr,System.Single@)">
            <summary>
            Get the font size of a text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="size">Pointer to a float value receiving the size of the font.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetFontSize(System.IntPtr,System.Single)">
            <summary>
            Set the font size of a text object.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="size">The font size</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetRenderMode(System.IntPtr)">
            <summary>
            Get text rendering mode.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/>.</param>
            <returns>The text rendering mode.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetRenderMode(System.IntPtr,Patagames.Pdf.Enums.TextRenderingModes)">
            <summary>
            Set text rendering mode.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/>.</param>
            <param name="mode">Text rendering mode</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetCharSpacing(System.IntPtr)">
             <summary>
             Get character spacing.
             </summary>
             <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>The character spacing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetCharSpacing(System.IntPtr,System.Single)">
            <summary>
            Get character spacing.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="spacing">The character spacing.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetWordSpacing(System.IntPtr)">
            <summary>
            Get word spacing.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>The word spacing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTextObj_SetWordSpacing(System.IntPtr,System.Single)">
            <summary>
            Get word spacing.
            </summary>
            <param name="textObject">Handle to text object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="spacing">The word spacing.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetStockFont(System.IntPtr,System.String)">
            <summary>
            Creates a standard type font with the specified typeface name.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontName">A string that specifies the typeface name of the font.</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
            <remarks>See detailed information about standard fonts in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetStockFont(System.IntPtr,Patagames.Pdf.Enums.FontStockNames)">
            <summary>
            Creates a standard type font with the specified typeface name.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontName">A value that specifies the typeface name of the font.</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
            <remarks>See detailed information about standard fonts in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AddStandardFont(System.IntPtr,System.String,System.Int32)">
            <summary>
            Creates a standard type font with the specified typeface name and encoding.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontName">A value that specifies the typeface name of the font.</param>
            <param name="encoding">Encoding</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
            <remarks>See detailed information about standard fonts in <see cref="T:Patagames.Pdf.Enums.FontStockNames"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AddWindowsFont(System.IntPtr,Patagames.Pdf.LOGFONT,System.Boolean,System.Boolean)">
            <summary>
            Creates a font that has the specified characteristics.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="logfont">The LOGFONT structure that defines the characteristics of the font.</param>
            <param name="bVert">The font is vertical</param>
            <param name="bTranslateName">Translate names for CJK fonts</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateEmbeddedFont(System.IntPtr,System.Byte[],Patagames.Pdf.Enums.FontCharSet,System.Boolean)">
            <summary>
            Creates a built in font that has the specified characteristics.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="data">A byte array containing the font program that should be embedded.</param>
            <param name="charSet">The character set.</param>
            <param name="bVert">The font is vertical.</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateFont(System.IntPtr,System.String,System.Boolean,Patagames.Pdf.Enums.FontFlags,Patagames.Pdf.Enums.FontWeight,System.Int32,Patagames.Pdf.Enums.FontCharSet,System.Boolean)">
            <summary>
            Creates a font with the specified characteristics.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="faceName">A string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHAR values, including the terminating NULL.  If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes.</param>
            <param name="bTrueType">The true type font.</param>
            <param name="flags">The value of the <see cref="T:Patagames.Pdf.Enums.FontFlags"/> entry.</param>
            <param name="weight">The weight of the font.</param>
            <param name="italicAngel">The angle, expressed in degrees counterclockwise from the vertical, of the dominant vertical strokes of the font. (For example, the 9-o’clock position is 90 degrees, and the 3-o’clock position is –90 degrees.) The value is negative for fonts that slope to the right, as almost all italic fonts do.</param>
            <param name="charSet">The character set.</param>
            <param name="bVert">The font is vertical.</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateFontFromDict(System.IntPtr,System.IntPtr)">
            <summary>
            Creates a font with the specified characteristics.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="fontDict">Handle to the font dictionary.</param>
            <returns>Handle to newly created font or IntPtr.Zero if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetFontDict(System.IntPtr)">
            <summary>
            Gets dictionary from font object
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Handle to the font dictionary; IntPtr.Zero if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetFontType(System.IntPtr)">
            <summary>
            Get font type
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Font type</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetFontTypeName(System.IntPtr)">
            <summary>
            Retrieve the font type name of the font and return the name in a string
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>The string what represents the font type name</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetBaseFont(System.IntPtr)">
             <summary>
            Retrieve the base font name of the font and return the name in a string
             </summary>
             <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
             <returns>The string what represents the base font name</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetSubstFont(System.IntPtr,System.IntPtr@,System.String@,System.Int32@,Patagames.Pdf.Enums.FontSubstFlags@,System.Int32@,System.Int32@,System.Boolean@,System.Int32@,System.Boolean@)">
            <summary>
            Get SubstFont
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <param name="ExtHandle">Handle</param>
            <param name="Family">Font family</param>
            <param name="Charset">Charset</param>
            <param name="SubstFlags">Flags</param>
            <param name="Weight">Wight</param>
            <param name="ItalicAngle">Italic angel</param>
            <param name="SubstOfCJK">Is Chines Japan Korean</param>
            <param name="WeightCJK">Weight of CJK</param>
            <param name="ItlicCJK">Is italick CJK</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetFlags(System.IntPtr)">
            <summary>
            Get the value of the flags entry in a font descriptor.
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Value of the flags entry in a font descriptor.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_IsVertWriting(System.IntPtr)">
            <summary>
            Specifies whether the font is VertWriting
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>True if the font is VertWriting, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_IsEmbedded(System.IntPtr)">
            <summary>
            Specifies whether the font is embedded into PDF document
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>True if the font is embedded, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_IsUnicodeCompatible(System.IntPtr)">
            <summary>
            Specifies whether the font is unicode compatible
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>True if the font is unicode compatible, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_IsStandardFont(System.IntPtr)">
            <summary>
            Specifies whether the font is a standard font
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>True if the font is a standard font, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetTypeAscent(System.IntPtr)">
            <summary>
            Get the ascent value in the font
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Ascent value in the font</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetTypeDescent(System.IntPtr)">
            <summary>
            Get the descent value in the font
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Descent value in the font</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetItalicAngle(System.IntPtr)">
            <summary>
            Get the italic angle value in the font
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>Italic angle value in the font</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetStemV(System.IntPtr)">
            <summary>
            Get the StemV value in the font
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <returns>StemV value in the font</returns>
            <remarks>
            StemV value can be used to calculate the Weight of the font: Weight = StemV #x3C 140 ? StemV * 5 : (StemV * 4 + 140);
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetStringWidth(System.IntPtr,System.String)">
            <summary>
            Get a special string width of a font object.
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <param name="text">Text the width of which is should be obtained.</param>
            <returns>String width of a font object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetCharWidthF(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Get a special character width of a font object.
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <param name="charcode">The character code.</param>
            <param name="level">Reserved. Mast be 0.</param>
            <returns>Character width of a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetCharTypeWidth(System.IntPtr,System.Int32,System.Boolean@)">
            <summary>
            Get a special character width of a font object.
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <param name="charcode">The character code.</param>
            <param name="isVert">Gets the flag indicating whether a given symbol is vertically inscribed.</param>
            <returns>Character width of a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_GetCharBBox(System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Get the special character bounding box of a font object.
            </summary>
            <param name="font">Handle to the font obtained by <see cref="O:Patagames.Pdf.Pdfium.FPDF_GetStockFont"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFTextObj_GetFont(System.IntPtr)"/></param>
            <param name="charcode">The character code.</param>
            <param name="left">Pointer to a float value receiving the left of a rectangle (in points).</param>
            <param name="top">Pointer to a float value receiving the top of a rectangle (in points).</param>
            <param name="right">Pointer to a float value receiving the right of a rectangle (in points).</param>
            <param name="bottom">Pointer to a float value receiving the bottom of a rectangle (in points).</param>
            <param name="level">Reserved. Mast be 0</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_UnicodeFromCharCode(System.IntPtr,System.Int32)">
            <summary>
            Convert char code to unicode
            </summary>
            <param name="font">Handle to the font object</param>
            <param name="charcode">Char code</param>
            <returns>A unicode character</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFont_CharCodeFromUnicode(System.IntPtr,System.Char)">
            <summary>
            Convert unicode to char code
            </summary>
            <param name="font">Handle to the font object</param>
            <param name="unicode">Unicode</param>
            <returns>A char code</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_CalcBoundingBox(System.IntPtr)">
            <summary>
            Calculate bounding box
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_SetFormMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Sets transform matrix for form object.
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="pMatrix">The transform matrix</param>
            <remarks>Application should call <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_CalcBoundingBox(System.IntPtr)"/> method to take transformation effect.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Gets transform matrix for form object.
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="pMatrix">The transform matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)">
            <summary>
            Gets content for specified form object
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>Handle to form content object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormObj_SetFormContent(System.IntPtr,System.IntPtr)">
            <summary>
            Sets content for specified form object
            </summary>
            <param name="formObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="formContent">Form content what should be set</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAnnot_GetAppearanceStream(System.IntPtr,Patagames.Pdf.Enums.AppearanceStreamModes)">
            <summary>
            Gets appearance stream for the specified annotation and mode
            </summary>
            <param name="annotDict">Handle to the PDF document.</param>
            <param name="mode">An annotation appearance mode.</param>
            <returns>Handle to the appearance stream.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_BackgroundAlphaNeeded(System.IntPtr)">
            <summary>
            Check something.
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns>True or False</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_CountObjects(System.IntPtr)">
            <summary>
            Get number of page objects in this content object
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns>number of page objects or -1 if any error occurs</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_GetObjectByIndex(System.IntPtr,System.Int32)">
            <summary>
            Gets the page objects from content object by index
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="index">Index of page object in content object</param>
            <returns>Handle to the page object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_GetObjectIndex(System.IntPtr,System.IntPtr)">
            <summary>
            Gets the index of specified page objects
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="pageObjet">Handle to the page object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormContent_GetObjectByIndex(System.IntPtr,System.Int32)"/></param>
            <returns>Index of page object or -1 if any error occurs</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_IsParsed(System.IntPtr)">
            <summary>
            Check whether the content object is parsed or not.
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns>True if content parsed, false otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_GetTransparency(System.IntPtr)">
            <summary>
            Gets transparency type for specified content object
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns><see cref="T:Patagames.Pdf.Enums.FormObjectTransparency"/> enumeration</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_SetTransparency(System.IntPtr,Patagames.Pdf.Enums.FormObjectTransparency)">
            <summary>
            Sets transparency type for specified content object
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="transparency">Transparency type</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_TransformObjects(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform all objects in content object with a specified matrix.
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="pMatrix">The transform matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_InsertObject(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Insert specified page object into content object
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="newObject">Handle to page object which will be inserted</param>
            <param name="index">The zero-based index at which the object should be inserted.</param>
            <remarks><note type="warning">If you insert the same objects multiple times, then an error will occur during disposing those objects.</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_RemoveObject(System.IntPtr,System.Int32)">
            <summary>
            Removes object from content object at the specified index.
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_GetDocument(System.IntPtr)">
            <summary>
            Get underlying document from content object
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFFormObj_GetFormContent(System.IntPtr)"/></param>
            <returns>Handle to PDF Document</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_Parse(System.IntPtr)">
            <summary>
            Parse given content object.
            </summary>
            <param name="contentObject">Handle to form object returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFFormContent_Create"/></param>
            <returns>False if contentObject is IntPtr.Zero; true otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_Create(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Creates content object from given stream.
            </summary>
            <param name="doc">Handle to the PDF document.</param>
            <param name="stream">The input stream to parse.</param>
            <param name="pageRes">Handle to the page's resource dictionary</param>
            <param name="parentRes">Handle to the parent's resource dictionary</param>
            <returns>Handle to form content object</returns>
            <remarks>The order of searching resourses is stream dictionary, pageRes, parentRes </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_Create(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Creates content object from given stream.
            </summary>
            <param name="doc">Handle to the PDF document.</param>
            <param name="stream">The input stream to parse.</param>
            <param name="pageRes">Handle to the page's resource dictionary</param>
            <returns>Handle to form content object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormContent_Delete(System.IntPtr)">
            <summary>
            Destroy content.
            </summary>
            <param name="contentObject">Handle to the content object returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFFormContent_Create"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObjectList_GetObject(System.IntPtr,System.Int32)">
            <summary>
            Get page object by index
            </summary>
            <param name="list">Handle to a list of page objects.</param>
            <param name="index">The index of a page object.</param>
            <returns>The Handle to the page object. IntPtr.Zero if any error has occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObjectList_CountObject(System.IntPtr)">
            <summary>
            Get number of page objects.
            </summary>
            <param name="list">Handle to a list of page objects.</param>
            <returns>The number of the page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObjectList_RemoveObject(System.IntPtr,System.Int32)">
            <summary>
            Remove object from the collection at specified index.
            </summary>
            <param name="list">Handle to a list of page objects.</param>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObjectList_InsertObject(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Add an object to the objects coolection after specified index. The page object is automatically freed.
            </summary>
            <param name="list">Handle to a list of page objects.</param>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/>.</param>
            <param name="index">>The zero-based index at which object should be inserted.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_CalcBoundingBox(System.IntPtr)">
            <summary>
            Calculate bounding box
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)">
            <summary>
            Get the path associated with this PathObject.
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>Handle to a path associated with this path object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetFillType(System.IntPtr)">
            <summary>
            Get the fill type of the specified path object.
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>The fill type of the specified path object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_SetFillType(System.IntPtr,Patagames.Pdf.Enums.FillModes)">
            <summary>
            Set the fill type to the specified PathObject.
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="fillMode">The fill type of the specified path object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetIsStroke(System.IntPtr)">
            <summary>
            Check whether the stroke flag is true or not.
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>The true mean to paint a line along the path; false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_SetIsStroke(System.IntPtr,System.Boolean)">
            <summary>
            Set the stroke flag.
            </summary>
            <param name="path_obj">Handle to a path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="isStroke">True mean to paint a line along the path.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the transformation matrix of the path object.
            </summary>
            <param name="path_obj">Handle to path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <param name="a">Pointer to a float value receiving the coefficient "a" of the matrix.</param>
            <param name="b">Pointer to a float value receiving the coefficient "b" of the matrix.</param>
            <param name="c">Pointer to a float value receiving the coefficient "c" of the matrix.</param>
            <param name="d">Pointer to a float value receiving the coefficient "d" of the matrix.</param>
            <param name="e">Pointer to a float value receiving the coefficient "e" of the matrix.</param>
            <param name="f">Pointer to a float value receiving the coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetMatrix(System.IntPtr)">
            <summary>
            Get the transformation matrix of the path object.
            </summary>
            <param name="path_obj">Handle to the path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/></param>
            <returns>An instance of <see cref="T:Patagames.Pdf.FS_MATRIX"/>. Never returns NULL.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_SetMatrix(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the matrix of a path object
            </summary>
            <param name="path_obj">Handle to the path object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPathObj_SetMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the matrix of a path object
            </summary>
            <param name="path_obj">Handle to the path object.</param>
            <param name="matrix">The matrix of path object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_Create">
            <summary>
            Create a path object
            </summary>
            <returns>The Handle to the created path, or IntPtr.Zero if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_Delete(System.IntPtr)">
            <summary>
            Destroy a path and release all related buffers 
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetPointCount(System.IntPtr)">
            <summary>
            Gets the number of points in the current path
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <returns>The number of points in the current path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetFlag(System.IntPtr,System.Int32)">
            <summary>
            Gets the type of the path point at the specified index.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="index">The zero-based index of the point</param>
            <returns>The type of the path point.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetPointX(System.IntPtr,System.Int32)">
            <summary>
            Get x-coordinate of the path point />.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="index">The zero-based index of the point</param>
            <returns>The x-coordinate of the path point</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetPointY(System.IntPtr,System.Int32)">
            <summary>
            Get y-coordinate of the path point />.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="index">The zero-based index of the point</param>
            <returns>The y-coordinate of the path point</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetPoints(System.IntPtr)">
            <summary>
            Gets the points in the path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <returns>An array of <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/>structures that represent the path; or null if any errors occurs</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetBoundingBox(System.IntPtr)">
            <summary>
            Get a rectangle that bounds this Path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <returns>A rectangle that bounds this Path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_GetBoundingBoxEx(System.IntPtr,System.Single,System.Single)">
            <summary>
            Get a rectangle that bounds this Path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="line_width">Line width.</param>
            <param name="miter_limit"></param>
            <returns>A rectangle that bounds this Path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_IsRect(System.IntPtr)">
            <summary>
            Determines whether this path is a rectangle.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <returns>true if this path is rectangle, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_AppendEx(System.IntPtr,System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Appends the specified Path to another path.
            </summary>
            <param name="path">Handle to the destination path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="src">Handle to the source path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="matrix">Transformation matrix.</param>
            <remarks>This method internally calls the <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_AddPointCount(System.IntPtr,System.Int32)"/> method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_Append(System.IntPtr,System.IntPtr)">
            <summary>
            Appends the specified Path to another path.
            </summary>
            <param name="path">Handle to the destination path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="src">Handle to the source path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <remarks>This method internally calls the <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_AddPointCount(System.IntPtr,System.Int32)"/> method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_AppendRect(System.IntPtr,Patagames.Pdf.FS_RECTF)">
            <summary>
            Adds a rectangle to the path.
            </summary>
            <param name="path">Handle to the destination path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="rect">A <see cref="T:Patagames.Pdf.FS_RECTF"/> that represents the rectangle to add.</param>
            <remarks>This method internally calls the <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_AddPointCount(System.IntPtr,System.Int32)"/> method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_Copy(System.IntPtr,System.IntPtr)">
            <summary>
            Copy points from one Path to another.
            </summary>
            <param name="path">Handle to the destination path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="src">Handle to the source path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <remarks>This method internally calls the <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_SetPointCount(System.IntPtr,System.Int32)"/> method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_SetPoint(System.IntPtr,System.Int32,Patagames.Pdf.FS_PATHPOINTF)">
            <summary>
            Set specified point at specified index.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="index">The zero-based index of the point</param>
            <param name="point">The <see cref="T:Patagames.Pdf.FS_PATHPOINTF"/> that represents the point to add.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_SetPointCount(System.IntPtr,System.Int32)">
            <summary>
            Sets the number of points in the specified path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="count">Number of points</param>
            <remarks>If the existing buffer is smaller than necessary, then a new one is allocated, and the existing one is destroyed.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_AllocPointCount(System.IntPtr,System.Int32)">
            <summary>
            Allocates the buffer for a given number of points.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="count">Number of points</param>
            <remarks>If the existing buffer is smaller than necessary, a new one is created, and all existing points are copied to it. Otherwise do nothing.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_AddPointCount(System.IntPtr,System.Int32)">
            <summary>
            Adds the specified number of points to the specified path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="count">The number of points</param>
            <remarks>A new buffer is created, and all existing points are copied to it.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_TrimPoints(System.IntPtr,System.Int32)">
            <summary>
            Decreases the number of points in the specified path to the specified count.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="count">The number of points</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPath_Transform(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) path.
            </summary>
            <param name="path">Handle to the path returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPath_Create"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPathObj_GetPath(System.IntPtr)"/>.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetLineWidth(System.IntPtr)">
            <summary>
            Get the line width parameter specifies the thickness of the line used to stroke a path.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The line width</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetLineWidth(System.IntPtr,System.Single)">
            <summary>
            Set the line width parameter specifies the thickness of the line used to stroke a path.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="width">The line width.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetMiterLimit(System.IntPtr)">
            <summary>
            Get the miter limit of the line used to stroke a path.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The miter limit</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetMiterLimit(System.IntPtr,System.Single)">
            <summary>
            Set the miter limit of the line used to stroke a path.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="miterLimit">The miter limit.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetDashPhase(System.IntPtr)">
            <summary>
            Get the dash phase parameter specifies the the distance into the dash pattern at which to start the dash.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The dash phase.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetDashPhase(System.IntPtr,System.Single)">
            <summary>
            Set the dash phase parameter specifies the the distance into the dash pattern at which to start the dash.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="dashPhase">The dash phase.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetLineJoin(System.IntPtr)">
            <summary>
            Get the line join style.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Current line join style</returns>
            <remarks>See <see cref="T:Patagames.Pdf.Enums.LineJoin"/> enumeration for details. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetLineJoin(System.IntPtr,Patagames.Pdf.Enums.LineJoin)">
            <summary>
            Get the line join style. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="lineJoin">The line join style.</param>
            <remarks>See <see cref="T:Patagames.Pdf.Enums.LineJoin"/> enumeration for details. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetLineCap(System.IntPtr)">
            <summary>
            Get the line cap style.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Current line cap style</returns>
            <remarks>See <see cref="T:Patagames.Pdf.Enums.LineCap"/> enumeration for details. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetLineCap(System.IntPtr,Patagames.Pdf.Enums.LineCap)">
            <summary>
            Get the line cap style. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="lineCap">The line cap style.</param>
            <remarks>See <see cref="T:Patagames.Pdf.Enums.LineCap"/> enumeration for details. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetDashArray(System.IntPtr)">
            <summary>
            Get the line dash pattern.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The dash pattern if exists; null otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetDashArray(System.IntPtr,System.Single[])">
            <summary>
            Set the line dash pattern.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="dash">The line dash pattern.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetFlatness(System.IntPtr)">
            <summary>
            Get the flatness tolerance in the graphics state. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>A number in the range 0 to 100; a value of 0 specifies the output device’s default flatness tolerance.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetFlatness(System.IntPtr,System.Single)">
            <summary>
            Set the flatness tolerance in the graphics state. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="flatness">A number in the range 0 to 100; a value of 0 specifies the output device’s default flatness tolerance.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetSmoothness(System.IntPtr)">
            <summary>
            Get the smoothness tolerance in the graphics state. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>A number in the range 0.0 to 1.0;</returns>
            <remarks>
             Smoothness is the allowable color error between a shading approximated by piecewise linear interpolation and the true value of a (possibly nonlinear) shading function. The error is measured for each color component, and 
             the maximum error is used.The allowable error(or tolerance) is expressed as a 
             fraction of the range of the color component, from 0.0 to 1.0. Thus, a smoothness 
             tolerance of 0.1 represents a tolerance of 10 percent in each color component.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetSmoothness(System.IntPtr,System.Single)">
            <summary>
            Set the smoothness tolerance in the graphics state. 
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="smoothness">A number in the range 0.0 to 1.0;</param>
            <remarks>
            See remarks section here: <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetSmoothness(System.IntPtr)"/>
            </remarks>        
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetBlendMode(System.IntPtr)">
            <summary>
            Get the current blend mode to be used in the transparent imaging model.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Current blend mode.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetBlendMode(System.IntPtr,Patagames.Pdf.Enums.BlendTypes)">
            <summary>
            Set the current blend mode to be used in the transparent imaging model.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="blendMode">The blend mode to be set.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetRenderIntent(System.IntPtr)">
            <summary>
            Get the rendering intent.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Current rendering intent</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetRenderIntent(System.IntPtr,Patagames.Pdf.Enums.RenderIntent)">
            <summary>
            Set the rendering intent.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="renderIntent">The rendering intent to be set.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetOverprintMode(System.IntPtr)">
            <summary>
            Get overptint mode.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Current overprint mode.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetOverprintMode(System.IntPtr,System.Int32)">
            <summary>
            Set overprint mode.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="mode">The overprint mode to be set.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetAlphaIsShapeFlag(System.IntPtr)">
            <summary>
            Get the alpha source flag (“alpha is shape”), specifying whether the current soft mask and alpha constant are to be interpreted as 
            shape values(true) or opacity values(false).
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>true for shape values, false for opacity values.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetAlphaIsShapeFlag(System.IntPtr,System.Boolean)">
            <summary>
            Set the alpha source flag (“alpha is shape”), specifying whether the current soft mask and alpha constant are to be interpreted as 
            shape values(true) or opacity values(false).
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="flag">The alpha source flag to be set. Set true for shape values, false - opacity values.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetTextKnockoutFlag(System.IntPtr)">
            <summary>
            Get the text knockout flag, which determines the behavior of overlapping glyphs within a text object in the transparent imaging model.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The current text knockout flag.</returns>
            <remarks>
            If its value is false, each glyph in a text object is treated as a separate elementary object; when glyphs overlap, they composite with one another.
            If the parameter is true, all glyphs in the text object are treated together as a single elementary object; when glyphs overlap, later glyphs overwrite(“knock out”) earlier ones in the area of overlap.
            <para>Default: true.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetTextKnockoutFlag(System.IntPtr,System.Boolean)">
            <summary>
            Set the text knockout flag, which determines the behavior of overlapping glyphs within a text object in the transparent imaging model.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="flag">The text knockout flag to be set.</param>
            <remarks>See remarks section of <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetTextKnockoutFlag(System.IntPtr)"/> for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeOverprintFlag(System.IntPtr)">
            <summary>
            Get a flag specifying whether to apply overprint for stroking operations.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>True or false. Please see remarks section for details.</returns>
            <remarks>
            <para>
            If the overprint parameter is false (the default value), painting a color in any color space causes the corresponding areas of unspecified colorants to be erased(painted with a tint value of 0.0). The effect is that the color at any position on the page is whatever was painted there last, which is consistent with the normal painting behavior of the opaque imaging model.
            </para>
            <para>
            If the overprint parameter is true and the output device supports overprinting, no such erasing actions are performed; anything previously painted in other colorants is left undisturbed.Consequently, the color at a given position on the page may be a combined result of several painting operations in different colorants. The effect produced by such overprinting is device-dependent and is not defined by the PDF language.
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetStrokeOverprintFlag(System.IntPtr,System.Boolean)">
            <summary>
            Set a flag specifying whether to apply overprint for stroking operations.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="flag">The overprint flag to be set.</param>
            <remarks>See remarks section of the <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeOverprintFlag(System.IntPtr)"/> for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetFillOverprintFlag(System.IntPtr)">
            <summary>
            Get a flag specifying whether to apply overprint for non stroking operations.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>True or false. Please see remarks section for details.</returns>
            <remarks>See remarks section of the <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeOverprintFlag(System.IntPtr)"/> for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetFillOverprintFlag(System.IntPtr,System.Boolean)">
            <summary>
            Set a flag specifying whether to apply overprint for non stroking operations.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="flag">The overprint flag to be set.</param>
            <remarks>See remarks section of the <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeOverprintFlag(System.IntPtr)"/> for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_SetForceClear(System.IntPtr,System.Boolean)">
            <summary>
            Set ForceClear flag for the specified pattern.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <param name="bForceClear">The Boolean value.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_GetPatternType(System.IntPtr)">
            <summary>
            Get the type of the specified pattern.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <returns>An enumerated constant that indicates the type of pattern.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_GetPatternObj(System.IntPtr)">
            <summary>
            Get Dictionary or Stream that describes the pattern.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <returns>The handle to the Dictionary or Stream object that describes the pattern.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_GetDocument(System.IntPtr)">
            <summary>
            Get PDF Document assigned with the pattern.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <returns>The handle to the PDF document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_GetParentMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get a transformation matrix.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix.</param>
            <param name="f">The coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPattern_GetPattern2FormMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get a transformation matrix.
            </summary>
            <param name="pattern">The handle to the pattern.</param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix.</param>
            <param name="f">The coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_CalcBoundingBox(System.IntPtr)">
            <summary>
            Calculate bounding box
            </summary>
            <param name="shadingObject">The handle to shading object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_GetMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the transformation matrix of the shading object.
            </summary>
            <param name="shading_obj">The handle to shading object.</param>
            <param name="a">Pointer to a float value receiving the coefficient "a" of the matrix.</param>
            <param name="b">Pointer to a float value receiving the coefficient "b" of the matrix.</param>
            <param name="c">Pointer to a float value receiving the coefficient "c" of the matrix.</param>
            <param name="d">Pointer to a float value receiving the coefficient "d" of the matrix.</param>
            <param name="e">Pointer to a float value receiving the coefficient "e" of the matrix.</param>
            <param name="f">Pointer to a float value receiving the coefficient "f" of the matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_GetMatrix(System.IntPtr)">
            <summary>
            Get the transformation matrix of the shading object.
            </summary>
            <param name="shading_obj">The handle to the shading object.</param>
            <returns>An instance of <see cref="T:Patagames.Pdf.FS_MATRIX"/>. Never returns NULL.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_SetMatrix(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the transformation matrix into shading object
            </summary>
            <param name="shading_obj">The handle to shading object.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_SetMatrix(System.IntPtr,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the transformation matrix into shading object
            </summary>
            <param name="path_obj">The handle to the shading object.</param>
            <param name="matrix">The matrix of path object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_GetShaddingPattern(System.IntPtr)">
            <summary>
            Get shading pattern.
            </summary>
            <param name="shading_obj">The handle to shading object.</param>
            <returns>A handle to shading pattern; IntPtr.Zero if any error has occurred.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingObj_SetShaddingPattern(System.IntPtr,System.IntPtr)">
            <summary>
            Set shading pattern into the specified shading object.
            </summary>
            <param name="shading_obj">The handle to shading object.</param>
            <param name="shading_pattern">The handle to shading pattern.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_Create(System.IntPtr,Patagames.Pdf.Enums.ShadingTypes,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Create a shading pattern.
            </summary>
            <param name="document">The handle to the PDF document.</param>
            <param name="shadingType">The type of shading pattern.</param>
            <param name="pMatrix">The transformation matrix.</param>
            <returns>Handle to the created shading pattern; IntPtr.Zero if any error has occurred.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_Delete(System.IntPtr)">
            <summary>
            Delete shading pattern.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetShadingType(System.IntPtr)">
            <summary>
            Get type of shading
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>Type of shadding; <see cref="F:Patagames.Pdf.Enums.ShadingTypes.Invalid"/> if any error has occured</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetShadingObj(System.IntPtr)">
            <summary>
            Get shading.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>The handle to the Dictionary or Stream object that describes the shading.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetColorSpace(System.IntPtr)">
            <summary>
            Get the color space in which color values are expressed.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>An enumerated constant that indicates the color space.</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_INVALID_PARAMETER(87);</exception>
            <remarks>
            This may be any device, CIE-based, or special color space except a <see cref="F:Patagames.Pdf.Enums.ColorTypes.Pattern"/> space. 
            The <see cref="F:Patagames.Pdf.Enums.ColorTypes.Unsupported"/> does mean that this method can not be used to retrieve color space. In this case use shading's dictionary to get information about color space.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetColorSpace(System.IntPtr,Patagames.Pdf.Enums.ColorTypes)">
            <summary>
            Set the color space in which color values are expressed.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="colorSpace">An enumerated constant that indicates the color space.</param>
            <returns>
            <list type="table">
            <item><term>&lt;0</term><description>An error has been occurred.</description></item>
            <item><term>0</term><description>An unsupported color space was specified.</description></item>
            <item><term>&gt;0</term><description>If the function succeeds.</description></item>
            </list>
            </returns>
            <remarks>
            The following color spaces may be specified only: <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceGray"/>, <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceGray"/> and <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceRGB"/>
            If you try to set other type of color space except listed above, the function fails  with 0. In this case use shading's dictionary to set such color space.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetBackground(System.IntPtr)">
            <summary>
            Get the background color of a shading.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>Background color of a shading in argb format (0xffrrggbb)</returns>
            <remarks>Alpha channel is ignored.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetBackground(System.IntPtr,System.Int32)">
            <summary>
            Set the fill color of a page object.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="argb">Background color of a shading in argb format (0xffrrggbb)</param>
            <remarks>Alpha channel is ignored.
            <note type="note">This function set background color in <see cref="F:Patagames.Pdf.Enums.ColorTypes.DeviceRGB"/> format only.</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetBoundingBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get bounding box of the shading.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="left">X coordinate of the shading's left edge.</param>
            <param name="top">Y coordinate of the shading's top edge.</param>
            <param name="right">X coordinate of the shading's right edge.</param>
            <param name="bottom">Y coordinate of the shading's bottom edge.</param>
            <remarks>
            The coordinates are interpreted in the shading’s target coordinate space. 
            If present, this bounding box is applied as a temporary clipping boundary when the shading is painted,
            in addition to the current clipping path and any other clipping boundaries in effect at that time.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetBoundingBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set bounding box of the shading.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="left">X coordinate of the shading's left edge.</param>
            <param name="top">Y coordinate of the shading's top edge.</param>
            <param name="right">X coordinate of the shading's right edge.</param>
            <param name="bottom">Y coordinate of the shading's bottom edge.</param>
            <returns>True for successfull; false if any error has occurred.</returns>
            <remarks>
            The coordinates are interpreted in the shading’s target coordinate space. 
            If present, this bounding box is applied as a temporary clipping boundary when the shading is painted,
            in addition to the current clipping path and any other clipping boundaries in effect at that time.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetAntiAlias(System.IntPtr)">
            <summary>
            Get a flag indicating whether to filter the shading function to prevent aliasing artifacts.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>true if antialiasing is applied.</returns>
            <remarks>
            The shading operators sample shading functions at a rate determined by the resolution of the output device.
            Aliasing can occur if the function is not smooth—that is, if it has a high spatial frequency relative to
            the sampling rate.Anti-aliasing can be computationally expensive and is usually unnecessary, since most shading functions are smooth enough or are
            sampled at a high enough frequency to avoid aliasing effects. Anti-aliasing may not be implemented on some output devices, in which case this flag is ignored.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetAntiAlias(System.IntPtr,System.Boolean)">
            <summary>
            Set a flag indicating whether to filter the shading function to prevent aliasing artifacts.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="bAntiAlias">A flag</param>
            <returns>true if antialiasing is applied.</returns>
            <remarks>
            The shading operators sample shading functions at a rate determined by the resolution of the output device.
            Aliasing can occur if the function is not smooth—that is, if it has a high spatial frequency relative to
            the sampling rate.Anti-aliasing can be computationally expensive and is usually unnecessary, since most shading functions are smooth enough or are
            sampled at a high enough frequency to avoid aliasing effects. Anti-aliasing may not be implemented on some output devices, in which case this flag is ignored.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetDomain(System.IntPtr)">
            <summary>
            Get the shading's domain.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>An array of numbers depending on the specific type of shading; null if any error has occurred.</returns>
            <remarks>
            <list type="table">
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/></term><description>An array of four numbers [Xmin Xmax Ymin Ymax] specifying the rectangular domain of coordinates over which the color function(s) are defined; null if any error has occurred. Default value: [0.0 1.0 0.0 1.0].</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/></term><description>An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending points of the axis. The variable t becomes the input argument to the color function(s). Default value: [0.0 1.0].</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/></term><description>An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending circles. The variable t becomes the input argument to the color function(s). Default value: [0.0 1.0]</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FreeFormGouraudTriangleMeshShading"/></term><description>Unsupported.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.LatticeFormGouraudTriangleMeshShading"/></term><description>Unsupported.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.CoonsPatchMeshShading"/></term><description>Unsupported.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.TensorProductPatchMeshShading"/></term><description>Unsupported.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType1_GetDomain(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the rectangular domain of coordinates over which the color function(s) are defined.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="xMin">The minimum value of the rectangular domain of coordinates in horizontal dimension.</param>
            <param name="yMin">The minimum value of the rectangular domain of coordinates in vertical dimension.</param>
            <param name="xMax">The maximum value of the rectangular domain of coordinates in horizontal dimension.</param>
            <param name="yMax">The maximum value of the rectangular domain of coordinates in vertical dimension.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The domain rectangle establishes an internal coordinate space for the shading that is independent of the target coordinate space in which it is to be painted.
            <note type="note">Only applicable to Type 1 (Function-Based) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_GetDomain(System.IntPtr,System.Single@,System.Single@)">
            <summary>
            Get the limiting values of a parametric variable t.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="t0">The minimum value of a parametric variable t.</param>
            <param name="t1">The minimum value of a parametric variable t.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending points of the axis.
            The variable t becomes the input argument to the color function(s).
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_GetDomain(System.IntPtr,System.Single@,System.Single@)">
            <summary>
            Get the limiting values of a parametric variable t.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="t0">The minimum value of a parametric variable t.</param>
            <param name="t1">The minimum value of a parametric variable t.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending circles.
            The variable t becomes the input argument to the color function(s).
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetDomain(System.IntPtr,System.Single[])">
            <summary>
            Set the shading's domain.
            </summary>
            <param name="shadding_pattern">The handle to the shading.</param>
            <param name="domain">An array of numbers depending on the specific type of shading.</param>
            <returns>true for successful; false if any errors has occurred.</returns>
            <remarks>Please see remarks of <see cref="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetDomain(System.IntPtr)"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType1_SetDomain(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the rectangular domain of coordinates over which the color function(s) are defined.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="xMin">The minimum value of the rectangular domain of coordinates in horizontal dimension.</param>
            <param name="yMin">The minimum value of the rectangular domain of coordinates in vertical dimension.</param>
            <param name="xMax">The maximum value of the rectangular domain of coordinates in horizontal dimension.</param>
            <param name="yMax">The maximum value of the rectangular domain of coordinates in vertical dimension.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The domain rectangle establishes an internal coordinate space for the shading that is independent of the target coordinate space in which it is to be painted.
            <note type="note">Only applicable to Type 1 (Function-Based) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_SetDomain(System.IntPtr,System.Single,System.Single)">
            <summary>
            Set the limiting values of a parametric variable t.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="t0">The minimum value of a parametric variable t.</param>
            <param name="t1">The minimum value of a parametric variable t.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending points of the axis.
            The variable t becomes the input argument to the color function(s).
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_SetDomain(System.IntPtr,System.Single,System.Single)">
            <summary>
            Set the limiting values of a parametric variable t.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="t0">The minimum value of a parametric variable t.</param>
            <param name="t1">The minimum value of a parametric variable t.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The variable is considered to vary linearly between these two values as the color gradient varies between the starting and ending circles.
            The variable t becomes the input argument to the color function(s).
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType1_GetMatrix(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get a transformation matrix mapping the coordinate space specified by the shading's domain into the shading’s target coordinate space.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix.</param>
            <param name="f">The coefficient "f" of the matrix.</param>
            <remarks>
            <note type="note">Only applicable to Type 1 (Function-Based) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType1_SetMatrix(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set a transformation matrix mapping the coordinate space specified by the shading's domain into the shading’s target coordinate space.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix.</param>
            <param name="f">The coefficient "f" of the matrix.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            <note type="note">Only applicable to Type 1 (Function-Based) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_GetCoords(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the starting and ending coordinates of the axis.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="x0">The X coordinate of the starting point of the axis, expressed in the shading’s target coordinate space</param>
            <param name="y0">The Y coordinate of the starting point of the axis, expressed in the shading’s target coordinate space</param>
            <param name="x1">The X coordinate of the ending point of the axis, expressed in the shading’s target coordinate space</param>
            <param name="y1">The Y coordinate of the ending point of the axis, expressed in the shading’s target coordinate space</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_SetCoords(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the starting and ending coordinates of the axis.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="x0">The X coordinate of the starting point of the axis, expressed in the shading’s target coordinate space.</param>
            <param name="y0">The Y coordinate of the starting point of the axis, expressed in the shading’s target coordinate space.</param>
            <param name="x1">The X coordinate of the ending point of the axis, expressed in the shading’s target coordinate space.</param>
            <param name="y1">The Y coordinate of the ending point of the axis, expressed in the shading’s target coordinate space.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_GetCoords(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the centers and radii of the starting and ending circles
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="x0">The X coordinate of the center of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="y0">The Y coordinate of the center of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="r0">The radius of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="x1">The X coordinate of the center of ending circle, expressed in the shading’s target coordinate space.</param>
            <param name="y1">The Y coordinate of the center of ending circle, expressed in the shading’s target coordinate space.</param>
            <param name="r1">The radius of starting circle, expressed in the shading’s target coordinate space.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_SetCoords(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the centers and radii of the starting and ending circles
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="x0">The X coordinate of the center of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="y0">The Y coordinate of the center of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="r0">The radius of starting circle, expressed in the shading’s target coordinate space.</param>
            <param name="x1">The X coordinate of the center of ending circle, expressed in the shading’s target coordinate space.</param>
            <param name="y1">The Y coordinate of the center of ending circle, expressed in the shading’s target coordinate space.</param>
            <param name="r1">The radius of starting circle, expressed in the shading’s target coordinate space.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            The radii r0 and r1 must both be greater than or equal to 0. If one radius is 0, the corresponding circle is treated as a point; if both are 0, nothing is painted.
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_GetExtend(System.IntPtr,System.Boolean@,System.Boolean@)">
            <summary>
            Get two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. 
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="isExtendAtStart">The Boolean value specifying whether to extend the shading beyond the starting point of the axis.</param>
            <param name="isExtendAtEnd">The Boolean value specifying whether to extend the shading beyond the ending point of the axis.</param>
            <remarks>
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType2_SetExtend(System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Set two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. 
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="isExtendAtStart">The Boolean value specifying whether to extend the shading beyond the starting point of the axis.</param>
            <param name="isExtendAtEnd">The Boolean value specifying whether to extend the shading beyond the ending point of the axis.</param>
            <returns>True on success; False otherwise.</returns>
            <remarks>
            <note type="note">Only applicable to Type 2 (Axial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_GetExtend(System.IntPtr,System.Boolean@,System.Boolean@)">
            <summary>
            Get two boolean values specifying whether to extend the shading beyond the starting and ending circles, respectively. 
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="isExtendAtStart">The Boolean value specifying whether to extend the shading beyond the starting circle.</param>
            <param name="isExtendAtEnd">The Boolean value specifying whether to extend the shading beyond the ending circle.</param>
            <remarks>
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingType3_SetExtend(System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Set two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. 
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="isExtendAtStart">The Boolean value specifying whether to extend the shading beyond the starting point of the axis.</param>
            <param name="isExtendAtEnd">The Boolean value specifying whether to extend the shading beyond the ending point of the axis.</param>
            <returns>True on success; False otherwise.</returns>
            <remarks>
            <note type="note">Only applicable to Type 3 (Radial) shadings (<see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/>).</note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_GetFunctions(System.IntPtr)">
            <summary>
            Get the shading's functions.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <returns>An array of functions depending on the specific type of shading; null if any error has occurred.</returns>
            <remarks>
            <note type="note">When an application is finished using the function handles, use the <see cref="M:Patagames.Pdf.Pdfium.FPDFFunction_CloseHandle(System.IntPtr)"/> function with each array item to close the handles.</note>
            <list type="table">
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/></term><description>An array of n 2-in, 1-out functions, where n is the number of color components in the shading’s color space.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. The function(s) are called with values of the parametric variable t in the domain defined by the <see cref="M:Patagames.Pdf.Pdfium.FPDFShadingType2_SetDomain(System.IntPtr,System.Single,System.Single)"/> method.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. The function(s) are called with values of the parametric variable t in the domain defined by the <see cref="M:Patagames.Pdf.Pdfium.FPDFShadingType3_SetDomain(System.IntPtr,System.Single,System.Single)"/> method.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FreeFormGouraudTriangleMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.LatticeFormGouraudTriangleMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.CoonsPatchMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.TensorProductPatchMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFShadingPattern_SetFunctions(System.IntPtr,System.IntPtr[])">
            <summary>
            Set the shading's functions.
            </summary>
            <param name="shadding_pattern">The handle to the shading pattern.</param>
            <param name="functions">An array of functions depending on the specific type of shading.</param>
            <returns>True for successful; false if any error has occurred.</returns>
            <remarks>
            <list type="table">
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FunctionBasedShading"/></term><description>An array of n 2-in, 1-out functions, where n is the number of color components in the shading’s color space.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.AxialShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. The function(s) are called with values of the parametric variable t in the domain defined by the <see cref="M:Patagames.Pdf.Pdfium.FPDFShadingType2_SetDomain(System.IntPtr,System.Single,System.Single)"/> method.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.RadialShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. The function(s) are called with values of the parametric variable t in the domain defined by the <see cref="M:Patagames.Pdf.Pdfium.FPDFShadingType3_SetDomain(System.IntPtr,System.Single,System.Single)"/> method.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.FreeFormGouraudTriangleMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.LatticeFormGouraudTriangleMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.CoonsPatchMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            <item><term><see cref="F:Patagames.Pdf.Enums.ShadingTypes.TensorProductPatchMeshShading"/></term><description>An array of n 1-in, 1-out functions, where n is the number of color components in the shading’s color space. If this entry is present, the color data for each vertex must be specified by a single parametric variable rather than by n separate color components. The designated function(s) are called with each interpolated value of the parametric variable to determine the actual color at each point. Each input value is forced into the range interval specified for the corresponding color component in the shading dictionary’s Decode array. Each function’s domain must be a superset of that interval. If the value returned by the function for a given color component is out of range, it is adjusted to the nearest valid value.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTOOLS_ParseDefaultAppearance(System.String,System.Single[]@,System.Single[]@,System.String@,System.Single@,Patagames.Pdf.FS_MATRIX@)">
            <summary>
            Parse default appearance string
            </summary>
            <param name="defaultAppearance">Defautl appearance string.</param>
            <param name="strokeColor">Gets an array that contains color components or null if default appearance does not contain stroke color. The number of components (array length) depend on color type. (0 - transparent color, 1- gray color, 3 - RGB color, 4 - CMYK color).</param>
            <param name="fillColor">Gets an array that contains color components or null if default appearance does not contain fill color. The number of components (array length) depend on color type. (0 - transparent color, 1- gray color, 3 - RGB color, 4 - CMYK color).</param>
            <param name="fontName">Gets font name or null if default appearance does not contain font.</param>
            <param name="fontSize">Gets font size.</param>
            <param name="matrix">Text matrix or null if default appearance does not contain text matrix.</param>
            <returns>True if successfull; false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTOOLS_GetWaveData(System.Byte[],Patagames.Pdf.Enums.SoundEncodingFormats@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Convert audio WAV file to PDF compatible format.
            </summary>
            <param name="waveData">An array of bytes containing audio file.</param>
            <param name="format">Gets the encoding format of the returned data.</param>
            <param name="chanels">Gets the number of sound channels.</param>
            <param name="rate">Gets the sampling rate, in samples per second.</param>
            <param name="bps">Gets the number of bits per sample.</param>
            <returns>An array of bytes containing audio samples encoded to PDF compatible format.</returns>
            <remarks>
            <note type="note">Currently supported PCM WAV files only.</note>
            </remarks>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_BAD_FORMAT(11): waveData does not contain RIFF or RIFX section.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_UNEXPECTED_FORMAT(536871428): waveData is not in PCM format.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_UNEXPECTED_PARAMETER(536871429): bitsPerSample of waveData has wrong value.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code= ERROR_DOUBLE_SECTION(536871430): waveData has more than one FMT or DATA section.</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">code=ERROR_UNEXPECTED_DATA_LENGTH(536871433): the length of DATA section is wrong.</exception>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFTOOLS_GetAnnotsWithoutAP(System.IntPtr)">
            <summary>
            Gets the indexes of the annotations which has no appearance stream.
            </summary>
            <param name="page">The handle to the page.</param>
            <returns>An array that contains the indexes of the annotations. If there are no such annotations or an error has occurred, null is returned.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)">
            <summary>
            Initialize the interactive forms
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="O:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment"/>.</param>
            <returns>The handle to the interactive forms object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFormNotify(System.IntPtr)">
            <summary>
            Gets Form Notify object
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Form Notify object which used for notification about changes in forms.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_SetFormNotify(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLNOTIFY)">
            <summary>
            Sets Form Notify object
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pNotify">Handle to Form Notify object which used for notification about changes in forms.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_SetFormNotify(System.IntPtr,System.IntPtr)">
            <summary>
            Sets Form Notify object
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pNotify">Handle to Form Notify structure located in the unmanaged memory.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFields(System.IntPtr,System.String)">
            <summary>
            Recursively calculates the number of Fields in an field's tree of the document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="csFieldName">The name of the parent field in the hierarchy of fields or null for the root.</param>
            <returns>Total number of all child fields for the parent field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)">
            <summary>
            Gets field specified by a index and a parent field in the hierarchy of fields
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Field ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFields(System.IntPtr,System.String)"/></param>
            <param name="csFieldName">The name of the parent field in the hierarchy of fields or null for the root.</param>
            <returns>The Field object from the hierarchy of document's fields.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_IsValidFormField(System.IntPtr,System.IntPtr)">
            <summary>
            Determines that specified Field is a valid Field from the hierarchy of documents fields
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="field">Field objects. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)">
            <summary>
            Get total number of controls in a specified field
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="csFieldName">The name of the field in the hierarchy of fields.</param>
            <returns>Total number of controls in the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)">
            <summary>
            Gets control specified by a index for specified field
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)"/></param>
            <param name="csFieldName">The name of the field in the hierarchy of fields.</param>
            <returns>The Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_IsValidFormControl(System.IntPtr,System.IntPtr)">
            <summary>
            Determines that specified Control is a valid Control
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="control">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountPageControls(System.IntPtr,System.IntPtr)">
            <summary>
            Get total number of controls on a specified page
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
            <returns>Total number of controls on a page.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetPageControl(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Gets control specified by a index for specified page 
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountPageControls(System.IntPtr,System.IntPtr)"/></param>
            <returns>The Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFieldsInCalculationOrder(System.IntPtr)">
            <summary>
            Get total number of fields with calculation actions
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns> Count total number of elements in array of indirect references to field dictionaries with calculation actions, defining the calculation order in which their values will be recalculated when the value of any field changes </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFieldInCalculationOrder(System.IntPtr,System.Int32)">
            <summary>
            Gets field with calculation actions specified by a index 
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of a field ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFieldsInCalculationOrder(System.IntPtr)"/></param>
            <returns>Field from an array of indirect references to field dictionaries with calculation actions. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_FindFieldInCalculationOrder(System.IntPtr,System.IntPtr)">
            <summary>
            Find specified field in an array of indirect references to field dictionaries with calculation actions.
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="field">Handle to the Field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFieldInCalculationOrder(System.IntPtr,System.Int32)"/></param>
            <returns>Zero based index of a Field in fields array or -1 if no any fields was found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)">
            <summary>
            Resets forms to their default values
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False if action was canceled</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ReloadForm(System.IntPtr)">
            <summary>
            Reload forms
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_HasXFAForm(System.IntPtr)">
            <summary>
            Determines that the document contains XFA Forms
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>True if PDF document contains XFA Forms, False otherwise</returns>
            <remarks>
            <para>PDF 1.5 introduces support for interactive forms based on the Adobe XML Forms Architecture (XFA). The XFA entry in the interactive forms dictionary specifies an XFA resource, which is an XML stream that contains the
            form information. The format of an XFA resource is described in the XML Data Package (XDP) Specification</para>
            <para>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_FixPageFields(System.IntPtr,System.IntPtr)">
            <summary>
            Fix page fields.
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
            <remarks>
            This method method reload all widget annotations on a page. You may need this if  you are changing the widget annotation through its dictionary.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ExportToFDF(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Export fields into Forms Data Format (FDF) document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pdf_path">Path to the source file: the PDF document file that this FDF file was exported from. </param>
            <param name="bSimpleFileSpec">True for simple file specification, false otherwise/</param>
            <returns>New FDF document</returns>
            <remarks>
            A PDF file can refer to the contents of another file by using a file specification (PDF 1.1), which can take either of two forms:
            <list type="bullet">
            <item>
            A simple file specification gives just the name of the target file in a standard format, independent of the naming conventions of any particular file system. It
            can take the form of either a string or a dictionary
            </item>
            <item>
            A full file specification includes information related to one or more specific file systems. It can only be represented as a dictionary. 
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Import fields from Forms Data Format (FDF) document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="Doc">Handle to FDF Doument</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False if action was canceled</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetDefaultFormFont(System.IntPtr)">
            <summary>
            Get the handle to default font
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Handle to a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetDefaultAppearance(System.IntPtr)">
            <summary>
            Get the handle to default appearance
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Handle to a default appearance object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFormDict(System.IntPtr)">
            <summary>
            Get an AcroForm dictionary
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Handle to dictionary.</returns>
            <remarks>
            An interactive form (PDF 1.2) — sometimes referred to as an AcroForm — is a
            collection of fields for gathering information interactively from the user. A PDF 
            document may contain any number of fields appearing on any combination of 
            pages, all of which make up a single, global interactive form spanning the entire
            document. Arbitrary subsets of these fields can be imported or exported from the
            document.
            <para>
            Each field in a document’s interactive form is defined by a field dictionary. 
            For purposes of definition and naming, the fields can be organized hierarchically 
            and can inherit attributes from their ancestors in the field hierarchy. 
            A field’s children in the hierarchy may also include widget annotations 
            that define its appearance on the page. 
            A field whose children are widget annotations is called a terminal field.
            </para>
            <para>
            As a convenience, when a field has only a single associated widget annotation, the
            contents of the field dictionary and the annotation dictionary may be merged into a single dictionary containing entries
            that pertain to both a field and an annotation. (This presents no ambiguity, since
            the contents of the two kinds of dictionaries do not conflict.) If such an object defines an appearance stream, the appearance must be consistent with the object’s
            current value as a field.
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControlAtPoint(System.IntPtr,System.IntPtr,System.Single,System.Single,System.Int32@)">
            <summary>
            Find a control at specified point on a document page
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the document page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <param name="zOrder">Z-order</param>
            <returns>Handle to the control. IntPtr.Zero if there’s no control at that point.</returns>
            <remarks>The coordinates are specified in page coordinate system. 
            You can convert coordinates from screen system to page system using <see cref="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControlByDict(System.IntPtr,System.IntPtr)">
            <summary>
            Gets the control by its dictionary
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="dictionary">Handle to widget annotation's dictionary</param>
            <returns>Handle to the control.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFieldByDict(System.IntPtr,System.IntPtr)">
            <summary>
            Gets the control by its dictionary
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="dictionary">Handle to field's dictionary</param>
            <returns>Handle to the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetType(System.IntPtr)">
            <summary>
            Get type of a field associated with specified control.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>type of a field associated with specified control.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetField(System.IntPtr)">
            <summary>
            Get field associated with specified control.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Field associated with specified control.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRect(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get bounding rectanghle of specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetExportValue(System.IntPtr)">
            <summary>
            Get a string describing the check status of the Checkbox or Radiobutton.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>string such as "", "Yes", "Off" etc. depended on control and its status.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_IsChecked(System.IntPtr)">
            <summary>
            Gets whether the Checkbox or Radiobutton is checked.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if checkbox or Radiobutton is checked, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_IsDefaultChecked(System.IntPtr)">
            <summary>
            Get a default state of the checkbox or Radiobutton.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if default state is checked, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetHighlightingMode(System.IntPtr)">
            <summary>
            Get the highlighting mode of specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>One of the <see cref="T:Patagames.Pdf.Enums.FormHighlightingMode"/> value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_HasMKEntry(System.IntPtr,System.String)">
            <summary>
            Gets whether the control has MK entry.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="csEntry">MK entry. "R", "BC", "BG" and so on. See detils in <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a></param>
            <returns>True if entry exists, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRotation(System.IntPtr)">
            <summary>
            Get the number of degrees by which the control is rotated counterclockwise relative to the page. The value must be a multiple of 90.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>number of degrees by which the control is rotated counterclockwise relative to the page. The value must be a multiple of 90.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetBorderColor(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's border in ARGB format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type.</param>
            <returns>Border color of control in ARGB format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBorderColor(System.IntPtr,System.Int32)">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="index">Index of a color component, depended on color type.</param>
            <returns>Numbers in the range 0.0 to 1.0 specifying the color of the control's border</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBorderColorEx(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type</param>
            <returns>An array of numbers in the range 0.0 to 1.0 specifying the color of the control's border</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetBackgroundColor(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's background in ARGB format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type.</param>
            <returns>Background color of control in ARGB format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBackgroundColor(System.IntPtr,System.Int32)">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="index">Index of a color component, depended on color type.</param>
            <returns>Numbers in the range 0.0 to 1.0 specifying the color of the control's background</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBackgroundColorEx(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type</param>
            <returns>An array of numbers in the range 0.0 to 1.0 specifying the color of the control's background</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetNormalCaption(System.IntPtr)">
            <summary>
            The controls normal caption, displayed when it is not interacting with the user.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls normal caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRolloverCaption(System.IntPtr)">
            <summary>
            The controls rollover caption, displayed when the user rolls the cursor into its active area without pressing the mouse button. 
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls rollover caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetDownCaption(System.IntPtr)">
            <summary>
            The controls alternate (down) caption, displayed when the mouse button is pressed within its active area. 
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls down caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetTextPosition(System.IntPtr)">
            <summary>
            Get a code indicating where to position the text of the widget annotation’s caption relative to its icon
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>A code indicating where to position the text ofthe widget annotation’s caption relative to its icon</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetControlAlignment(System.IntPtr)">
            <summary>
            Get a code specifying the form of justification to beused in displaying the text.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>A code specifying the form of justification to be used in displaying the text </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetWidget(System.IntPtr)">
            <summary>
            Get a dictionary of Widget Annotations
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to dictionary.</returns>
            <remarks>
            Interactive forms use widget annotations (PDF 1.2) to represent the appearance of fields 
            and to manage user interactions. As a convenience, when a field has only a single associated 
            widget annotation, the contents of the field dictionary and the annotation dictionary 
            can be merged into a single dictionary containing entries that pertain to both a field and 
            an annotation. (This presents no ambiguity, since the contents of the two kinds of dictionaries 
            do not conflict.)
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetCheckedAPState(System.IntPtr)">
            <summary>
            Get check state for CheckBox or RadioButton. Other field's types are not supported.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String what represent the check state of field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetNormalIcon(System.IntPtr)">
            <summary>
            Get normal icon, displayed when it is not interacting with the user.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a stream containing the icon.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRolloverIcon(System.IntPtr)">
            <summary>
            Get the widget annotation’s rollover icon, displayed when the user rolls the cursor into its active area without pressing the mouse button.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a stream containing the icon.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetDownIcon(System.IntPtr)">
            <summary>
            Get the widget annotation’s alternate(down) icon, displayed when the mouse button is pressed within its active area.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a stream containing the icon.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetDefaultControlFont(System.IntPtr)">
            <summary>
            Get the handle to default font
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a font object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetDefaultAppearance(System.IntPtr)">
            <summary>
            Get the handle to default appearance of widget annotation
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a default appearance object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetIconFit(System.IntPtr)">
            <summary>
            Get an icon fit object specifying how to display the widget annotation’s icon within its annotation rectangle.If present, the icon fit dictionary applies to all of the annotation’s icons (normal, rollover, and alternate).
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to a default appearance object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFullName(System.IntPtr)">
            <summary>
            Get field full name
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field full name</returns>
            <remarks>
            <para> 
            The fully qualified field name is not explicitly defined but is constructed from the partial field names of the field and all of its
            ancestors. For a field with no parent, the partial and fully qualified names are the same. For a field that is the child of another field, the fully qualified name is
            formed by appending the child field’s partial name to the parent’s fully qualified name, separated by a period (.): parent’s_full_name.child’s_partial_name
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetType(System.IntPtr)">
            <summary>
            Get the type of field
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field type</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ResetField(System.IntPtr,System.Boolean)">
            <summary>
            Resets field to it default values
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountControls(System.IntPtr)">
            <summary>
            Get total number of controls in a specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Total number of controls in the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetControl(System.IntPtr,System.Int32)">
            <summary>
            Gets control specified by a index for specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)"/></param>
            <returns>Handle to the Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetControlIndex(System.IntPtr,System.IntPtr)">
            <summary>
            Gets control's index in specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pControl">Handle to the control object</param>
            <returns>Zero based index of a control in specified field or -1 if no any fields was found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFieldType(System.IntPtr)">
            <summary>
            Get the type of field
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field type</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetAlternateName(System.IntPtr)">
            <summary>
            Get alternate field name.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>String what contains alternate field name.</returns>
            <remarks> An alternate field name to be used in place of the actual field name wherever the field must be identified in the user 
            interface (such as in error or status messages referring to the field). This text is also useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetMappingName(System.IntPtr)">
            <summary>
            Get mapping field name.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>String what contains mapping field name.</returns>
            <remarks>The mapping name to be used when exporting interactive form field data from the document. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFieldFlags(System.IntPtr)">
            <summary>
            Get field flags
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's flags specifying various characteristics of the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultStyle(System.IntPtr)">
            <summary>
            Get a default style string
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>A default style string</returns>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetRichTextString(System.IntPtr)">
            <summary>
            Get a rich text string
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>A rich text string</returns>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetValue(System.IntPtr)">
            <summary>
            Get field's value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultValue(System.IntPtr)">
            <summary>
            Get field's default value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's default value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SetValue(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Set field's value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="value">New value</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetMaxLen(System.IntPtr)">
            <summary>
            Get the maximum length of the field’s text, in characters. 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>The maximum length of the field’s text, in characters. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedItems(System.IntPtr)">
            <summary>
            Get selected items count
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Number of selected items</returns>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required. If the items identified by this entry differ from those
            in the V entry of the field dictionary (see below), the V entry takes precedence. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetSelectedIndex(System.IntPtr,System.Int32)">
            <summary>
            Gets selected index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of item ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedItems(System.IntPtr)"/></param>
            <returns>Selected index</returns>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required. If the items identified by this entry differ from those
            in the V entry of the field dictionary (see below), the V entry takes precedence. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ClearSelection(System.IntPtr,System.Boolean)">
            <summary>
            Clear field's selection
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsItemSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SetItemSelection(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Select or deselect Combobox or Listbox item
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <param name="bSelected">True for select, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsItemDefaultSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected by Default
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultSelectedItem(System.IntPtr)">
            <summary>
            Get the Combobox's or Listbox's index of item selected by default.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Zero based index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountOptions(System.IntPtr)">
            <summary>
            Get the total number of options to be presented to the user in choise field. 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Number of options to be presented to the user in choice field</returns>
            <remarks>
            Each element of the choice field is either a text string representing one of the available options or an array consisting of two text strings: the option’s export value and the text to be displayed as the name of the option
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetOptionLabel(System.IntPtr,System.Int32)">
            <summary>
            Get option's label 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of option's item</param>
            <returns>Option label</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetOptionValue(System.IntPtr,System.Int32)">
            <summary>
            Get option's value 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of option's item</param>
            <returns>Option value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_FindOption(System.IntPtr,System.String)">
            <summary>
            Find option by label
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="csOptLabel">Option label</param>
            <returns>Zero based index of option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_FindOptionValue(System.IntPtr,System.String)">
            <summary>
            Find option by value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="csOptValue">Option value</param>
            <returns>Zero based index of option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CheckControl(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Toggle Checkbox or Radiobutton
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iControlIndex">Zerobased index of field's control</param>
            <param name="bChecked">True for check, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetTopVisibleIndex(System.IntPtr)">
            <summary>
            Get the first visible index for scrollable list boxes
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>For scrollable list boxes, the top index (the index that the first option visible in the list)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedOptions(System.IntPtr)">
            <summary>
            Count of selected options
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Count of selected options</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetSelectedOptionIndex(System.IntPtr,System.Int32)">
            <summary>
            Get index of selected option specified by index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of item in selected list ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedOptions(System.IntPtr)"/></param>
            <returns>Zero based index of item in option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsOptionSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the option's item specified by index is selected
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iOptIndex">Zero based index of item in option</param>
            <returns>True if selected, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SelectOption(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Select or deselect option's item specified by index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iOptIndex">Zero based index of item in option</param>
            <param name="bSelected">True for select, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ClearSelectedOptions(System.IntPtr,System.Boolean)">
            <summary>
            Deselect specified option
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFlags(System.IntPtr)">
            <summary>
            Get field flags
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's flags specifying various characteristics of the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFieldDict(System.IntPtr)">
            <summary>
            Get field's dictionary
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Handle to field's dictionary.</returns>
            <remarks>
            Each field in a document’s interactive form is defined by a field dictionary, which 
            must be an indirect object. The field dictionaries may be organized hierarchically 
            into one or more tree structures. Many field attributes are inheritable, meaning
            that if they are not explicitly specified for a given field, their values are taken from
            those of its parent in the field hierarchy. 
            The designation(Required; inheritable) means that an
            attribute must be defined for every field, whether explicitly in its own field dictionary or 
            by inheritance from an ancestor in the hierarchy.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SetFieldDict(System.IntPtr,System.IntPtr)">
            <summary>
            Get field's dictionary
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="dictionary">Handle to dictionary object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetRoot(System.IntPtr)">
            <summary>
            Get the catalog dictionary for the PDF document contained in the file.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the PDF dictionary</returns>
            <remarks>
            The root of a document’s object hierarchy is the catalog dictionary, located by 
            means of the Root entry in the trailer of the PDF file. 
            The catalog contains references to other objects defining the
            document’s contents, outline, article threads(PDF 1.1), named destinations, and
            other attributes.In addition, it contains information about how the document
            should be displayed on the screen, such as whether its outline and thumbnail
            page images should be displayed automatically and whether some location other
            than the first page should be shown when the document is opened.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetInfo(System.IntPtr)">
            <summary>
            Get the document’s information dictionary -  “Document Information Dictionary”.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the PDF dictionary</returns>
            <remarks>
            <para>
            The optional Info entry in the trailer of a PDF file can hold a document information dictionary 
            containing metadata for the document; Any entry whose value is not known should 
            be omitted from the dictionary rather than included with an empty string as its 
            value.
            </para>
            <para>
            Some plug-in extensions may choose to permit searches on the contents of the
            document information dictionary. To facilitate browsing and editing, all keys in 
            the dictionary are fully spelled out, not abbreviated. New keys should be chosen
            with care so that they make sense to users.
            </para>
            <note type="note">
            Although consumer applications can store custom metadata in the document
            information dictionary, it is inappropriate to store private content or structural information there.
            Such information should be stored in the document catalog instead.
            </note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetTrailer(System.IntPtr)">
            <summary>
            Get the trailer of the PDF file.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the PDF dictionary</returns>
            <remarks>
            The trailer of a PDF file enables an application reading the file to quickly find the cross-reference 
            table and certain special objects. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetEncryptDictionary(System.IntPtr)">
            <summary>
            Get document’s encryption dictionary.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the PDF dictionary</returns>
            <remarks>
            A PDF document can be encrypted (PDF 1.1) to protect its contents from unauthorized access. 
            Encryption applies to all strings and streams in the document’s PDF file, but not to other object types such as 
            integers and boolean values, which are used primarily to convey information about the document’s structure rather 
            than its content. Leaving these values unencrypted allows random access to the objects within a document, whereas 
            encrypting the strings and streams protects the document’s substantive contents.
            
            <note type="note">When a PDF stream object refers to an external file, the stream’s contents are not encrypted, 
            since they are not part of the PDF file itself. However, if the contents of the stream are embedded within the PDF file, 
            they are encrypted like any other stream in the file. Beginning with PDF 1.5, embedded files may be encrypted in an 
            otherwise unencrypted document.</note>
            
            <para>Encryption-related information is stored in a document’s encryption dictionary, which is the value of the Encrypt 
            entry in the document’s trailer dictionary. The absence of this entry from the trailer dictionary means that the document 
            is not encrypted.</para>
            
            <para>The encryption dictionary’s Filter entry identifies the file’s security handler, a software module that implements 
            various aspects of the encryption process and controls access to the contents of the encrypted document.
            PDF specifies a standard password-based security handler that all consumer applications are expected to support, 
            but applications may optionally provide security handlers of their own.</para>
            
            <para>The SubFilter entry specifies the syntax of the encryption dictionary contents. It allows interoperability between 
            handlers; that is, a document may be decrypted by a handler other than the preferred one (the Filter entry) if they both 
            support the format specified by SubFilter.</para>
            
            <para>The V entry, in specifying which algorithm to use, determines the length of the encryption key, on which the 
            encryption(and decryption) of data in a PDF file is based.For V values 2 and 3, the Length entry specifies the exact 
            length of the encryption key. In PDF 1.5, a value of 4 for V permits the security handler to use its own encryption 
            and decryption algorithms and to specify crypt filters to use on specific streams.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageDictionary(System.IntPtr,System.Int32)">
            <summary>
            Get specified page tree node that is the root of the document’s page tree.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="index"></param>
            <returns>Handle to the PDF dictionary</returns>
            <remarks>
            The pages of a document are accessed through a structure known as the page tree,
            which defines the ordering of pages in the document.The tree structure allows
            PDF consumer applications, using only limited memory, to quickly open a
            document containing thousands of pages.The tree contains nodes of two types—
            intermediate nodes, called page tree nodes, and leaf nodes, called page objects—
            whose form is described in the sections below.Applications should be prepared
            to handle any form of tree structure built of such nodes.The simplest structure
            would consist of a single page tree node that references all of the document’s page
            objects directly. However, to optimize application performance, the Acrobat
            Distiller program constructs trees of a particular form, known as balanced trees
            Further information on this form of tree can be found in Data Structures and
            Algorithms, by Aho, Hopcroft, and Ullman (see the Bibliography).
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetType(System.IntPtr)">
            <summary>
            Get type of an PDF object
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>One of the ObjectTypes enumerator.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetObjNum(System.IntPtr)">
            <summary>
            Get a positive integer object number. Indirect objects are often numbered sequentially within a PDF file, but this is not required; object numbers may be assigned in any arbitrary order.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>A positive integer object number.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetGenNum(System.IntPtr)">
            <summary>
            Get a non-negative integer generation number. In a newly created file, all indirect objects have generation numbers of 0. Nonzero generation numbers may be introduced when the file is later updated;
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>A non-negative integer generation number; -1 if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_Clone(System.IntPtr,System.Boolean)">
            <summary>
            Create a new PDF object based on this object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <param name="bDirect">A flag indicating whether indirect objects should be cloned as direct objects.</param>
            <returns>Handle to a newly created PDF object.</returns>
            <remarks>
            <para>Call <see cref="M:Patagames.Pdf.Pdfium.FPDFOBJ_Release(System.IntPtr)"/> method when you no longer need to use a PDF object.</para>
            <para>bDirect should be <strong>False</strong> to keep indirect objects as is; 
            <strong>True</strong> to convert indirect objects to direct objects.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetDirect(System.IntPtr)">
            <summary>
            Get inderect object
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>Handle to inderect object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_Release(System.IntPtr)">
            <summary>
            Delete PDF object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetString(System.IntPtr)">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>String that represents the current object or null if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetUnicodeText(System.IntPtr)">
            <summary>
            Returns a unicode string that represents the current object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>Unicode string that represents the current object or null if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetNumber(System.IntPtr)">
            <summary>
            Returns a floating-point representation of the specified object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>A floating-point representation of the specified object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetInteger(System.IntPtr)">
            <summary>
            Returns an integer representation of the specified object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>An integer representation of the specified object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetDict(System.IntPtr)">
            <summary>
            Returns a Dictionary representation of the specified object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>Handle to the dictionary, IntPtr.Zero if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetArray(System.IntPtr)">
            <summary>
            Returns an Array representation of the specified object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>Handle to the PDF Array object, IntPtr.Zero if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_SetString(System.IntPtr,System.String)">
            <summary>
            Insert string into PDF object
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <param name="str">The text to be inserted into a object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsModified(System.IntPtr)">
            <summary>
            Return TRUE if object was modified
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>Always FALSE in Pdfium</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_SetIsModified(System.IntPtr,System.Boolean)">
            <summary>
            Set IsModifed flag for specified object
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <param name="value">Flags value.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsArray(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is an array.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is an array; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsBoolean(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a Boolean object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a boolean object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsDictionary(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a dictionary.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a dictionary object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsName(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a Name object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a Name object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsNumber(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a Number object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a Number object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsReference(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a indirect object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a indirect object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsStream(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a Stream object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a Stream object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_IsString(System.IntPtr)">
            <summary>
            Gets a value that indicates whether the PDF object is a String object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>True if the specified object is a String object; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_GetParentObj(System.IntPtr)">
            <summary>
            Returns a handle to the container for specified object.
            </summary>
            <param name="obj_handle">Handle to the PDF object</param>
            <returns>A handle to the dictionary or to the array which contains specified object, IntPtr.Zero if there is no any container.</returns>
        </member>
        <member name="T:Patagames.Pdf.Pdfium.InternalObjectDestroyCallback">
            <summary>
            Delegate for the application-defined callback function for <see cref="M:Patagames.Pdf.Pdfium.FPDFOBJ_SetDestroyCallback(System.IntPtr,Patagames.Pdf.Pdfium.InternalObjectDestroyCallback)"/>
            </summary>
            <param name="obj_handle">The object that will be destroyed.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFOBJ_SetDestroyCallback(System.IntPtr,Patagames.Pdf.Pdfium.InternalObjectDestroyCallback)">
            <summary>
            Set a callback that is called immediately before the object is destroyed.
            </summary>
            <param name="obj_handle">A handle to the object for which the callback should be set.</param>
            <param name="callback">A delegate that is called before the object is destroyed. Null to remove callback.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBOOLEAN_Create(System.Boolean)">
            <summary>
            Create new Boolean object
            </summary>
            <param name="value">Initial value for this object</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFNUMBER_CreateInt(System.Int32)">
            <summary>
            Create new Number object as an integer
            </summary>
            <param name="value">Initial value for this object</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFNUMBER_CreateFloat(System.Single)">
            <summary>
            Create new Number object as a float
            </summary>
            <param name="value">Initial value for this object</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFNUMBER_IsInteger(System.IntPtr)">
            <summary>
            Returns a Boolean value that indicates whether a Number is an integer.
            </summary>
            <param name="handle">Handle to a number object</param>
            <returns>true if the Number object is an integer, otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTRING_CreateEmpty">
            <summary>
            Create empty String object
            </summary>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTRING_CreateChar(System.String,System.Boolean)">
            <summary>
            Create new String object and initialise it with ANSI string
            </summary>
            <param name="value">Initial value for this object</param>
            <param name="bHex">Indicates whether a value is a HEX</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTRING_CreateUnicode(System.String)">
            <summary>
            Create new String object and initialise it with unicode string
            </summary>
            <param name="value">Initial value for this object</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTRING_IsHex(System.IntPtr)">
            <summary>
            Returns a Boolean value that indicates whether a String is a hex.
            </summary>
            <param name="handle">Handle to a string object</param>
            <returns>true if the String object is a hex, otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFNAME_Create(System.String)">
            <summary>
            Create new Name object
            </summary>
            <param name="value">Initial value for this object</param>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFNULL_Create">
            <summary>
            Create new Null object
            </summary>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_Create">
            <summary>
            Create new Stream object
            </summary>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_GetRawSize(System.IntPtr)">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <returns>A integer value representing the length of the stream in bytes.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_GetRawData(System.IntPtr)">
            <summary>
            Get underlying buffer of the stream.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <returns>The stream content in an unmanaged memory or IntPtr.Zero if any errors occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_GetData(System.IntPtr)">
            <summary>
            Get a managed copy of underlying buffer of the stream.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <returns>A byte array containing the content of the stream.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_GetDecodedData(System.IntPtr,System.Int32@)">
            <summary>
            Decodes stream contents.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <param name="size">The lenth of decoded contetnt</param>
            <returns>The decoded Stream contents in unmanaged memory or IntPtr.Zero if any errors occurs.</returns>
            <remarks>
            Returned pointer should be released by calling <see cref="M:Patagames.Pdf.Pdfium.FPDFSTREAM_ReleaseDecodedData(System.IntPtr)"/>.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_ReleaseDecodedData(System.IntPtr)">
            <summary>
            Release decoded content
            </summary>
            <param name="data">Pointer to decoded content returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFSTREAM_GetDecodedData(System.IntPtr,System.Int32@)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_SetData(System.IntPtr,System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Set specified raw data into current stream
            </summary>
            <param name="handle">Handle to an stream object</param>
            <param name="data">The stream raw data in unmanaged memory</param>
            <param name="size">The length in bytes of the data</param>
            <param name="bCompressed">Indicates whether a passed buffer is compressed or not.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_SetData(System.IntPtr,System.Byte[],System.Boolean)">
            <summary>
            Set specified raw data into current stream
            </summary>
            <param name="handle">Handle to an stream object</param>
            <param name="data">The stream raw data in managed memory</param>
            <param name="bCompressed">Indicates whether a passed buffer is compressed or not.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_InitStream(System.IntPtr,System.Byte[],System.IntPtr)">
            <summary>
            Initialize the stream with a sequence of bytes.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <param name="data">An array of bytes. This method copies all bytes from data to the current stream.</param>
            <param name="dictionary">Handle to the dictionary object.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_InitStreamFromFile(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Initialize the stream with a sequence of bytes readed from specified file.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <param name="file">Hanlde to the file opened by <see cref="M:Patagames.Pdf.Pdfium.FPDF_OpenFile(System.String)"/> functiuon.</param>
            <param name="dictionary">Handle to the dictionary object.</param>
            <remarks>The file should be stay opened while the stream object is used.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_ReadRawData(System.IntPtr,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Reads a specified number of bytes from the current stream from specified position.
            </summary>
            <param name="handle">Handle to a stream object</param>
            <param name="startPos">The ofset from the begining of stream</param>
            <param name="count">The number of bytes to read from stream</param>
            <param name="buf">An array of readed bytes.</param>
            <returns>True for successfull, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFSTREAM_IsMemoryBased(System.IntPtr)">
            <summary>
            Returns a Boolean value that indicates whether a Stream was initialized from memory.
            </summary>
            <param name="handle">Handle to a number object</param>
            <returns>true if the Stream object was initialized from the memory, otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetIndirectObject(System.IntPtr,System.Int32)">
            <summary>
            Gets an inderect object from objects list.
            </summary>
            <param name="objects_list">List of indirect objects</param>
            <param name="objnum">Object's number</param>
            <returns>Hanle to the inderect objects or IntPtr.Zero if any error is occurred.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_AddIndirectObject(System.IntPtr,System.IntPtr)">
            <summary>
            Adds an object to the end of the list
            </summary>
            <param name="objects_list">The list of objects to which you want to add an object.</param>
            <param name="indirect_object">Handle to the object.</param>
            <returns>Return the number of oject which was added or zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_ReleaseIndirectObject(System.IntPtr,System.Int32)">
            <summary>
            Destroy specified object and remove its from the list.
            </summary>
            <param name="objects_list">List of indirect objects</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_InsertIndirectObject(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Replace the object with the specified number by the specified object
            </summary>
            <param name="objects_list">The list of objects to which you want to insert an object.</param>
            <param name="objnum">The existing number of object in list.</param>
            <param name="indirect_object">Handle to the object which should be inserted.</param>
            <returns>
            True if successfull; false if any error has occured;
            <note type="note">This methd release the old object before replece it by new one.</note>
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetLastObjNum(System.IntPtr)">
            <summary>
            Gets the number of the  last object in the list.
            </summary>
            <param name="objects_list">List of indirect objects.</param>
            <returns>The number of the  last object in the list.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_FromPdfDocument(System.IntPtr)">
            <summary>
            Gets the list of indirect objects from specified PDF document
            </summary>
            <param name="pdf_doc">Handle to a PDF document</param>
            <returns>Handle to the list of Indirect objects or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_FromFdfDocument(System.IntPtr)">
            <summary>
            Gets the list of indirect objects from specified FDF document
            </summary>
            <param name="fdf_doc">Handle to a FDF document</param>
            <returns>Handle to the list of Indirect objects or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetCount(System.IntPtr)">
            <summary>
            Gets the number of elements contained in the list
            </summary>
            <param name="objects_list">List of indirect objects.</param>
            <returns>The number of elements or Zero if any error has occured</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetItemIterator(System.IntPtr)">
             <summary>
             Returns an iterator that iterates through a list.
             </summary>
             <param name="objects_list">List of indirect objects.</param>
            <returns>Handle to the iterator, or IntPtr.Zero if any error has occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_ReleaseItemIterator(System.IntPtr)">
            <summary>
            Delete item iterator
            </summary>
            <param name="iterator">Handle to iterator retrived by <see cref="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetItemIterator(System.IntPtr)"/>\</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetItem(System.IntPtr,System.Int32@,System.IntPtr@)">
            <summary>
            Gets the item from iterator
            </summary>
            <param name="iterator">Handle to iterator retrived by <see cref="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetItemIterator(System.IntPtr)"/>\</param>
            <param name="objNum">Object number</param>
            <param name="obj">Handle to an object</param>
            <returns>True if the item was retrieved or false if no more any items or eny error has occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_Rebuild(System.IntPtr)">
            <summary>
            Rebuilds cross-reference table
            </summary>
            <param name="document">Handle to pdf document</param>
            <returns>True if successfull; false if any error has occured;</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_Remove(System.IntPtr,System.Int32)">
            <summary>
            Removes object with specified number from cross-reference table
            </summary>
            <param name="document">Handle to pdf document</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_Shrink(System.IntPtr,System.Int32)">
            <summary>
            Shrinks cross-reference table
            </summary>
            <param name="document">Handle to pdf document</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_GetCount(System.IntPtr)">
            <summary>
            Gets the number of elements contained in the cross-reference table
            </summary>
            <param name="document">Handle to pdf document</param>
            <returns>The number of elements or Zero if any error has occured</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_GetItemIterator(System.IntPtr)">
             <summary>
             Returns an iterator that iterates through a cross-reference table.
             </summary>
             <param name="document">Handle to pdf document</param>
            <returns>Handle to the iterator, or IntPtr.Zero if any error has occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_ReleaseItemIterator(System.IntPtr)">
            <summary>
            Delete item iterator
            </summary>
            <param name="iterator">Handle to iterator retrived by <see cref="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_GetItemIterator(System.IntPtr)"/>\</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_GetItem(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the item from iterator
            </summary>
            <param name="iterator">Handle to iterator retrived by <see cref="M:Patagames.Pdf.Pdfium.FPDFCROSSREF_GetItemIterator(System.IntPtr)"/>\</param>
            <param name="objNum">Object number</param>
            <param name="position">Position in PDF body in bytes</param>
            <param name="type">Type</param>
            <param name="gennum">Generation number</param>
            <returns>True if the item was retrieved or false if no more items or eny error has occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetRefsToObjects(System.IntPtr,System.Int32@)">
            <summary>
            Get an array containing pdf objects which are referenced by other objects from the document catalog.
            </summary>
            <param name="doc">Handle to a PDF document.</param>
            <param name="count">The number of elements actually contained in the array.</param>
            <returns>Handle to an array, or IntPtr.Zero if nothing was found. To get extended error information, call <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/>.</returns>
            <remarks>
            <para>This method recursively scans the document catalog, in order to build the array.</para>
            <para>This method cannot accept newly created documents. 
            If you pass such document FPDFHOLDER_GetRefsToObjects would fail and the <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/>
            function would return REQUIRED_DATA_IS_ABSENT (536871427).
            To get the handle to the document, that can be passed to the FromPdfDocument method, 
            you must save the document to a temporary file or an array of bytes, and then open it with the <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>".
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFHOLDER_ReleaseRefsToObjects(System.IntPtr)">
            <summary>
            Releases all resources allocated by the <see cref="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetRefsToObjects(System.IntPtr,System.Int32@)"/>
            </summary>
            <param name="arrayHandle">Handle to an array returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFHOLDER_GetRefsToObjects(System.IntPtr,System.Int32@)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFREF_Create(System.IntPtr,System.Int32)">
            <summary>
            Creates a Reference object which is linked with an object inside the list of objects.
            </summary>
            <param name="objects_list">List of indirect objects</param>
            <param name="objnum">Object's number in the specified list</param>
            <returns>Handle to the newly created Reference object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFREF_GetObjList(System.IntPtr)">
            <summary>
            Gets a list of objects in which is linked with the specified reference object.
            </summary>
            <param name="handle">Handle to the Reference object</param>
            <returns>Handle ro the list of objects or IntPtr.Zero if any error is occured</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFREF_GetRefObjNum(System.IntPtr)">
            <summary>
            Gets an object number which is linked with the specified reference object.
            </summary>
            <param name="handle">Handle to the Reference object.</param>
            <returns>The object number or -1 if eny error is occured./</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFREF_SetRef(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Changes a link of Reference object to the specified object in the specified list.
            </summary>
            <param name="handle">Handle to the Reference object.</param>
            <param name="objects_list">List of indirect objects</param>
            <param name="objnum">Object's number in the specified list</param>
        </member>
        <member name="T:Patagames.Pdf.Pdfium.DictEnumCallback">
            <summary>
            Delegate for the application-defined callback function for <see cref="M:Patagames.Pdf.Pdfium.FPDFDICT_Enum(System.IntPtr,Patagames.Pdf.Pdfium.DictEnumCallback)"/>.
            </summary>
            <param name="handle">Handle to the dictionary itself.</param>
            <param name="key">The key of the value/</param>
            <param name="value">The value contained in the dictionary under the key.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_Enum(System.IntPtr,Patagames.Pdf.Pdfium.DictEnumCallback)">
            <summary>
            Enumerates all top-level items in dictionary by passing the Key and Value of each item, in turn, to an application-defined callback function. 
            FPDFDICT_Enum continues until the last item is enumerated.
            </summary>
            <param name="handle">Handle to the Dictionary object</param>
            <param name="callback">The application-defined callback function</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_Create">
            <summary>
            Create new Dictionary object
            </summary>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetCount(System.IntPtr)">
            <summary>
            Gets the number of keys contained in the Dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object</param>
            <returns>A zero-based number of keys or -1 if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetObjectBy(System.IntPtr,System.String)">
            <summary>
            Gets the PDF object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A handle to PDF object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetDirectObjectBy(System.IntPtr,System.String)">
            <summary>
            Gets the PDF object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A handle to PDF object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetStringBy(System.IntPtr,System.String)">
            <summary>
            Gets the string associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A string associated with the specified key or null if any error is occured.</returns>
            <remarks>The string is decoding using the <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> property.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetStringByEx(System.IntPtr,System.String,System.String)">
            <summary>
            Gets the string associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="defaultValue">Default value.</param>
            <returns>A string associated with the specified key or null if any error is occured.</returns>
            <remarks>The string is decoding using the <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> property.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetUnicodeTextBy(System.IntPtr,System.String)">
            <summary>
            Gets the string associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A string associated with the specified key or null if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetIntegerBy(System.IntPtr,System.String)">
            <summary>
            Gets the integer value from Number object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>An integer value associated with the specified key. Please see remarks for important details.</returns>
            <remarks><note type="note">Please note this method returns 0 if key not found or handle is IntPtr.Zero</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetIntegerByEx(System.IntPtr,System.String,System.Int32)">
            <summary>
            Gets the integer value from Number object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="defaultValue">Default value.</param>
            <returns>An integer value associated with the specified key. Please see remarks for important details.</returns>
            <remarks><note type="note">Please note this method returns defaultValue if key not found or 0 if handle is IntPtr.Zero</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetBooleanBy(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Gets the boolean value associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="defaultValue">Default value.</param>
            <returns>A boolean value associated with the specified key. Please see remarks for important details.</returns>
            <remarks><note type="note">Please note this method returns defaultValue if key not found or false if handle is IntPtr.Zero</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetNumberBy(System.IntPtr,System.String)">
            <summary>
            Gets the float value rom Number object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A float value associated with the specified key.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetDictBy(System.IntPtr,System.String)">
            <summary>
            Gets the Dictionary object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A handle to Dictionary object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetStreamBy(System.IntPtr,System.String)">
            <summary>
            Gets the Stream object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A handle to Stream object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetArrayBy(System.IntPtr,System.String)">
            <summary>
            Gets the Array object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A handle to Array object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetRectBy(System.IntPtr,System.String)">
            <summary>
            Gets a rectangle from an Array object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A Rectangle associated with the specified key.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_GetMatrixBy(System.IntPtr,System.String)">
            <summary>
            Gets a Matrix from an Array object associated with the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <returns>A Matrix associated with the specified key.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_KeyExist(System.IntPtr,System.String)">
            <summary>
            Determines whether the Dictionary contains the specified key.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key to locate in the Dictionary.</param>
            <returns>true if the Dictionary contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_IsSignatureDict(System.IntPtr)">
            <summary>
            Determines whether the Dictionary is a signature field.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <returns>true if the Dictionary is a signature field; otherwise, false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAt(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            Sets the PDF object at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Handle to the PDF object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtName(System.IntPtr,System.String,System.String)">
            <summary>
            Creates a Name object and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created name object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtString(System.IntPtr,System.String,System.String)">
            <summary>
            Creates a String object and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created String object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtInteger(System.IntPtr,System.String,System.Int32)">
            <summary>
            Creates a Number object, initialize it with integer value and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created Number object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtNumber(System.IntPtr,System.String,System.Single)">
            <summary>
            Creates a Number object, initialize it with float value and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created Number object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtReference(System.IntPtr,System.String,System.IntPtr,System.Int32)">
            <summary>
            Creates a Reference object and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="objectList">List of indirect objects</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtReferenceEx(System.IntPtr,System.String,System.IntPtr,System.IntPtr)">
            <summary>
            Creates a Reference object and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="objectList">List of indirect objects</param>
            <param name="obj">Handle to PDF object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_AddReference(System.IntPtr,System.String,System.IntPtr,System.Int32)">
            <summary>
            See <see cref="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtReferenceEx(System.IntPtr,System.String,System.IntPtr,System.IntPtr)"/>
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="objectList">List of indirect objects</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtRect(System.IntPtr,System.String,Patagames.Pdf.FS_RECTF)">
            <summary>
            Creates an Array object, initialize it with rectangle values (left, top, right, bottom) and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created Array object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtMatrix(System.IntPtr,System.String,Patagames.Pdf.FS_MATRIX)">
            <summary>
            Creates an Array object, initialize it with matrix values (a, b, c, d, e, f) and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created Array object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_SetAtBoolean(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Creates an Boolean object, initialize it with the value and sets it at the specified key of dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
            <param name="value">Initial value for newly created Boolean object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_RemoveAt(System.IntPtr,System.String)">
            <summary>
            Release th PDF object and removse its from dictionary.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="key">The key contained in the Dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDICT_ReplaceKey(System.IntPtr,System.String,System.String)">
            <summary>
            Replace the PDF object at oldKey with object from newKey.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="oldKey">The key contained in the Dictionary.</param>
            <param name="newKey">The key contained in the Dictionary.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_Create">
            <summary>
            Create new Array object
            </summary>
            <returns>Handle to a newly created object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)">
            <summary>
            Gets the number of keys contained in the Array.
            </summary>
            <param name="handle">Handle to Array object</param>
            <returns>A zero-based number of items or -1 if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetObjectAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the PDF object at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A handle to PDF object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetDirectObjectAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the PDF object at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A handle to PDF object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetStringAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the string at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A string value currently at this index or null if any error is occured.</returns>
            <remarks>The string is decoding using the <see cref="P:Patagames.Pdf.Pdfium.DefaultAnsiEncoding"/> property.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetIntegerAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the integer value from the array at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>An integer value currently at this index or null if any error is occured.</returns>
            <remarks><note type="note">Please note this method returns 0 if key not found or handle is IntPtr.Zero</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetNumberAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the float value at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A float value currently at this index or null if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetDictAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the Dictionary object at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A handle to Dictionary object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetStreamAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the Stream object at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A handle to Stream object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetArrayAt(System.IntPtr,System.Int32)">
            <summary>
            Gets the Array object at a given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <returns>A handle to Array object or IntPtr.Zero if any error is occured.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetMatrix(System.IntPtr)">
            <summary>
            Gets a Matrix from an Array object.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <returns>A Matrix associated with this Array.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetRect(System.IntPtr)">
            <summary>
            Gets a rectangle from an Array object.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <returns>A Rectangle associated with this Array.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_SetAt(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sets the PDF object at the given index.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <param name="value">Handle to the PDF object</param>
            <param name="objectList">Handle to objects list. IntPtr.Zero for default</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_InsertAt(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Insert the PDF object into given position.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <param name="value">Handle to the PDF object</param>
            <param name="objectList">Handle to objects list. IntPtr.Zero for default</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_RemoveAt(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Release th PDF object and removes its from Array.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="index">An integer index that is greater than or equal to 0 and less than the value returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFARRAY_GetCount(System.IntPtr)"/>.</param>
            <param name="count">The number of deleted items.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_Add(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Adds the PDF object at the end of Arrary.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="value">Handle to the PDF object</param>
            <param name="objectList">Handle to objects list. IntPtr.Zero for default</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddNumber(System.IntPtr,System.Single)">
            <summary>
            Creates a Number object, initialize it with float value and add it at the end of Array.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="value">Initial value for newly created Number object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddInteger(System.IntPtr,System.Int32)">
            <summary>
            Creates a Number object, initialize it with integer value and adds it at the end of array.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="value">Initial value for newly created Number object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddString(System.IntPtr,System.String)">
            <summary>
            Creates a String object and adds it at the end of Array.
            </summary>
            <param name="handle">Handle to Dictionary object.</param>
            <param name="value">Initial value for newly created String object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddName(System.IntPtr,System.String)">
            <summary>
            Creates a Name object and adds it at the end of array.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="value">Initial value for newly created name object</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddReference(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Creates a Reference object and adds it at the end of Array.
            </summary>
            <param name="handle">Handle to Arrya object.</param>
            <param name="objectList">List of indirect objects</param>
            <param name="objnum">Object's number</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFARRAY_AddReferenceEx(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Creates a Reference object and sets it at the end of Array.
            </summary>
            <param name="handle">Handle to Array object.</param>
            <param name="objectList">List of indirect objects</param>
            <param name="obj">Handle to PDF object</param>
        </member>
        <member name="M:Patagames.Pdf.PointerManagerItem`1.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="M:Patagames.Pdf.PointerManagerItem`1.Finalize">
            <summary>
            Finalize object
            </summary>
        </member>
        <member name="M:Patagames.Pdf.PointerManagerItem`2.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
            <param name="disposing">true for SuppressFinalize</param>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.resourceLoader">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0001">
            <summary>
            Localized resource similar to "PointerManagerItem.Key is empty"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0002">
            <summary>
            Localized resource similar to "Unable to load library {0}"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0003">
            <summary>
            Localized resource similar to "File length cannot be less than zero"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0004">
            <summary>
            Localized resource similar to "Destination's name cannot be null or empty string"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0005">
            <summary>
            Localized resource similar to "Bookmark's title cannot be null or empty string"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0006">
            <summary>
            Localized resource similar to "Parametr index must be between {0} and {1}"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0007">
            <summary>
            Localized resource similar to "PdfForm object is not Initialized. Please load document whith this object as parameter"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0008">
            <summary>
            Localized resource similar to "This instance of the PdfForms class already assigned with another document"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0009">
            <summary>
            Localized resource similar to "Document is not yet available"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0010">
            <summary>
            Localized resource similar to "Forms is not yet available"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0011">
            <summary>
            Localized resource similar to "This page is not yet available"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0012">
            <summary>
            Localized resource similar to "Unable to load DLL 'pdfium(.dll/.dylib)': The specified module could not be found.  Please make sure that you copy it to the application folder.  Alternatively, you can specify the full path to the pdfium(.dll/.dylib) file using specificPath parameter in the initialization method"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0013">
            <summary>
            Localized resource similar to "To set the document property instead of using LoadDocument method set the AllowSetDocument property to True. Please read the documentation before you do it."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0014">
            <summary>
            Localized resource similar to "Document cannot be null"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0015">
            <summary>
            Localized resource similar to "Document not properly loaded"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0016">
            <summary>
            Localized resource similar to "Font name cannot be null or empty string"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0017">
            <summary>
            Localized resource similar to "The operation cannot be completed because the SDK is not initialized.  You have to call PdfCommon.Initialize() method before you can call any PDF processing functions."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0018">
            <summary>
            Localized resource similar to "All instances of '{0}' class  should be disposed to prevent the memory leaks."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0019">
            <summary>
            Localized resource similar to "Unexpected error code."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0020">
            <summary>
            Localized resource similar to "File not in PDF format or corrupted."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0021">
            <summary>
            Localized resource similar to "File not found or could not be opened."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0022">
            <summary>
            Localized resource similar to "Requested font not found."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0023">
            <summary>
            Localized resource similar to "Image object is empty."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0024">
            <summary>
            Localized resource similar to "Password required or incorrect password."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0025">
            <summary>
            Localized resource similar to "The requested operation cannot be completed due to a license restrictions."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0026">
            <summary>
            Localized resource similar to "Page not found or content error."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0027">
            <summary>
            Localized resource similar to "Unknown error."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0028">
            <summary>
            Localized resource similar to "Can't convert PdfBitmap into System.Drawing.Bitmap."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0029">
            <summary>
            Localized resource similar to "Unsupported security scheme."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0030">
            <summary>
            Localized resource similar to "An element with the same key already exists in the Dictionary object."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0031">
            <summary>
            Localized resource similar to "The given object is a part of list of indirect objects. Please use the Add(PdfTypeBase, PdfIndirectList) method to add this item."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0032">
            <summary>
            Localized resource similar to "The given object is a part of list of indirect objects. Please use the Insert(int, PdfTypeBase, PdfIndirectList) method to insert this item."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0033">
            <summary>
            Localized resource similar to "The given object is a part of list of indirect objects. Please use the SetAt(int, PdfTypeBase, PdfIndirectList) method instead."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0035">
            <summary>
            Localized resource similar to "Can't find parent dictionary for given bookmark"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0036">
            <summary>
            Looks up a localized string similar to The annotations associated with given page  are invalid.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0037">
            <summary>
            Looks up a localized string similar to Can't create indirect object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0038">
            <summary>
            Looks up a localized string similar to Given annotation is invalid.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0039">
            <summary>
            Looks up a localized string similar to Unknown color format.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0040">
            <summary>
            Looks up a localized string similar to The given popup annotation is invalid.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0041">
            <summary>
            Looks up a localized string similar to Unknown type  of annotations relationship: {0}.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0042">
            <summary>
            Looks up a localized string similar to Unexpected type of the '{0}' entry.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0043">
            <summary>
            Looks up a localized string similar to Non standard icon name.Please use ExtendedIconName property instead
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0044">
            <summary>
            Looks up a localized string similar to The specified entry not found.Entry name:{0}
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0045">
            <summary>
            Looks up a localized string similar to The '{0}' entry has unexpected value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0046">
            <summary>
            Looks up a localized string similar to The CalloutLine array must be an array of 2 or 3 points.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0047">
            <summary>
            Looks up a localized string similar to Valid value(s) for the {0} property {1}
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0048">
            <summary>
            Looks up a localized string similar to Given dictionary is not valid PdfTypeDictionary object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0049">
            <summary>
            Looks up a localized string similar to The Maximum number of items has been exceeded
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0050">
            <summary>
            Looks up a localized string similar to Unexpected type of object. Expected: {0}; Actual: {1}
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0051">
            <summary>
            Localized resource similar to Collection is read-only.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0052">
            <summary>
            Localized resource similar to Fatal runtime error.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0053">
            <summary>
            Localized resource similar to Fill Mode may be None, Alternate or Winding..
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0054">
            <summary>
            Localized resource similar to The reference list has a non-zero length, however, a null pointer was returned..
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0055">
            <summary>
            Localized resource similar to The 'Trapped' tag is not allowed here. Please use Document.Info instead.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0056">
            <summary>
              Your license key is out of date and cannot be used with this version of Pdfium.Net SDK. Please downgrade to the previous version allowed for using with this key. Please note that you can use any versions which were released within 12 months from the date of purchase. To use latest version of SDK, you must pass the renewed key obtained during renewal of maintenance subscription.If you have an active maintenance subscription, but you have not received the renewed key, please contact to support@patagames.com
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0057">
            <summary>
             Localized resource similar to "This method cannot accept newly created documents. If you pass such a document as an argument, the RequiredDataIsAbsentException will be thrown. To get the instance of the PdfDocument class that can be passed to the FromPdfDocument method, you must save the document to a temporary file or an array of bytes, and then open it with the PdfDocument.Load."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.errLicense1">
            <summary>
            Localized resource similar to "The requested operation cannot be completed due to a license restrictions. You need to have at least a Developer Small Business License to be able  to complete this operation."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.errLicense2">
            <summary>
            Localized resource similar to "The requested operation cannot be completed due to a license restrictions. You need to have at least a LITE License to be able  to complete this operation."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.errLicense3">
            <summary>
            Localized resource similar to "The requested operation cannot be completed due to a license restrictions. You need to have a  full license to be able  to complete this operation."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.TrialLoadDocument">
            <summary>
            Localized resource similar to "With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb and so on."
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.TrialMsg">
            <summary>
            Localized resource similar to "Trial version. Please visit http://patagames.com"
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.resourceLoader">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampApproved">
            <summary>
              Looks up a localized string similar to "Approved".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampNotApproved">
            <summary>
              Looks up a localized string similar to "Not Approved".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampFinal">
            <summary>
              Looks up a localized string similar to "Final".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampConfidential">
            <summary>
              Looks up a localized string similar to "Confidential".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampForPublicRelease">
            <summary>
              Looks up a localized string similar to "For Public Release".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampNotForPublicRelease">
            <summary>
              Looks up a localized string similar to "Not For Public Release".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampForComment">
            <summary>
              Looks up a localized string similar to "For Comment".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampExperimental">
            <summary>
              Looks up a localized string similar to "Experimental".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampExpired">
            <summary>
              Looks up a localized string similar to "Expired".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampTopSecret">
            <summary>
              Looks up a localized string similar to "Top Secret".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampSold">
            <summary>
              Looks up a localized string similar to "Sold".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampAsIs">
            <summary>
              Looks up a localized string similar to "As Is".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampDepartmental">
            <summary>
              Looks up a localized string similar to "Departmental".
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Resources.RuberStampDraft">
            <summary>
              Looks up a localized string similar to "Draft".
            </summary>
        </member>
        <member name="T:Patagames.Pdf.REFOBJ">
            <summary>
            Represents the object that referred by other object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.REFOBJ.ObjectNumber">
            <summary>
            Gets the number of the object which is referred by <see cref="P:Patagames.Pdf.REFOBJ.ReferredBy"/> objects.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.REFOBJ.ReferTo">
            <summary>
            Gets the <see cref="T:Patagames.Pdf.Net.BasicTypes.PdfTypeBase"/> object that is reffered by <see cref="P:Patagames.Pdf.REFOBJ.ReferredBy"/> objects or null if such object does not exists.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.REFOBJ.ReferredBy">
            <summary>
            Gets an array of objects which are referred to <see cref="P:Patagames.Pdf.REFOBJ.ObjectNumber"/>/<see cref="P:Patagames.Pdf.REFOBJ.ReferTo"/>.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.AnnotDrawing">
            <summary>
            Represents a collection of drawing functions for standard annotation,
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.LineEndingRectK">
            <summary>
            The coefficient used to calculate the bounding box for line endings.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.squiglyKX">
            <summary>
            Coefficient of expansion of a squiggly crest on width
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.squiglyKY">
            <summary>
            Coefficient of expansion of a squiggly crest on height
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyLengthDK">
            <summary>
            coefficient of distance between centers of circles of neighboring waves
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyIntencityK">
            <summary>
            coefficient of radius of a circle of a wave, depends on intensity of effect
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyCutout">
            <summary>
            maximum number of iterations in calculating waves for an ellipse
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyStepFactor">
            <summary>
            coefficient for the iteration angle
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyLimitFactor">
            <summary>
            coefficient for calculating the minimum distance of the intersection of circles defining waves
            </summary>
        </member>
        <member name="F:Patagames.Pdf.AnnotDrawing.CloudyLengthTail">
            <summary>
            angle determining the tail of the wave
            </summary>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CalcBBox(System.Collections.IEnumerable)">
            <summary>
            Calculate bounding box for a collection of PdfPageObjects
            </summary>
            <param name="collection">Collection of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/></param>
            <returns>Overal bounding box for entrie collection of objects</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetInnerRectangle(Patagames.Pdf.FS_RECTF,System.Single[])">
            <summary>
            Calculate inner rectangle  for annotation
            </summary>
            <param name="annotRect">Annotation rectangle.</param>
            <param name="innerRect">The four numbers correspond to the differences in default user space between the left, top, right, and bottom coordinates of Rect and those of the inner rectangle, respectively. </param>
            <returns>Inner rectangle for annotation.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.AreEqual(System.Single,System.Single)">
            <summary>
            Checks two values of float type for equality
            </summary>
            <param name="a">A - value</param>
            <param name="b">B - value</param>
            <returns>True if a equal b</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetVectorAng(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Calculate angle of the line specified.
            </summary>
            <param name="from">First point of the line.</param>
            <param name="to">Second point of the line.</param>
            <returns>An angle in the range from 0 to 2*PI, clockwise</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.TransforQuad(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Transforms the quadrilateral with the specified matrix.
            </summary>
            <param name="m">Transformation matrix.</param>
            <param name="quad">The quadrilateral to be transformed.</param>
            <returns>The transformed quadrilateral.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.InflateRect(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Expands or shrinks the rectangle by using the specified value amount, in all directions.
            </summary>
            <param name="rect">The <see cref="T:Patagames.Pdf.FS_RECTF"/> structure to modify.</param>
            <param name="val">The amount by which to expand or shrink the rectangle.</param>
            <returns>The resulting rectangle.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.IsRayCross(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF)">
            <summary>
            Do two rays intersect or not
            </summary>
            <param name="lp1">the beginning of the first ray</param>
            <param name="lp2">the end of the first ray</param>
            <param name="rp1">the beginning of the second ray</param>
            <param name="rp2">the end of the second ray</param>
            <returns>Boolean value. 1 - the rays intersect, 0 - no</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateTextObjects(Patagames.Pdf.Net.PdfDocument,System.String,System.String,System.Single,Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,System.Single,Patagames.Pdf.Enums.JustifyTypes,Patagames.Pdf.FS_RECTF)">
            <summary>
            Creates a collection of text objects constructed on given parameters.
            </summary>
            <param name="doc">Pdf document</param>
            <param name="text">Text string.</param>
            <param name="fontName">Font that be used for text object.</param>
            <param name="fontSize">Font size.</param>
            <param name="strokeColor">Stroke color.</param>
            <param name="fillColor">Fill color.</param>
            <param name="padding">Value used to padding calculation.</param>
            <param name="textAlignment">Text alignment.</param>
            <param name="rect">Rectangle in which the text should be inscribed</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfTextObject"/> or empty collection if there is no any text objects.</returns>
            <remarks>Splits a text string into lines (by words) that fit into a given rectangle and creates text objects one by one for each line.</remarks>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateRuberStamp(System.String,Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_RECTF,Patagames.Pdf.Net.PdfFont)">
            <summary>
            Creates a collection that contains  paths and texts used to drawing the ruber stamp annotation.
            </summary>
            <param name="text">The text drawing inside  stamp.</param>
            <param name="color">The stamp color. Used for text and border.</param>
            <param name="rect">The annotation rectangle.</param>
            <param name="font">The font used for text objects.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> or empty collection if there is no any objects.</returns>
            <remarks>This method scales the created text object so that it always fits all in one line.</remarks>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateCaret(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_RECTF)">
            <summary>
            Creates a collection that contains paths for caret annotation.
            </summary>
            <param name="color">The color of the caret to be draw.</param>
            <param name="rect">The bounding box the caret will be drawn</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any objects.</returns>
            <remarks>This method do not create new paragrapth symbol used for annotation.</remarks>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateSquare(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,System.Single,System.Single[],Patagames.Pdf.Enums.BorderStyles,Patagames.Pdf.Enums.BorderEffects,System.Int32,Patagames.Pdf.FS_RECTF)">
            <summary>
            Creates a collection that contains paths for square annotation.
            </summary>
            <param name="strokeColor">Stroke color.</param>
            <param name="fillColor">Fill color.</param>
            <param name="borderWidth">The border width in points. If this value is 0, no border is drawn.</param>
            <param name="dashPattern">A dash array defining a pattern of dashes and gaps to be used in drawing a dashed border.</param>
            <param name="borderStyle">A border style.</param>
            <param name="borderEffect">A border effect to apply.</param>
            <param name="effectIntencity">A number describing the intensity of the effect. Suggested values range from 0 to 2. </param>
            <param name="rect">Bounding box in which the rectangle should be inscribed.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateCircle(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,System.Single,System.Single[],Patagames.Pdf.Enums.BorderStyles,Patagames.Pdf.Enums.BorderEffects,System.Int32,Patagames.Pdf.FS_RECTF)">
            <summary>
            Creates a collection that contains paths for circle annotation.
            </summary>
            <param name="strokeColor">Stroke color.</param>
            <param name="fillColor">Fill color.</param>
            <param name="lineWidth">The border width in points. If this value is 0, no border is drawn.</param>
            <param name="dashPattern">A dash array defining a pattern of dashes and gaps to be used in drawing a dashed border.</param>
            <param name="borderStyle">A border style.</param>
            <param name="borderEffect">A border effect to apply.</param>
            <param name="effectIntencity">A number describing the intensity of the effect. Suggested values range from 0 to 2. </param>
            <param name="rect">Bounding box in which the circle should be inscribed.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateLine(System.Collections.Generic.IList{Patagames.Pdf.FS_POINTF},Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,Patagames.Pdf.Net.Annotations.PdfLineEndingCollection,System.Single,System.Single,System.Single,System.String,System.Boolean,Patagames.Pdf.FS_SIZEF,Patagames.Pdf.Enums.CaptionPositions,System.Single,System.Single[],Patagames.Pdf.Enums.BorderStyles,Patagames.Pdf.Net.PdfFont)">
            <summary>
            Creates a collection that contains paths for line annotation.
            </summary>
            <param name="line">A collection of two points, specifying the starting and ending coordinates of the line in default user space.</param>
            <param name="lineColor">The line color </param>
            <param name="interiorColor">The fill color with which to fill the annotation’s line endings, if any.</param>
            <param name="endings">A collection of two line ending styles to be used in drawing the line.</param>
            <param name="leaderLineLenght">The length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself.</param>
            <param name="leaderLineExtension">A  non-negative number representing the length of leader line extensions that extend from the line proper 180 degrees from the leader lines.</param>
            <param name="leaderLineOffset">A non-negative number representing the length of the leader line offset, which is the amount of empty space between the endpoints of the annotation and the beginning of the leader lines.</param>
            <param name="caption"></param>
            <param name="showCaption">If true, the text specified by the caption should be replicated as a caption in the appearance of the line.</param>
            <param name="captionOffset">The offset of the caption text from its normal position.</param>
            <param name="captionPosition">A value describing the annotation’s caption positioning.</param>
            <param name="lineWidth">The line width.</param>
            <param name="dashPattern">Dash pattern.</param>
            <param name="lineStyle">The line style</param>
            <param name="font">The font used for the text drawing.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> or empty collection if there is no any path objects.</returns>
            <remarks>
            <para>
            A positive value of leaderLineLenght means that the leader lines appear in the direction that is clockwise when traversing the line from its starting point to its ending point; a negative value indicates the opposite direction.
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateLines(Patagames.Pdf.FS_COLOR,System.Collections.Generic.IList{Patagames.Pdf.FS_POINTF},Patagames.Pdf.Enums.LineJoin,System.Single,System.Single[],Patagames.Pdf.Enums.BorderStyles,System.Boolean,Patagames.Pdf.Enums.BorderEffects,System.Int32)">
            <summary>
            Creates a collection that contains paths for line with given parameters.
            </summary>
            <param name="strokeColor">Stroke color.</param>
            <param name="vertices">Line's vertices.</param>
            <param name="lineJoin">Join style.</param>
            <param name="lineWidth">Line width.</param>
            <param name="dashPattern">Dash pattern.</param>
            <param name="borderStyle">Border srtyle.</param>
            <param name="isClosed">Indicates whether the figure should be closed.</param>
            <param name="borderEffect">Border effect.</param>
            <param name="effectIntencity">Border effect intencity.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateCalloutLines(Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,System.Collections.Generic.IList{Patagames.Pdf.FS_POINTF},Patagames.Pdf.Enums.LineJoin,Patagames.Pdf.Net.Annotations.PdfLineEndingCollection,System.Single,System.Single[],Patagames.Pdf.Enums.BorderStyles)">
            <summary>
            Creates a collection that contains paths for the callout lines.
            </summary>
            <param name="strokeColor">The color of the line.</param>
            <param name="fillColor">InteriorColor for filling of line endings if any.</param>
            <param name="lines">A collection of vertices specifying a callout line.</param>
            <param name="lineJoin">The line join style specifies the shape to be used at the corners of paths that are used for callouts lines.</param>
            <param name="endings">A collection of the line ending styles to be used in drawing the callout lines.</param>
            <param name="lineWidth">The line width in points. If this value is 0, no border is drawn.</param>
            <param name="dashPattern">A dash array defining a pattern of dashes and gaps to be used in drawing a dashed line.</param>
            <param name="borderStyle">A line style.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateLineEnding(Patagames.Pdf.FS_POINTF,Patagames.Pdf.FS_POINTF,Patagames.Pdf.Enums.LineEndingStyles,System.Single,Patagames.Pdf.FS_COLOR,Patagames.Pdf.FS_COLOR,Patagames.Pdf.Enums.BorderStyles,System.Single[])">
            <summary>
             Creates a  a collection of path objects which represents the line ending
            </summary>
            <param name="target">The point where the line ending should be placed</param>
            <param name="from">The second point of the input line for this ending.</param>
            <param name="e">The line ending style.</param>
            <param name="lineWidth">The line width to be used to drawn of this ending</param>
            <param name="strokeColor">The color of the line.</param>
            <param name="interiorColor">Interior color with which to fill the annotation’s line endings.</param>
            <param name="lineStyle">A line style.</param>
            <param name="dashPattern">A dash array defining a pattern of dashes and gaps to be used in drawing a dashed line.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateHighlight(Patagames.Pdf.FS_COLOR,Patagames.Pdf.Net.PdfQuadPointsCollection)">
            <summary>
            Creates a collection of path objects which represents the text highlight.
            </summary>
            <param name="fillColor">The color of the higlight.</param>
            <param name="quadPoints">A collection of the quadrilaterals which should be highlighted.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateUnderlineStrikeout(Patagames.Pdf.FS_COLOR,Patagames.Pdf.Net.PdfQuadPointsCollection,System.Single,System.Single)">
            <summary>
            Creates a collection of path objects which represents the strikeout/underline.
            </summary>
            <param name="strokeColor">The color of the strikeout/underline.</param>
            <param name="quadPoints">A collection of the quadrilaterals in which Underline/strikeout should be drawn.</param>
            <param name="displacePercent">The place where the line should be placed. In percentage of length of side edges(left - (x1;y1)-(x3;y3) and right (x2;y2)-(x4;y4).</param>
            <param name="lineWidthPercent">The line width. In percentages of length of least side edge.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.CreateSquiggly(Patagames.Pdf.FS_COLOR,Patagames.Pdf.Net.PdfQuadPointsCollection,System.Single,System.Single)">
            <summary>
            Creates a collection of path objects which represents the squiggly line.
            </summary>
            <param name="strokeColor">The color of the strikeout/underline.</param>
            <param name="quadPoints">A collection of the quadrilaterals in which the squiggly line should be drawn</param>
            <param name="displacePercent">The place where the line should be placed. In percentage of length of side edges(left - (x1;y1)-(x3;y3) and right (x2;y2)-(x4;y4).</param>
            <param name="lineWidthPercent">The line width. In percentages of length of least side edge.</param>
            <returns>Collection of <see cref="T:Patagames.Pdf.Net.PdfPathObject"/> or empty collection if there is no any path objects.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetSquarePoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a square
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetCirclePoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a circle
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetHighlightPoints(Patagames.Pdf.FS_QUADPOINTSF)">
            <summary>
            Get points for a text highlight
            </summary>
            <param name="qp">The quadrilateral.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetTextMarkupPoints(Patagames.Pdf.FS_QUADPOINTSF,System.Single,System.Single,System.Single@)">
            <summary>
            Get points for text strikeout and text underline.
            </summary>
            <param name="qp">The quadrilateral.</param>
            <param name="displacePercent">The place where the line should be placed. In percentage of length of side edges(left - (x1;y1)-(x3;y3) and right (x2;y2)-(x4;y4).</param>
            <param name="lineWidthPercent">The line width. In percentages of length of least side edge.</param>
            <param name="lineWidth">Returns the line width has been calculated.</param>
            <returns>An array that contais two points of the underline or strikeout line.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetSquigglyPoints(Patagames.Pdf.FS_QUADPOINTSF,System.Single,System.Single,System.Single@)">
            <summary>
            Get points for text squiggly.
            </summary>
            <param name="qp">The quadrilateral.</param>
            <param name="displacePercent">The place where the line should be placed. In percentage of length of side edges(left - (x1;y1)-(x3;y3) and right (x2;y2)-(x4;y4).</param>
            <param name="lineWidthPercent">The line width. In percentages of length of least side edge.</param>
            <param name="lineWidth">Returns the line width has been calculated.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetCloudySquarePoints(Patagames.Pdf.FS_RECTF,System.Int32,System.Single)">
            <summary>
            Creates a collection that contains paths for square annotation. Where border should appear “cloudy”.
            </summary>
            <param name="rect">object of the FS_RECTF type that defines the figure</param>
            <param name="effectIntencity">A number describing the intensity of the effect.</param>
            <param name="lineWidth">The border width in points.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetCloudyCirclePoints(Patagames.Pdf.FS_RECTF,System.Int32,System.Single)">
            <summary>
            Creates a collection that contains paths for circle (ellipse) annotation. Where border should appear “cloudy”.
            </summary>
            <param name="innerRect">Bounding box in which the ellipse should be inscribed.</param>
            <param name="effectIntencity">A number describing the intensity of the effect.</param>
            <param name="lineWidth">The border width in points.</param>
            <returns>A collection of points for this figure and the cloud boundary.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetCloudyLinePoints(System.Collections.Generic.IList{Patagames.Pdf.FS_POINTF},System.Int32)">
            <summary>
            Creates a collection that contains the paths that define the broken line. Where the border should seem "cloudy".
            </summary>
            <param name="vertices">List of points of broken line</param>
            <param name="effectIntencity">A number describing the intensity of the effect.</param>
            <returns>A collection of points for this line and the cloud boundary.</returns>
            <remarks>
            If the line is not closed, then the last point automatically joins the first one.
            The wave is drawn at the left in the direction of drawing line, hence the line is recommended to draw in a clockwise direction.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetButtPoints(Patagames.Pdf.FS_RECTF)">
            <summary>
            Get points for a  short line
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetDiamondPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a diamond shape filled with the annotation’s interior color
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetSlashPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetOpenArrowPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for two short lines meeting in an acute angle to form an open arrowhead
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetROpenArrowPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for two short lines in the reverse direction from OpenArrow
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetClosedArrowPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a triangle filled with internal color annotations
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="M:Patagames.Pdf.AnnotDrawing.GetRClosedArrowPoints(Patagames.Pdf.FS_RECTF,System.Single)">
            <summary>
            Get points for a triangular closed arrowhead in the reverse direction from ClosedArrow
            </summary>
            <param name="rect">Rectangle in which the figure should be inscribed.</param>
            <param name="lineWidth">The line width.</param>
            <returns>A Collection of points of this figure.</returns>
        </member>
        <member name="T:Patagames.Pdf.AnnotDrawing.FS_QLOUDYPOINTF">
            <summary>
            Represents a segment of a cloud
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FSDKUnsupportHandlerCallback">
            <summary>
            UnSupport Object process handling function.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nType">The type of unsupportObject.</param>
        </member>
        <member name="T:Patagames.Pdf.UNSUPPORT_INFO">
            <summary>
            Represents UNSUPPORT_INFO structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.UNSUPPORT_INFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.UNSUPPORT_INFO.FSDKUnsupportHandler">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.FSDKUnsupportHandlerCallback"/> delegate for detail
            </summary>
        </member>
    </members>
</doc>
