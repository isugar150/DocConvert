<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FubarDev.FtpServer.FileSystem.DotNet</name>
    </assembly>
    <members>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry">
            <summary>
            A <see cref="T:FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry"/> implementation for the standard
            .NET file system functionality.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.#ctor(System.IO.DirectoryInfo,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry"/> class.
            </summary>
            <param name="dirInfo">The <see cref="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.DirectoryInfo"/> to extract the information from.</param>
            <param name="isRoot">Defines whether this the root directory.</param>
            <param name="allowDeleteIfNotEmpty">Is deletion of this directory allowed if it's not empty.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.DirectoryInfo">
            <summary>
            Gets the directory information.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.IsRoot">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.IsDeletable">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.HasChildEntries(System.IO.DirectoryInfo)">
            <summary>
            Check if the directory has child entries.
            </summary>
            <param name="directoryInfo">The directory that gets checked for child entries.</param>
            <returns><see langword="null"/> when an exception occurred.</returns>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.CheckIfDeletable">
            <summary>
            Checks if a directory is deletable.
            </summary>
            <returns><see langword="true"/> when the directory is deletable.</returns>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry">
            <summary>
            A <see cref="T:FubarDev.FtpServer.FileSystem.IUnixFileEntry"/> implementation for the standard
            .NET file system functionality.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry"/> class.
            </summary>
            <param name="info">The <see cref="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.FileInfo"/> to extract the information from.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.FileInfo">
            <summary>
            Gets the file information.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.Size">
            <inheritdoc/>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem">
            <summary>
            A <see cref="T:FubarDev.FtpServer.FileSystem.IUnixFileSystem"/> implementation that uses the
            standard .NET functionality to access the file system.
            </summary>
        </member>
        <member name="F:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.DefaultStreamBufferSize">
            <summary>
            The default buffer size for copying from one stream to another.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem"/> class.
            </summary>
            <param name="rootPath">The path to use as root.</param>
            <param name="allowNonEmptyDirectoryDelete">Defines whether the deletion of non-empty directories is allowed.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem"/> class.
            </summary>
            <param name="rootPath">The path to use as root.</param>
            <param name="allowNonEmptyDirectoryDelete">Defines whether the deletion of non-empty directories is allowed.</param>
            <param name="streamBufferSize">Buffer size to be used in async IO methods.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.SupportsNonEmptyDirectoryDelete">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.FileSystemEntryComparer">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.Root">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.SupportsAppend">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.GetEntriesAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.GetEntryByNameAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.MoveAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.UnlinkAsync(FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.CreateDirectoryAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.OpenReadAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.AppendAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.Nullable{System.Int64},System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.CreateAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.ReplaceAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.SetMacTimeAsync(FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Sets the modify/access/create timestamp of a file system item.
            </summary>
            <param name="entry">The <see cref="T:FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry"/> to change the timestamp for.</param>
            <param name="modify">The modification timestamp.</param>
            <param name="access">The access timestamp.</param>
            <param name="create">The creation timestamp.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The modified <see cref="T:FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry"/>.</returns>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry">
            <summary>
            Base class for System.IO based file system entries.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.#ctor(System.IO.FileSystemInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry"/> class.
            </summary>
            <param name="fsInfo">The <see cref="T:System.IO.FileSystemInfo"/> to extract the information from.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.Info">
            <summary>
            Gets the underlying <see cref="T:System.IO.DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.Name">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.Permissions">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.LastWriteTime">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.CreatedTime">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.NumberOfLinks">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.Owner">
            <inheritdoc/>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.Group">
            <inheritdoc/>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions">
            <summary>
            Options for the .NET API based file system access.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions.RootPath">
            <summary>
            Gets or sets the root path for all users.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions.StreamBufferSize">
            <summary>
            Gets or sets the buffer size to be used in async IO methods.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions.AllowNonEmptyDirectoryDelete">
            <summary>
            Gets or sets a value indicating whether deletion of non-empty directories is allowed.
            </summary>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider">
            <summary>
            A <see cref="T:FubarDev.FtpServer.FileSystem.IFileSystemClassFactory"/> implementation that uses
            the standard .NET functionality to provide file system access.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider.#ctor(Microsoft.Extensions.Options.IOptions{FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions},FubarDev.FtpServer.FileSystem.IAccountDirectoryQuery,Microsoft.Extensions.Logging.ILogger{FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider"/> class.
            </summary>
            <param name="options">The file system options.</param>
            <param name="accountDirectoryQuery">Interface to query account directories.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider.Create(FubarDev.FtpServer.IAccountInformation)">
            <inheritdoc/>
        </member>
        <member name="T:FubarDev.FtpServer.DotNetFtpServerBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:FubarDev.FtpServer.IFtpServerBuilder"/>.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.DotNetFtpServerBuilderExtensions.UseDotNetFileSystem(FubarDev.FtpServer.IFtpServerBuilder)">
            <summary>
            Uses the .NET file system API.
            </summary>
            <param name="builder">The server builder used to configure the FTP server.</param>
            <returns>the server builder used to configure the FTP server.</returns>
        </member>
    </members>
</doc>
